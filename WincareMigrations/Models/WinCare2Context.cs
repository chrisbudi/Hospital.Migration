// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace WincareMigrations.Models;

public partial class WinCare2Context : DbContext
{
    public WinCare2Context(DbContextOptions<WinCare2Context> options)
        : base(options)
    {
    }

    public virtual DbSet<TmAntrianCounter> TmAntrianCounters { get; set; }

    public virtual DbSet<TmAntrianCounterAudio> TmAntrianCounterAudios { get; set; }

    public virtual DbSet<TmAntrianLayanan> TmAntrianLayanans { get; set; }

    public virtual DbSet<TmAntrianLokasi> TmAntrianLokasis { get; set; }

    public virtual DbSet<TmAsal> TmAsals { get; set; }

    public virtual DbSet<TmAsalGroup> TmAsalGroups { get; set; }

    public virtual DbSet<TmAturanpakai> TmAturanpakais { get; set; }

    public virtual DbSet<TmBank> TmBanks { get; set; }

    public virtual DbSet<TmBarang> TmBarangs { get; set; }

    public virtual DbSet<TmBarangAturanpakai> TmBarangAturanpakais { get; set; }

    public virtual DbSet<TmCoa> TmCoas { get; set; }

    public virtual DbSet<TmCoaGolongan> TmCoaGolongans { get; set; }

    public virtual DbSet<TmCoaKlasifikasi> TmCoaKlasifikasis { get; set; }

    public virtual DbSet<TmCoaSubklasifikasi> TmCoaSubklasifikasis { get; set; }

    public virtual DbSet<TmCounttraffic> TmCounttraffics { get; set; }

    public virtual DbSet<TmDepartement> TmDepartements { get; set; }

    public virtual DbSet<TmDiagnosa> TmDiagnosas { get; set; }

    public virtual DbSet<TmDiagnosaMatrix> TmDiagnosaMatrices { get; set; }

    public virtual DbSet<TmDokter> TmDokters { get; set; }

    public virtual DbSet<TmDokterHonor> TmDokterHonors { get; set; }

    public virtual DbSet<TmDokterNote> TmDokterNotes { get; set; }

    public virtual DbSet<TmDtd> TmDtds { get; set; }

    public virtual DbSet<TmExtentiontelp> TmExtentiontelps { get; set; }

    public virtual DbSet<TmFarmakoterapi> TmFarmakoterapis { get; set; }

    public virtual DbSet<TmFarmakoterapiSub> TmFarmakoterapiSubs { get; set; }

    public virtual DbSet<TmGizi> TmGizis { get; set; }

    public virtual DbSet<TmGudang> TmGudangs { get; set; }

    public virtual DbSet<TmHargabarang> TmHargabarangs { get; set; }

    public virtual DbSet<TmHargakamar> TmHargakamars { get; set; }

    public virtual DbSet<TmHargarekanan> TmHargarekanans { get; set; }

    public virtual DbSet<TmHasillab> TmHasillabs { get; set; }

    public virtual DbSet<TmHasilrad> TmHasilrads { get; set; }

    public virtual DbSet<TmJadwaldokter> TmJadwaldokters { get; set; }

    public virtual DbSet<TmKamarinap> TmKamarinaps { get; set; }

    public virtual DbSet<TmKamarinapHarga> TmKamarinapHargas { get; set; }

    public virtual DbSet<TmKamarinapRekanan> TmKamarinapRekanans { get; set; }

    public virtual DbSet<TmKelompokbarang> TmKelompokbarangs { get; set; }

    public virtual DbSet<TmKodepo> TmKodepos { get; set; }

    public virtual DbSet<TmLaboratorium> TmLaboratoria { get; set; }

    public virtual DbSet<TmLaboratoriumGroup> TmLaboratoriumGroups { get; set; }

    public virtual DbSet<TmLaboratoriumHarga> TmLaboratoriumHargas { get; set; }

    public virtual DbSet<TmLaboratoriumRekanan> TmLaboratoriumRekanans { get; set; }

    public virtual DbSet<TmMap> TmMaps { get; set; }

    public virtual DbSet<TmMasterLab2> TmMasterLab2s { get; set; }

    public virtual DbSet<TmMasterPaketH> TmMasterPaketHs { get; set; }

    public virtual DbSet<TmMasterRad2> TmMasterRad2s { get; set; }

    public virtual DbSet<TmMasterTnd> TmMasterTnds { get; set; }

    public virtual DbSet<TmMasterTnd2> TmMasterTnd2s { get; set; }

    public virtual DbSet<TmModule> TmModules { get; set; }

    public virtual DbSet<TmModuleDetail> TmModuleDetails { get; set; }

    public virtual DbSet<TmMorfologi> TmMorfologis { get; set; }

    public virtual DbSet<TmObatunit> TmObatunits { get; set; }

    public virtual DbSet<TmPaketHarga> TmPaketHargas { get; set; }

    public virtual DbSet<TmPaketHargaBaru> TmPaketHargaBarus { get; set; }

    public virtual DbSet<TmPaketMatrix> TmPaketMatrices { get; set; }

    public virtual DbSet<TmPaketRekanan> TmPaketRekanans { get; set; }

    public virtual DbSet<TmPaketdetail> TmPaketdetails { get; set; }

    public virtual DbSet<TmPasien> TmPasiens { get; set; }

    public virtual DbSet<TmPemeriksaanpenunjang> TmPemeriksaanpenunjangs { get; set; }

    public virtual DbSet<TmPemeriksaanpenunjangdetail> TmPemeriksaanpenunjangdetails { get; set; }

    public virtual DbSet<TmRadiologi> TmRadiologis { get; set; }

    public virtual DbSet<TmRadiologiGroup> TmRadiologiGroups { get; set; }

    public virtual DbSet<TmRadiologiHarga> TmRadiologiHargas { get; set; }

    public virtual DbSet<TmRadiologiRekanan> TmRadiologiRekanans { get; set; }

    public virtual DbSet<TmRekanan> TmRekanans { get; set; }

    public virtual DbSet<TmRuang> TmRuangs { get; set; }

    public virtual DbSet<TmSeptember2015> TmSeptember2015s { get; set; }

    public virtual DbSet<TmSettingAdm> TmSettingAdms { get; set; }

    public virtual DbSet<TmSettingBayar> TmSettingBayars { get; set; }

    public virtual DbSet<TmSettingDaftar> TmSettingDaftars { get; set; }

    public virtual DbSet<TmSettingKomputerAntrian> TmSettingKomputerAntrians { get; set; }

    public virtual DbSet<TmSettingPemeriksaan> TmSettingPemeriksaans { get; set; }

    public virtual DbSet<TmSettingPrshn> TmSettingPrshns { get; set; }

    public virtual DbSet<TmSmf> TmSmfs { get; set; }

    public virtual DbSet<TmStandartfield> TmStandartfields { get; set; }

    public virtual DbSet<TmStandartfieldGroup> TmStandartfieldGroups { get; set; }

    public virtual DbSet<TmStatus> TmStatuses { get; set; }

    public virtual DbSet<TmSupplier> TmSuppliers { get; set; }

    public virtual DbSet<TmTarifGroup> TmTarifGroups { get; set; }

    public virtual DbSet<TmTarifHarga> TmTarifHargas { get; set; }

    public virtual DbSet<TmTarifMatrix> TmTarifMatrices { get; set; }

    public virtual DbSet<TmTarifPelayanan> TmTarifPelayanans { get; set; }

    public virtual DbSet<TmTarifRekanan> TmTarifRekanans { get; set; }

    public virtual DbSet<TmTarifRekananSub> TmTarifRekananSubs { get; set; }

    public virtual DbSet<TmTarifdetail> TmTarifdetails { get; set; }

    public virtual DbSet<TmTarifnonmedi> TmTarifnonmedis { get; set; }

    public virtual DbSet<TmTarifnonmedisGroup> TmTarifnonmedisGroups { get; set; }

    public virtual DbSet<TmTarifnonmedisHarga> TmTarifnonmedisHargas { get; set; }

    public virtual DbSet<TmTarifnonmedisMatrix> TmTarifnonmedisMatrices { get; set; }

    public virtual DbSet<TmTarifnonmedisRekanan> TmTarifnonmedisRekanans { get; set; }

    public virtual DbSet<TmTindakan> TmTindakans { get; set; }

    public virtual DbSet<TmUser> TmUsers { get; set; }

    public virtual DbSet<TmUserGroup> TmUserGroups { get; set; }

    public virtual DbSet<TmhKamar> TmhKamars { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<TmAntrianCounter>(entity =>
        {
            entity.HasKey(e => e.IdCounter);

            entity.ToTable("TM_ANTRIAN_COUNTER");

            entity.HasIndex(e => e.IdCounter, "IX_TM_ANTRIAN_COUNTER_idcounter");

            entity.HasIndex(e => e.IsAktif, "IX_TM_ANTRIAN_COUNTER_isaktif");

            entity.HasIndex(e => e.VKdcounter, "IX_TM_ANTRIAN_COUNTER_vkdcounter");

            entity.HasIndex(e => e.VCounter, "IX_TM_ANTRIAN_COUNTER_vnmcounter");

            entity.Property(e => e.IdCounter)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_COUNTER");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VCounter)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_COUNTER");
            entity.Property(e => e.VKdcounter)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KDCOUNTER");
            entity.Property(e => e.VKdlayanan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KDLAYANAN");
            entity.Property(e => e.VKdlokasi)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KDLOKASI");
        });

        modelBuilder.Entity<TmAntrianCounterAudio>(entity =>
        {
            entity.HasKey(e => e.IdCounteraudio);

            entity.ToTable("TM_ANTRIAN_COUNTER_AUDIO");

            entity.HasIndex(e => e.IdCounteraudio, "IX_TM_ANTRIAN_COUNTER_AUDIO_idcounteraudio");

            entity.HasIndex(e => e.IsAktif, "IX_TM_ANTRIAN_COUNTER_AUDIO_isaktif");

            entity.HasIndex(e => e.VKdlayanan, "IX_TM_ANTRIAN_COUNTER_AUDIO_v_kdlayanan");

            entity.HasIndex(e => e.VKdlokasi, "IX_TM_ANTRIAN_COUNTER_AUDIO_v_kdlokasi");

            entity.HasIndex(e => e.VCounter, "IX_TM_ANTRIAN_COUNTER_AUDIO_vcounter");

            entity.HasIndex(e => e.VFile, "IX_TM_ANTRIAN_COUNTER_AUDIO_vfile");

            entity.HasIndex(e => e.VKdcounter, "IX_TM_ANTRIAN_COUNTER_AUDIO_vkdcounter");

            entity.HasIndex(e => e.VNomor, "IX_TM_ANTRIAN_COUNTER_AUDIO_vnomor");

            entity.Property(e => e.IdCounteraudio)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_COUNTERAUDIO");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VCounter)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_COUNTER");
            entity.Property(e => e.VFile)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_FILE");
            entity.Property(e => e.VKdcounter)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KDCOUNTER");
            entity.Property(e => e.VKdlayanan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KDLAYANAN");
            entity.Property(e => e.VKdlokasi)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KDLOKASI");
            entity.Property(e => e.VNomor)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("V_NOMOR");
        });

        modelBuilder.Entity<TmAntrianLayanan>(entity =>
        {
            entity.HasKey(e => e.IdLayanan).HasName("PK_TM_ANTRIAN_LAYANAN_1");

            entity.ToTable("TM_ANTRIAN_LAYANAN");

            entity.HasIndex(e => e.IdLayanan, "IX_TM_ANTRIAN_LAYANAN_idlayanan");

            entity.HasIndex(e => e.VInisial, "IX_TM_ANTRIAN_LAYANAN_inisial");

            entity.HasIndex(e => e.IsAktif, "IX_TM_ANTRIAN_LAYANAN_isaktif");

            entity.HasIndex(e => e.VKdlayanan, "IX_TM_ANTRIAN_LAYANAN_vkdlayan");

            entity.HasIndex(e => e.VLayanan, "IX_TM_ANTRIAN_LAYANAN_vlayanan");

            entity.Property(e => e.IdLayanan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_LAYANAN");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VInisial)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_INISIAL");
            entity.Property(e => e.VKdlayanan)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KDLAYANAN");
            entity.Property(e => e.VKdlokasi)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KDLOKASI");
            entity.Property(e => e.VLayanan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_LAYANAN");
        });

        modelBuilder.Entity<TmAntrianLokasi>(entity =>
        {
            entity.HasKey(e => e.VKdlokasi);

            entity.ToTable("TM_ANTRIAN_LOKASI");

            entity.HasIndex(e => e.Action, "IX_TM_ANTRIAN_LOKASI_action");

            entity.HasIndex(e => e.IdLokasi, "IX_TM_ANTRIAN_LOKASI_idlokasi");

            entity.HasIndex(e => e.IsAktif, "IX_TM_ANTRIAN_LOKASI_isaktif");

            entity.HasIndex(e => e.VKdlokasi, "IX_TM_ANTRIAN_LOKASI_vkdlokasi");

            entity.HasIndex(e => e.VLokasi, "IX_TM_ANTRIAN_LOKASI_vlokasi");

            entity.Property(e => e.VKdlokasi)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KDLOKASI");
            entity.Property(e => e.Action)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ACTION");
            entity.Property(e => e.IdLokasi)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_LOKASI");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VLokasi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_LOKASI");
        });

        modelBuilder.Entity<TmAsal>(entity =>
        {
            entity.HasKey(e => e.VKdasal);

            entity.ToTable("TM_ASAL");

            entity.HasIndex(e => e.IdAsal, "IX_TM_ASAL_ID_ASAL");

            entity.HasIndex(e => e.IdAsalgroup, "IX_TM_ASAL_ID_ASALGROUP");

            entity.HasIndex(e => e.IsAktif, "IX_TM_ASAL_IS_AKTIF");

            entity.HasIndex(e => e.VKdasal, "IX_TM_ASAL_V_KDASAL");

            entity.HasIndex(e => e.VNmasal, "IX_TM_ASAL_V_NMASAL");

            entity.Property(e => e.VKdasal)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDASAL");
            entity.Property(e => e.IdAsal)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_ASAL");
            entity.Property(e => e.IdAsalgroup)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_ASALGROUP");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VNmasal)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMASAL");

            entity.HasOne(d => d.IdAsalgroupNavigation).WithMany(p => p.TmAsals)
                .HasForeignKey(d => d.IdAsalgroup)
                .HasConstraintName("FK_TM_ASAL_TM_ASAL_GROUP");
        });

        modelBuilder.Entity<TmAsalGroup>(entity =>
        {
            entity.HasKey(e => e.IdAsalgroup);

            entity.ToTable("TM_ASAL_GROUP");

            entity.HasIndex(e => e.IdAsalgroup, "IX_TM_ASAL_GROUP_ID_ASALGROUP");

            entity.HasIndex(e => e.IsAktif, "IX_TM_ASAL_GROUP_IS_AKTIF");

            entity.HasIndex(e => e.VNmgroupasal, "IX_TM_ASAL_GROUP_V_NMGROUPASAL");

            entity.Property(e => e.IdAsalgroup)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_ASALGROUP");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VNmgroupasal)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMGROUPASAL");
        });

        modelBuilder.Entity<TmAturanpakai>(entity =>
        {
            entity.HasKey(e => e.VKdaturanpakai);

            entity.ToTable("TM_ATURANPAKAI");

            entity.HasIndex(e => e.IdAturanpakai, "IX_TM_ATURANPAKAI_ID_ATURANPAKAI");

            entity.HasIndex(e => e.IsAktif, "IX_TM_ATURANPAKAI_IS_AKTIF");

            entity.HasIndex(e => e.VKdaturanpakai, "IX_TM_ATURANPAKAI_V_KDATURANPAKAI");

            entity.HasIndex(e => e.VKetaturanpakai, "IX_TM_ATURANPAKAI_V_KETATURANPAKAI");

            entity.HasIndex(e => e.VNmaturanpakai, "IX_TM_ATURANPAKAI_V_NMATURANPAKAI");

            entity.Property(e => e.VKdaturanpakai)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDATURANPAKAI");
            entity.Property(e => e.IdAturanpakai)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_ATURANPAKAI");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VKetaturanpakai)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KETATURANPAKAI");
            entity.Property(e => e.VNmaturanpakai)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMATURANPAKAI");
        });

        modelBuilder.Entity<TmBank>(entity =>
        {
            entity.HasKey(e => e.VKdbank);

            entity.ToTable("TM_BANK");

            entity.Property(e => e.VKdbank)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KDBANK");
            entity.Property(e => e.IdBank)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_BANK");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VAlamat)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_ALAMAT");
            entity.Property(e => e.VCabang)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_CABANG");
            entity.Property(e => e.VKdakun)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDAKUN");
            entity.Property(e => e.VKota)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KOTA");
            entity.Property(e => e.VNmbank)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMBANK");
            entity.Property(e => e.VNomorrekening)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NOMORREKENING");
            entity.Property(e => e.VTelepon)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_TELEPON");
        });

        modelBuilder.Entity<TmBarang>(entity =>
        {
            entity.HasKey(e => e.Barangid);

            entity.ToTable("TM_BARANG", tb =>
                {
                    tb.HasTrigger("UPDATE_KODEBARANG");
                    tb.HasTrigger("UPDATE_NAMABARANG");
                });

            entity.HasIndex(e => e.Etiket, "IX_TM_BARANG_ETIKET");

            entity.HasIndex(e => e.Farmakoterapi, "IX_TM_BARANG_FARMAKOTERAPI");

            entity.HasIndex(e => e.Barangid, "IX_TM_BARANG_IDBARANG");

            entity.HasIndex(e => e.Isaktif, "IX_TM_BARANG_ISAKTIF");

            entity.HasIndex(e => e.Isi, "IX_TM_BARANG_ISI");

            entity.HasIndex(e => e.Jenis, "IX_TM_BARANG_JENIS");

            entity.HasIndex(e => e.Kandungan, "IX_TM_BARANG_KANDUNGAN");

            entity.HasIndex(e => e.Kemasan, "IX_TM_BARANG_KEMASAN");

            entity.HasIndex(e => e.Kode, "IX_TM_BARANG_KODE");

            entity.HasIndex(e => e.Merk, "IX_TM_BARANG_MERK");

            entity.HasIndex(e => e.Nama, "IX_TM_BARANG_NAMA");

            entity.HasIndex(e => e.Pabrik, "IX_TM_BARANG_PABRIK");

            entity.HasIndex(e => e.Satuan, "IX_TM_BARANG_SATUAN");

            entity.HasIndex(e => e.Subfarmakoterapi, "IX_TM_BARANG_SUBFARMAKOTERAPI");

            entity.HasIndex(e => e.Tipebarang, "IX_TM_BARANG_TIPEBARANG");

            entity.HasIndex(e => e.Ukuran, "IX_TM_BARANG_UKURAN");

            entity.HasIndex(e => e.Kelompokid, "IX_TM_BARANG_kelompokid");

            entity.Property(e => e.Barangid)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("BARANGID");
            entity.Property(e => e.Diskonoff)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DISKONOFF");
            entity.Property(e => e.Diskonon)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DISKONON");
            entity.Property(e => e.Etiket)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ETIKET");
            entity.Property(e => e.EtiketQty).HasColumnName("ETIKET_QTY");
            entity.Property(e => e.Expireddate)
                .HasColumnType("datetime")
                .HasColumnName("EXPIREDDATE");
            entity.Property(e => e.Farmakoterapi)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("FARMAKOTERAPI");
            entity.Property(e => e.Hargabeli)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("HARGABELI");
            entity.Property(e => e.Hargajual)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("HARGAJUAL");
            entity.Property(e => e.IdFarmakoterapi)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_FARMAKOTERAPI");
            entity.Property(e => e.IdSubfarmakoterapi)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_SUBFARMAKOTERAPI");
            entity.Property(e => e.Isaktif).HasColumnName("ISAKTIF");
            entity.Property(e => e.Isformularium).HasColumnName("ISFORMULARIUM");
            entity.Property(e => e.Isi)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("ISI");
            entity.Property(e => e.Jenis)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("JENIS");
            entity.Property(e => e.Kandungan)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("KANDUNGAN");
            entity.Property(e => e.Kelompokid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("KELOMPOKID");
            entity.Property(e => e.Kemasan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("KEMASAN");
            entity.Property(e => e.Kode)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("KODE");
            entity.Property(e => e.Merk)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("MERK");
            entity.Property(e => e.Nama)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("NAMA");
            entity.Property(e => e.Nobatch)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NOBATCH");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("NOTE");
            entity.Property(e => e.Pabrik)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PABRIK");
            entity.Property(e => e.Satuan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SATUAN");
            entity.Property(e => e.Stokmax)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("STOKMAX");
            entity.Property(e => e.Stokmin)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("STOKMIN");
            entity.Property(e => e.Stoknow)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("STOKNOW");
            entity.Property(e => e.Subfarmakoterapi)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("SUBFARMAKOTERAPI");
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasColumnName("TIMESTAMP");
            entity.Property(e => e.Tipebarang)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("TIPEBARANG");
            entity.Property(e => e.Ukuran)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("UKURAN");

            entity.HasOne(d => d.IdFarmakoterapiNavigation).WithMany(p => p.TmBarangs)
                .HasForeignKey(d => d.IdFarmakoterapi)
                .HasConstraintName("FK_TM_BARANG_TM_FARMAKOTERAPI");

            entity.HasOne(d => d.IdSubfarmakoterapiNavigation).WithMany(p => p.TmBarangs)
                .HasForeignKey(d => d.IdSubfarmakoterapi)
                .HasConstraintName("FK_TM_BARANG_TM_FARMAKOTERAPI_SUB");

            entity.HasOne(d => d.Kelompok).WithMany(p => p.TmBarangs)
                .HasForeignKey(d => d.Kelompokid)
                .HasConstraintName("FK_TM_BARANG_TM_KELOMPOKBARANG2");
        });

        modelBuilder.Entity<TmBarangAturanpakai>(entity =>
        {
            entity.HasKey(e => e.VKdaturanpakai);

            entity.ToTable("TM_BARANG_ATURANPAKAI");

            entity.Property(e => e.VKdaturanpakai)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDATURANPAKAI");
            entity.Property(e => e.IdAturanpakai)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_ATURANPAKAI");
            entity.Property(e => e.VKetaturanpakai)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KETATURANPAKAI");
            entity.Property(e => e.VNmaturanpakai)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMATURANPAKAI");
        });

        modelBuilder.Entity<TmCoa>(entity =>
        {
            entity.HasKey(e => e.VKdakun);

            entity.ToTable("TM_COA");

            entity.HasIndex(e => e.IsAktif, "IX_TM_COA_ISAKTIF");

            entity.HasIndex(e => e.DSaldoawal, "IX_TM_COA_SALDO");

            entity.HasIndex(e => e.VDc, "IX_TM_COA_VDC");

            entity.HasIndex(e => e.VKdakun, "IX_TM_COA_VKDAKUN");

            entity.HasIndex(e => e.VNmakun, "IX_TM_COA_VNMAKUN");

            entity.Property(e => e.VKdakun)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDAKUN");
            entity.Property(e => e.DSaldoawal)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_SALDOAWAL");
            entity.Property(e => e.DTglsaldoawal)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLSALDOAWAL");
            entity.Property(e => e.IdCoa)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_COA");
            entity.Property(e => e.IdSubklasifikasi)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_SUBKLASIFIKASI");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VDc)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_DC");
            entity.Property(e => e.VNmakun)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMAKUN");
            entity.Property(e => e.VNmakunalias)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMAKUNALIAS");

            entity.HasOne(d => d.IdSubklasifikasiNavigation).WithMany(p => p.TmCoas)
                .HasForeignKey(d => d.IdSubklasifikasi)
                .HasConstraintName("FK_TM_COA_TM_COA_SUBKLASIFIKASI");
        });

        modelBuilder.Entity<TmCoaGolongan>(entity =>
        {
            entity.HasKey(e => e.IdGolongan);

            entity.ToTable("TM_COA_GOLONGAN");

            entity.HasIndex(e => e.IsAktif, "IX_TM_COA_GOLONGAN_ISAKTIF");

            entity.HasIndex(e => e.VNmgolongan, "IX_TM_COA_GOLONGAN_V_NMGOLO");

            entity.Property(e => e.IdGolongan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GOLONGAN");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VNmgolongan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMGOLONGAN");
        });

        modelBuilder.Entity<TmCoaKlasifikasi>(entity =>
        {
            entity.HasKey(e => e.IdKlasifikasi);

            entity.ToTable("TM_COA_KLASIFIKASI");

            entity.HasIndex(e => e.IsAktif, "IX_TM_COA_KLASIFIKASI_ISAKTIF");

            entity.HasIndex(e => e.VNmklasifikasi, "IX_TM_COA_KLASIFIKASI_V_NMKLASIFIKASI");

            entity.Property(e => e.IdKlasifikasi)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_KLASIFIKASI");
            entity.Property(e => e.IdGolongan)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GOLONGAN");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VNmklasifikasi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMKLASIFIKASI");
            entity.Property(e => e.VUrut)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("V_URUT");

            entity.HasOne(d => d.IdGolonganNavigation).WithMany(p => p.TmCoaKlasifikasis)
                .HasForeignKey(d => d.IdGolongan)
                .HasConstraintName("FK_TM_COA_KLASIFIKASI_TM_COA_GOLONGAN");
        });

        modelBuilder.Entity<TmCoaSubklasifikasi>(entity =>
        {
            entity.HasKey(e => e.IdSubklasifikasi);

            entity.ToTable("TM_COA_SUBKLASIFIKASI");

            entity.HasIndex(e => e.IsAktif, "IX_TM_COA_SUBKLASIFIKASI_ISAKTIF");

            entity.HasIndex(e => e.VKdsubklasifikasi, "IX_TM_COA_SUBKLASIFIKASI_KDSUB");

            entity.HasIndex(e => e.VNmsubklasifikasi, "IX_TM_COA_SUBKLASIFIKASI_NMSUB");

            entity.HasIndex(e => e.VDc, "IX_TM_COA_SUBKLASIFIKASI_VDC");

            entity.Property(e => e.IdSubklasifikasi)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_SUBKLASIFIKASI");
            entity.Property(e => e.IdKlasifikasi)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_KLASIFIKASI");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VDc)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_DC");
            entity.Property(e => e.VKdsubklasifikasi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KDSUBKLASIFIKASI");
            entity.Property(e => e.VNmsubklasifikasi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMSUBKLASIFIKASI");
            entity.Property(e => e.VUrut)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("V_URUT");

            entity.HasOne(d => d.IdKlasifikasiNavigation).WithMany(p => p.TmCoaSubklasifikasis)
                .HasForeignKey(d => d.IdKlasifikasi)
                .HasConstraintName("FK_TM_COA_SUBKLASIFIKASI_TM_COA_KLASIFIKASI");
        });

        modelBuilder.Entity<TmCounttraffic>(entity =>
        {
            entity.HasKey(e => e.Idcounttraffic);

            entity.ToTable("TM_COUNTTRAFFIC");

            entity.Property(e => e.Idcounttraffic)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDCOUNTTRAFFIC");
            entity.Property(e => e.Jam)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("JAM");
            entity.Property(e => e.Menu)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("MENU");
            entity.Property(e => e.Submenu)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SUBMENU");
            entity.Property(e => e.Tanggal)
                .HasColumnType("datetime")
                .HasColumnName("TANGGAL");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
        });

        modelBuilder.Entity<TmDepartement>(entity =>
        {
            entity.HasKey(e => e.IdDepartment);

            entity.ToTable("TM_DEPARTEMENT");

            entity.Property(e => e.IdDepartment)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_DEPARTMENT");
            entity.Property(e => e.NamaDepartemen)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("NAMA_DEPARTEMEN");
        });

        modelBuilder.Entity<TmDiagnosa>(entity =>
        {
            entity.HasKey(e => e.VKddiagnosa);

            entity.ToTable("TM_DIAGNOSA");

            entity.HasIndex(e => e.VNmdiagnosa, "IX_TM_DIAGNOSA_NMDIAG");

            entity.HasIndex(e => e.VKddiagnosa, "IX_TM_DIAGNOSA_VKDDIAG");

            entity.Property(e => e.VKddiagnosa)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDDIAGNOSA");
            entity.Property(e => e.CIspenyakit).HasColumnName("C_ISPENYAKIT");
            entity.Property(e => e.IdDiagnosa)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_DIAGNOSA");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VKddtd)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDDTD");
            entity.Property(e => e.VNmdiagnosa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_NMDIAGNOSA");
        });

        modelBuilder.Entity<TmDiagnosaMatrix>(entity =>
        {
            entity.HasKey(e => e.IdMatrixdiagnosa);

            entity.ToTable("TM_DIAGNOSA_MATRIX");

            entity.Property(e => e.IdMatrixdiagnosa)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_MATRIXDIAGNOSA");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VKddiagnosa)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDDIAGNOSA");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
        });

        modelBuilder.Entity<TmDokter>(entity =>
        {
            entity.HasKey(e => e.VKddokter);

            entity.ToTable("TM_DOKTER", tb =>
                {
                    tb.HasTrigger("INSERT_TM_ASAL");
                    tb.HasTrigger("UPDATE_TM_ASAL");
                });

            entity.HasIndex(e => e.VKddokter, "IX_TM_DOKTER");

            entity.HasIndex(e => e.VNmdokter, "IX_TM_DOKTER_1");

            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.CAktif).HasColumnName("C_AKTIF");
            entity.Property(e => e.IdDokter)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_DOKTER");
            entity.Property(e => e.ImFotodokter)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("IM_FOTODOKTER");
            entity.Property(e => e.IsTtd)
                .HasColumnType("text")
                .HasColumnName("IS_TTD");
            entity.Property(e => e.Pin)
                .HasColumnType("numeric(18, 2)")
                .HasColumnName("PIN");
            entity.Property(e => e.VAlamatdokter)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_ALAMATDOKTER");
            entity.Property(e => e.VAlamatpraktek)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_ALAMATPRAKTEK");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKdakun)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDAKUN");
            entity.Property(e => e.VKodetarif)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("V_KODETARIF");
            entity.Property(e => e.VNmdokter)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMDOKTER");
            entity.Property(e => e.VNosip)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NOSIP");
            entity.Property(e => e.VSpesialisasidokter)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("V_SPESIALISASIDOKTER");
            entity.Property(e => e.VTelpdokter)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TELPDOKTER");
            entity.Property(e => e.VTelppraktek)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TELPPRAKTEK");

            entity.HasOne(d => d.VKdakunNavigation).WithMany(p => p.TmDokters)
                .HasForeignKey(d => d.VKdakun)
                .HasConstraintName("FK_TM_DOKTER_TM_COA");
        });

        modelBuilder.Entity<TmDokterHonor>(entity =>
        {
            entity.HasKey(e => e.VKddokter);

            entity.ToTable("TM_DOKTER_HONOR");

            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.DJasamedis)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS");
            entity.Property(e => e.DJasars)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASARS");
            entity.Property(e => e.DTarif)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_TARIF");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID");
            entity.Property(e => e.VKet)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KET");
            entity.Property(e => e.VNmdokter)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMDOKTER");
        });

        modelBuilder.Entity<TmDokterNote>(entity =>
        {
            entity.HasKey(e => e.IdDokter);

            entity.ToTable("TM_DOKTER_NOTE");

            entity.Property(e => e.IdDokter)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_DOKTER");
            entity.Property(e => e.Keterangan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("KETERANGAN");
            entity.Property(e => e.TglInput)
                .HasColumnType("datetime")
                .HasColumnName("TGL_INPUT");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKddokter)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
        });

        modelBuilder.Entity<TmDtd>(entity =>
        {
            entity.HasKey(e => e.VKddtd).HasName("PK_TM_DTD1");

            entity.ToTable("TM_DTD");

            entity.Property(e => e.VKddtd)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDDTD");
            entity.Property(e => e.IdDtd)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_DTD");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VNmdtd)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_NMDTD");
        });

        modelBuilder.Entity<TmExtentiontelp>(entity =>
        {
            entity.HasKey(e => e.Idextention);

            entity.ToTable("TM_EXTENTIONTELP");

            entity.Property(e => e.Idextention)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDEXTENTION");
            entity.Property(e => e.Direction)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DIRECTION");
            entity.Property(e => e.Extention)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("EXTENTION");
            entity.Property(e => e.Lantai)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("LANTAI");
            entity.Property(e => e.Ruangan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("RUANGAN");
            entity.Property(e => e.Type).HasColumnName("TYPE");
        });

        modelBuilder.Entity<TmFarmakoterapi>(entity =>
        {
            entity.HasKey(e => e.IdFarmakoterapi);

            entity.ToTable("TM_FARMAKOTERAPI");

            entity.Property(e => e.IdFarmakoterapi)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_FARMAKOTERAPI");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VNmfarmakoterapi)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_NMFARMAKOTERAPI");
        });

        modelBuilder.Entity<TmFarmakoterapiSub>(entity =>
        {
            entity.HasKey(e => e.IdSubfarmakoterapi);

            entity.ToTable("TM_FARMAKOTERAPI_SUB");

            entity.Property(e => e.IdSubfarmakoterapi)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_SUBFARMAKOTERAPI");
            entity.Property(e => e.IdFarmakoterapi)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_FARMAKOTERAPI");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VNmsubfarmakoterapi)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_NMSUBFARMAKOTERAPI");

            entity.HasOne(d => d.IdFarmakoterapiNavigation).WithMany(p => p.TmFarmakoterapiSubs)
                .HasForeignKey(d => d.IdFarmakoterapi)
                .HasConstraintName("FK_TM_FARMAKOTERAPI_SUB_TM_FARMAKOTERAPI");
        });

        modelBuilder.Entity<TmGizi>(entity =>
        {
            entity.HasKey(e => e.IdGizi);

            entity.ToTable("TM_GIZI");

            entity.Property(e => e.IdGizi)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GIZI");
            entity.Property(e => e.DAir)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_AIR");
            entity.Property(e => e.DBdd)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BDD");
            entity.Property(e => e.DCalsium)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_CALSIUM");
            entity.Property(e => e.DEnergi)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_ENERGI");
            entity.Property(e => e.DFe)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_FE");
            entity.Property(e => e.DFosfor)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_FOSFOR");
            entity.Property(e => e.DKh)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_KH");
            entity.Property(e => e.DLemak)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_LEMAK");
            entity.Property(e => e.DProtein)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_PROTEIN");
            entity.Property(e => e.DVita)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_VITA");
            entity.Property(e => e.DVitb1)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_VITB1");
            entity.Property(e => e.DVitc)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_VITC");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VGroup)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_GROUP");
            entity.Property(e => e.VKandungan)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_KANDUNGAN");
            entity.Property(e => e.VKdmakanan)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDMAKANAN");
            entity.Property(e => e.VNmmakanan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMMAKANAN");
            entity.Property(e => e.VNote)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_NOTE");
        });

        modelBuilder.Entity<TmGudang>(entity =>
        {
            entity.HasKey(e => e.VKodeinventory);

            entity.ToTable("TM_GUDANG");

            entity.HasIndex(e => e.IsRequest, "IX_TM_GUDANG_ISREQUEST");

            entity.HasIndex(e => e.IsAktif, "IX_TM_GUDANG_IS_AKTIF");

            entity.HasIndex(e => e.VKodeinventory, "IX_TM_GUDANG_KDINV");

            entity.HasIndex(e => e.IsListropp, "IX_TM_GUDANG_LISROP");

            entity.HasIndex(e => e.VNamagudangobat, "IX_TM_GUDANG_NAMAGUDANG");

            entity.Property(e => e.VKodeinventory)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODEINVENTORY");
            entity.Property(e => e.IdGudangobat)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GUDANGOBAT");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.IsListropp).HasColumnName("IS_LISTROPP");
            entity.Property(e => e.IsPaketbhp).HasColumnName("IS_PAKETBHP");
            entity.Property(e => e.IsRequest).HasColumnName("IS_REQUEST");
            entity.Property(e => e.IsReturbhp).HasColumnName("IS_RETURBHP");
            entity.Property(e => e.IsTipebarang)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("IS_TIPEBARANG");
            entity.Property(e => e.VNamagudangobat)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NAMAGUDANGOBAT");
        });

        modelBuilder.Entity<TmHargabarang>(entity =>
        {
            entity.HasKey(e => e.Idhargabeli);

            entity.ToTable("TM_HARGABARANG");

            entity.HasIndex(e => e.Barangid, "IX_TM_HARGABARANG_barangid");

            entity.HasIndex(e => e.Diskonoff, "IX_TM_HARGABARANG_diskonoff");

            entity.HasIndex(e => e.Diskonon, "IX_TM_HARGABARANG_diskonon");

            entity.HasIndex(e => e.Harga, "IX_TM_HARGABARANG_harga");

            entity.HasIndex(e => e.IsAktif, "IX_TM_HARGABARANG_isaktif");

            entity.HasIndex(e => e.Lastupdate, "IX_TM_HARGABARANG_lastupdate");

            entity.HasIndex(e => e.Ppn, "IX_TM_HARGABARANG_ppn");

            entity.HasIndex(e => e.Supplierid, "IX_TM_HARGABARANG_supplierid");

            entity.Property(e => e.Idhargabeli)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDHARGABELI");
            entity.Property(e => e.Barangid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("BARANGID");
            entity.Property(e => e.Diskonoff)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DISKONOFF");
            entity.Property(e => e.Diskonon)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DISKONON");
            entity.Property(e => e.Harga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("HARGA");
            entity.Property(e => e.Inputby)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("INPUTBY");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Lastupdate)
                .HasColumnType("datetime")
                .HasColumnName("LASTUPDATE");
            entity.Property(e => e.Ppn)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PPN");
            entity.Property(e => e.Supplierid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("SUPPLIERID");

            entity.HasOne(d => d.Barang).WithMany(p => p.TmHargabarangs)
                .HasForeignKey(d => d.Barangid)
                .HasConstraintName("FK_TM_HARGABARANG_TM_BARANG");

            entity.HasOne(d => d.Supplier).WithMany(p => p.TmHargabarangs)
                .HasForeignKey(d => d.Supplierid)
                .HasConstraintName("FK_TM_HARGABARANG_TM_SUPPLIER");
        });

        modelBuilder.Entity<TmHargakamar>(entity =>
        {
            entity.HasKey(e => e.VKelas);

            entity.ToTable("TM_HARGAKAMAR");

            entity.Property(e => e.VKelas)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("V_KELAS");
            entity.Property(e => e.IdHargakamar)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_HARGAKAMAR");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
        });

        modelBuilder.Entity<TmHargarekanan>(entity =>
        {
            entity.HasKey(e => e.Idhargarekanan);

            entity.ToTable("TM_HARGAREKANAN", tb =>
                {
                    tb.HasTrigger("INSERT_JKN_TELKOM");
                    tb.HasTrigger("UPDATE_JKN_TELKOM");
                });

            entity.HasIndex(e => e.Barangid, "IX_TM_HARGAREKANAN_barangid");

            entity.HasIndex(e => e.Harga, "IX_TM_HARGAREKANAN_harga");

            entity.HasIndex(e => e.Hargajual, "IX_TM_HARGAREKANAN_hargajual");

            entity.HasIndex(e => e.Idhargarekanan, "IX_TM_HARGAREKANAN_idhargarekanan");

            entity.HasIndex(e => e.IsAktif, "IX_TM_HARGAREKANAN_isaktif");

            entity.HasIndex(e => e.Lastupdate, "IX_TM_HARGAREKANAN_lastupdate");

            entity.HasIndex(e => e.Rekananid, "IX_TM_HARGAREKANAN_rekananid");

            entity.Property(e => e.Idhargarekanan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDHARGAREKANAN");
            entity.Property(e => e.Barangid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("BARANGID");
            entity.Property(e => e.Diskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("DISKON");
            entity.Property(e => e.Harga)
                .HasColumnType("decimal(19, 2)")
                .HasColumnName("HARGA");
            entity.Property(e => e.Hargajual)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("HARGAJUAL");
            entity.Property(e => e.Inpuby)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("INPUBY");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Lastupdate)
                .HasColumnType("datetime")
                .HasColumnName("LASTUPDATE");
            entity.Property(e => e.Margin)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("MARGIN");
            entity.Property(e => e.Ppn)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PPN");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");

            entity.HasOne(d => d.Barang).WithMany(p => p.TmHargarekanans)
                .HasForeignKey(d => d.Barangid)
                .HasConstraintName("FK_TM_HARGAREKANAN_TM_BARANG");

            entity.HasOne(d => d.Rekanan).WithMany(p => p.TmHargarekanans)
                .HasForeignKey(d => d.Rekananid)
                .HasConstraintName("FK_TM_HARGAREKANAN_TM_REKANAN");
        });

        modelBuilder.Entity<TmHasillab>(entity =>
        {
            entity.HasKey(e => new { e.VKdpemeriksaanlab, e.IdHasillab });

            entity.ToTable("TM_HASILLAB");

            entity.Property(e => e.VKdpemeriksaanlab)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDPEMERIKSAANLAB");
            entity.Property(e => e.IdHasillab).HasColumnName("ID_HASILLAB");
            entity.Property(e => e.IdNumhasillab)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUMHASILLAB");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VHasil)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_HASIL");
            entity.Property(e => e.VNistandart)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_NISTANDART");
            entity.Property(e => e.VNmhasil)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMHASIL");
            entity.Property(e => e.VSatuan)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_SATUAN");
        });

        modelBuilder.Entity<TmHasilrad>(entity =>
        {
            entity.HasKey(e => new { e.INoitem, e.VKdpemeriksaanrad });

            entity.ToTable("TM_HASILRAD");

            entity.Property(e => e.INoitem).HasColumnName("I_NOITEM");
            entity.Property(e => e.VKdpemeriksaanrad)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDPEMERIKSAANRAD");
            entity.Property(e => e.IdNumhasilrad)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUMHASILRAD");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VHasilstandar)
                .HasColumnType("text")
                .HasColumnName("V_HASILSTANDAR");
            entity.Property(e => e.VNmitem)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_NMITEM");
            entity.Property(e => e.VNote)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_NOTE");
        });

        modelBuilder.Entity<TmJadwaldokter>(entity =>
        {
            entity.HasKey(e => e.IdJadwal).HasName("PK_TR_JADWALDOKTER");

            entity.ToTable("TM_JADWALDOKTER");

            entity.HasIndex(e => e.IdJadwal, "IX_TM_JADWALDOKTER");

            entity.HasIndex(e => e.VKddokter, "IX_TM_JADWALDOKTER_1");

            entity.HasIndex(e => e.VKoderuangan, "IX_TM_JADWALDOKTER_2");

            entity.HasIndex(e => e.VNamaklinik, "IX_TM_JADWALDOKTER_3");

            entity.HasIndex(e => e.VHari, "IX_TM_JADWALDOKTER_4");

            entity.HasIndex(e => e.VJamstart, "IX_TM_JADWALDOKTER_5");

            entity.HasIndex(e => e.VJamfinish, "IX_TM_JADWALDOKTER_6");

            entity.HasIndex(e => e.IsAktif, "IX_TM_JADWALDOKTER_7");

            entity.Property(e => e.IdJadwal)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_JADWAL");
            entity.Property(e => e.IServistime).HasColumnName("I_SERVISTIME");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VHari)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("V_HARI");
            entity.Property(e => e.VJamfinish)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_JAMFINISH");
            entity.Property(e => e.VJamstart)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_JAMSTART");
            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.VKoderuangan)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VNamaklinik)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NAMAKLINIK");

            entity.HasOne(d => d.VKddokterNavigation).WithMany(p => p.TmJadwaldokters)
                .HasForeignKey(d => d.VKddokter)
                .HasConstraintName("FK_TM_JADWALDOKTER_TM_DOKTER_(kddokter)");

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TmJadwaldokters)
                .HasForeignKey(d => d.VKoderuangan)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_JADWALDOKTER_TM_RUANG_(kdruangan)");
        });

        modelBuilder.Entity<TmKamarinap>(entity =>
        {
            entity.HasKey(e => e.VKdtmptidur);

            entity.ToTable("TM_KAMARINAP");

            entity.HasIndex(e => e.VKdtmptidur, "IX_TM_KAMARINAP_v_kdtmptidur");

            entity.HasIndex(e => e.VLantai, "IX_TM_KAMARINAP_v_lantai");

            entity.Property(e => e.VKdtmptidur)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDTMPTIDUR");
            entity.Property(e => e.CIsi)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_ISI");
            entity.Property(e => e.IX).HasColumnName("I_X");
            entity.Property(e => e.IY).HasColumnName("I_Y");
            entity.Property(e => e.IdKamarinap)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_KAMARINAP");
            entity.Property(e => e.IdMapid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_MAPID");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VKelas)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("V_KELAS");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VKodetarif)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODETARIF");
            entity.Property(e => e.VLantai)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_LANTAI");
            entity.Property(e => e.VNokamar)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_NOKAMAR");

            entity.HasOne(d => d.IdMap).WithMany(p => p.TmKamarinaps)
                .HasForeignKey(d => d.IdMapid)
                .HasConstraintName("FK_TM_KAMARINAP_TM_MAP");

            entity.HasOne(d => d.VKelasNavigation).WithMany(p => p.TmKamarinaps)
                .HasForeignKey(d => d.VKelas)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_KAMARINAP_TM_HARGAKAMAR");
        });

        modelBuilder.Entity<TmKamarinapHarga>(entity =>
        {
            entity.HasKey(e => e.IdKamarinapharga);

            entity.ToTable("TM_KAMARINAP_HARGA");

            entity.Property(e => e.IdKamarinapharga)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_KAMARINAPHARGA");
            entity.Property(e => e.D2tnd)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_2TND");
            entity.Property(e => e.DAdm)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_ADM");
            entity.Property(e => e.DBahanalkes)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BAHANALKES");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DCito)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_CITO");
            entity.Property(e => e.DDiskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DISKON");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DJasamedis)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS");
            entity.Property(e => e.DJasars)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASARS");
            entity.Property(e => e.DPenyulit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_PENYULIT");
            entity.Property(e => e.DTglakhir)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLAKHIR");
            entity.Property(e => e.DTglawal)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLAWAL");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKdtmptidur)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDTMPTIDUR");

            entity.HasOne(d => d.VKdtmptidurNavigation).WithMany(p => p.TmKamarinapHargas)
                .HasForeignKey(d => d.VKdtmptidur)
                .HasConstraintName("FK_TM_KAMARINAP_HARGA_TM_KAMARINAP");
        });

        modelBuilder.Entity<TmKamarinapRekanan>(entity =>
        {
            entity.HasKey(e => e.IdKamarinaprek).HasName("PK_TM_KAMARINAP_REKANAN_1");

            entity.ToTable("TM_KAMARINAP_REKANAN");

            entity.Property(e => e.IdKamarinaprek)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_KAMARINAPREK");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VKdtmptidur)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDTMPTIDUR");
        });

        modelBuilder.Entity<TmKelompokbarang>(entity =>
        {
            entity.HasKey(e => e.Kelompokid).HasName("PK_TM_KELOMPOKBARANG_NAMA");

            entity.ToTable("TM_KELOMPOKBARANG");

            entity.HasIndex(e => e.IdGrouptarif, "IX_TM_KELOMPOKBARANG_IDGROUP");

            entity.HasIndex(e => e.IsAktif, "IX_TM_KELOMPOKBARANG_ISAKTIF");

            entity.HasIndex(e => e.Kelompokid, "IX_TM_KELOMPOKBARANG_KELOMPOKID");

            entity.HasIndex(e => e.Kode, "IX_TM_KELOMPOKBARANG_KODE");

            entity.HasIndex(e => e.Nama, "IX_TM_KELOMPOKBARANG_NAMA");

            entity.Property(e => e.Kelompokid)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("KELOMPOKID");
            entity.Property(e => e.IdGrouptarif)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GROUPTARIF");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Kode)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("KODE");
            entity.Property(e => e.Margin)
                .HasColumnType("numeric(18, 2)")
                .HasColumnName("MARGIN");
            entity.Property(e => e.Nama)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NAMA");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("NOTE");
        });

        modelBuilder.Entity<TmKodepo>(entity =>
        {
            entity.HasKey(e => e.IdKodepos).HasName("PK_TM_KODEPOS_1");

            entity.ToTable("TM_KODEPOS");

            entity.Property(e => e.IdKodepos)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_KODEPOS");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VKabupaten)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KABUPATEN");
            entity.Property(e => e.VKdkodepos)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KDKODEPOS");
            entity.Property(e => e.VKecamatan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KECAMATAN");
            entity.Property(e => e.VKelurahan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KELURAHAN");
            entity.Property(e => e.VProvinsi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_PROVINSI");
        });

        modelBuilder.Entity<TmLaboratorium>(entity =>
        {
            entity.HasKey(e => e.VKdpemeriksaanlab);

            entity.ToTable("TM_LABORATORIUM");

            entity.Property(e => e.VKdpemeriksaanlab)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDPEMERIKSAANLAB");
            entity.Property(e => e.CIsaktif).HasColumnName("C_ISAKTIF");
            entity.Property(e => e.IdGroup)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GROUP");
            entity.Property(e => e.IdPemeriksaanlab)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_PEMERIKSAANLAB");
            entity.Property(e => e.VNmpemeriksaanlab)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMPEMERIKSAANLAB");

            entity.HasOne(d => d.IdGroupNavigation).WithMany(p => p.TmLaboratoria)
                .HasForeignKey(d => d.IdGroup)
                .HasConstraintName("FK_TM_LABORATORIUM_TM_LABORATORIUM_GROUP");
        });

        modelBuilder.Entity<TmLaboratoriumGroup>(entity =>
        {
            entity.HasKey(e => e.IdGroup);

            entity.ToTable("TM_LABORATORIUM_GROUP");

            entity.Property(e => e.IdGroup)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GROUP");
            entity.Property(e => e.IdGrouptarif)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GROUPTARIF");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.IsPk).HasColumnName("IS_PK");
            entity.Property(e => e.VNmgroup)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMGROUP");
        });

        modelBuilder.Entity<TmLaboratoriumHarga>(entity =>
        {
            entity.HasKey(e => e.IdLabharga).HasName("PK_TM_LABORATORIUM_HARGA_1");

            entity.ToTable("TM_LABORATORIUM_HARGA", tb => tb.HasTrigger("UPDATE_STATUS_LABORATORIUM_HARGA"));

            entity.Property(e => e.IdLabharga)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_LABHARGA");
            entity.Property(e => e.D2tnd)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_2TND");
            entity.Property(e => e.DAdm)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_ADM");
            entity.Property(e => e.DBahanalkes)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BAHANALKES");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DCito)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_CITO");
            entity.Property(e => e.DDiskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DISKON");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DJasamedis)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS");
            entity.Property(e => e.DJasars)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASARS");
            entity.Property(e => e.DLastupdate)
                .HasColumnType("datetime")
                .HasColumnName("D_LASTUPDATE");
            entity.Property(e => e.DPenyulit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_PENYULIT");
            entity.Property(e => e.DTglakhir)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLAKHIR");
            entity.Property(e => e.DTglawal)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLAWAL");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKdpemeriksaanlab)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDPEMERIKSAANLAB");
            entity.Property(e => e.VKelas)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("V_KELAS");

            entity.HasOne(d => d.Rekanan).WithMany(p => p.TmLaboratoriumHargas)
                .HasForeignKey(d => d.Rekananid)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_LABORATORIUM_HARGA_TM_REKANAN");

            entity.HasOne(d => d.VKdpemeriksaanlabNavigation).WithMany(p => p.TmLaboratoriumHargas)
                .HasForeignKey(d => d.VKdpemeriksaanlab)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_LABORATORIUM_HARGA_TM_LABORATORIUM");

            entity.HasOne(d => d.VKelasNavigation).WithMany(p => p.TmLaboratoriumHargas)
                .HasForeignKey(d => d.VKelas)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_LABORATORIUM_HARGA_TM_HARGAKAMAR");
        });

        modelBuilder.Entity<TmLaboratoriumRekanan>(entity =>
        {
            entity.HasKey(e => new { e.VKdpemeriksaanlab, e.Rekananid }).HasName("PK_TM_LABORATORIUM_REKANAN_1");

            entity.ToTable("TM_LABORATORIUM_REKANAN");

            entity.Property(e => e.VKdpemeriksaanlab)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDPEMERIKSAANLAB");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.IdLabrekanan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_LABREKANAN");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");

            entity.HasOne(d => d.Rekanan).WithMany(p => p.TmLaboratoriumRekanans)
                .HasForeignKey(d => d.Rekananid)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_LABORATORIUM_REKANAN_TM_REKANAN");

            entity.HasOne(d => d.VKdpemeriksaanlabNavigation).WithMany(p => p.TmLaboratoriumRekanans)
                .HasForeignKey(d => d.VKdpemeriksaanlab)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_LABORATORIUM_REKANAN_TM_LABORATORIUM");
        });

        modelBuilder.Entity<TmMap>(entity =>
        {
            entity.HasKey(e => e.IdMapid);

            entity.ToTable("TM_MAP");

            entity.Property(e => e.IdMapid)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_MAPID");
            entity.Property(e => e.IImage)
                .HasColumnType("image")
                .HasColumnName("I_IMAGE");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VKoderuangan)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VNmmap)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMMAP");
            entity.Property(e => e.VNote)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_NOTE");

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TmMaps)
                .HasForeignKey(d => d.VKoderuangan)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_MAP_TM_RUANG");
        });

        modelBuilder.Entity<TmMasterLab2>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tm_master_lab2");

            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.IdLabharga)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_LABHARGA");
            entity.Property(e => e.Kelas)
                .HasMaxLength(255)
                .HasColumnName("KELAS");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VKdpemeriksaanlab)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDPEMERIKSAANLAB");
            entity.Property(e => e.VNmgroup)
                .HasMaxLength(255)
                .HasColumnName("V_NMGROUP");
            entity.Property(e => e.VNmpemeriksaanlab)
                .HasMaxLength(255)
                .HasColumnName("V_NMPEMERIKSAANLAB");
        });

        modelBuilder.Entity<TmMasterPaketH>(entity =>
        {
            entity.ToTable("tm_master_paket_h");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("id");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("d_harga");
            entity.Property(e => e.IdGrouptarif)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("id_grouptarif");
            entity.Property(e => e.Idmasterpemeriksaan)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("idmasterpemeriksaan");
            entity.Property(e => e.VKdpemeriksaan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("v_kdpemeriksaan");
            entity.Property(e => e.VNmpemeriksaan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("v_nmpemeriksaan");
            entity.Property(e => e.VPenunjang)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("v_penunjang");
        });

        modelBuilder.Entity<TmMasterRad2>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tm_master_rad2");

            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.IdRadharga)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_RADHARGA");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VKdpemeriksaanrad)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KDPEMERIKSAANRAD");
            entity.Property(e => e.VKelas)
                .HasMaxLength(255)
                .HasColumnName("V_KELAS");
            entity.Property(e => e.VNmgroup)
                .HasMaxLength(255)
                .HasColumnName("V_NMGROUP");
            entity.Property(e => e.VNmpemeriksaanrad)
                .HasMaxLength(255)
                .HasColumnName("V_NMPEMERIKSAANRAD");
        });

        modelBuilder.Entity<TmMasterTnd>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tm_master_tnd");

            entity.Property(e => e.DHarga).HasColumnName("D_HARGA");
            entity.Property(e => e.DHargaBpjs).HasColumnName("D_HARGA_BPJS");
            entity.Property(e => e.IdGrouptarif).HasColumnName("ID_GROUPTARIF");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VKdtarifdetail)
                .HasMaxLength(255)
                .HasColumnName("V_KDTARIFDETAIL");
            entity.Property(e => e.VKelas)
                .HasMaxLength(255)
                .HasColumnName("V_KELAS");
            entity.Property(e => e.VNmgrouptarif)
                .HasMaxLength(255)
                .HasColumnName("V_NMGROUPTARIF");
            entity.Property(e => e.VNmtarifdetail)
                .HasMaxLength(255)
                .HasColumnName("V_NMTARIFDETAIL");
        });

        modelBuilder.Entity<TmMasterTnd2>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tm_master_tnd2");

            entity.Property(e => e.D2tnd)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_2TND");
            entity.Property(e => e.DAdm)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_ADM");
            entity.Property(e => e.DBahanalkes)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BAHANALKES");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DCito)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_CITO");
            entity.Property(e => e.DDiskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DISKON");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DJasamedis)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS");
            entity.Property(e => e.DJasamedis2)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS2");
            entity.Property(e => e.DJasamedis3)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS3");
            entity.Property(e => e.DJasamedis4)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS4");
            entity.Property(e => e.DJasamedis5)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS5");
            entity.Property(e => e.DJasars)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASARS");
            entity.Property(e => e.DPenyulit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_PENYULIT");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VKdtarifdetail)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDTARIFDETAIL");
            entity.Property(e => e.VKelas)
                .HasMaxLength(255)
                .HasColumnName("V_KELAS");
            entity.Property(e => e.VNmgrouptarif)
                .HasMaxLength(255)
                .HasColumnName("V_NMGROUPTARIF");
            entity.Property(e => e.VNmtarifdetail)
                .HasMaxLength(255)
                .HasColumnName("V_NMTARIFDETAIL");
        });

        modelBuilder.Entity<TmModule>(entity =>
        {
            entity.HasKey(e => e.IdModule);

            entity.ToTable("TM_MODULE");

            entity.Property(e => e.IdModule)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_MODULE");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VNmmodule)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMMODULE");
        });

        modelBuilder.Entity<TmModuleDetail>(entity =>
        {
            entity.HasKey(e => e.IdModuledetail);

            entity.ToTable("TM_MODULE_DETAIL");

            entity.Property(e => e.IdModuledetail)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_MODULEDETAIL");
            entity.Property(e => e.IdModule)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_MODULE");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VNmmoduldetail)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMMODULDETAIL");
            entity.Property(e => e.VNmmoduledetailsub)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMMODULEDETAILSUB");
            entity.Property(e => e.VUrut)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("V_URUT");

            entity.HasOne(d => d.IdModuleNavigation).WithMany(p => p.TmModuleDetails)
                .HasForeignKey(d => d.IdModule)
                .HasConstraintName("FK_TM_MODULE_DETAIL_TM_MODULE");
        });

        modelBuilder.Entity<TmMorfologi>(entity =>
        {
            entity.HasKey(e => e.VKdmorfologi);

            entity.ToTable("TM_MORFOLOGI");

            entity.Property(e => e.VKdmorfologi)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDMORFOLOGI");
            entity.Property(e => e.IdMorfologi)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_MORFOLOGI");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VKddiagnosa)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDDIAGNOSA");
            entity.Property(e => e.VNmmorfologi)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMMORFOLOGI");

            entity.HasOne(d => d.VKddiagnosaNavigation).WithMany(p => p.TmMorfologis)
                .HasForeignKey(d => d.VKddiagnosa)
                .HasConstraintName("FK_TM_MORFOLOGI_TM_DIAGNOSA");
        });

        modelBuilder.Entity<TmObatunit>(entity =>
        {
            entity.HasKey(e => e.IdObatunit);

            entity.ToTable("TM_OBATUNIT", tb =>
                {
                    tb.HasTrigger("INSERT_EXPIRED");
                    tb.HasTrigger("UPDATE_EXPIRED");
                });

            entity.HasIndex(e => e.Barangid, "IX_TM_OBATUNIT_barangid");

            entity.HasIndex(e => e.DExpireddate, "IX_TM_OBATUNIT_d_expireddate");

            entity.HasIndex(e => e.DStokmax, "IX_TM_OBATUNIT_d_stokmax");

            entity.HasIndex(e => e.DStokmin, "IX_TM_OBATUNIT_d_stokmin");

            entity.HasIndex(e => e.DStoknow, "IX_TM_OBATUNIT_d_stoknow");

            entity.HasIndex(e => e.IdObatunit, "IX_TM_OBATUNIT_id_obatunit");

            entity.HasIndex(e => e.IsAktif, "IX_TM_OBATUNIT_is_aktif");

            entity.HasIndex(e => e.VKodeinventory, "IX_TM_OBATUNIT_v_kdinventory");

            entity.HasIndex(e => e.VKdobat, "IX_TM_OBATUNIT_v_kdobat");

            entity.HasIndex(e => e.VRod, "IX_TM_OBATUNIT_v_rod");

            entity.HasIndex(e => e.VNmobat, "IX_TM_OBATUNIT_vnmobat");

            entity.Property(e => e.IdObatunit)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_OBATUNIT");
            entity.Property(e => e.Barangid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("BARANGID");
            entity.Property(e => e.DExpireddate)
                .HasColumnType("datetime")
                .HasColumnName("D_EXPIREDDATE");
            entity.Property(e => e.DStokmax)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_STOKMAX");
            entity.Property(e => e.DStokmin)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_STOKMIN");
            entity.Property(e => e.DStoknow)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_STOKNOW");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKdobat)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDOBAT");
            entity.Property(e => e.VKodeinventory)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODEINVENTORY");
            entity.Property(e => e.VNmobat)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMOBAT");
            entity.Property(e => e.VRod).HasColumnName("V_ROD");
        });

        modelBuilder.Entity<TmPaketHarga>(entity =>
        {
            entity.HasKey(e => e.IdPaketkelas);

            entity.ToTable("TM_PAKET_HARGA");

            entity.Property(e => e.IdPaketkelas)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_PAKETKELAS");
            entity.Property(e => e.D2tnd)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_2TND");
            entity.Property(e => e.DAdm)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_ADM");
            entity.Property(e => e.DBahanalkes)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BAHANALKES");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DCito)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_CITO");
            entity.Property(e => e.DDiskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DISKON");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DJasamedis)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS");
            entity.Property(e => e.DJasamedis2)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS2");
            entity.Property(e => e.DJasamedis3)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS3");
            entity.Property(e => e.DJasamedis4)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS4");
            entity.Property(e => e.DJasamedis5)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS5");
            entity.Property(e => e.DJasars)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASARS");
            entity.Property(e => e.DJumlah)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JUMLAH");
            entity.Property(e => e.DLastupdate)
                .HasColumnType("datetime")
                .HasColumnName("D_LASTUPDATE");
            entity.Property(e => e.DPenyulit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_PENYULIT");
            entity.Property(e => e.DSubtotal)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_SUBTOTAL");
            entity.Property(e => e.DTglakhir)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLAKHIR");
            entity.Property(e => e.DTglawal)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLAWAL");
            entity.Property(e => e.IdMasterpemeriksaanpenunjang)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_MASTERPEMERIKSAANPENUNJANG");
            entity.Property(e => e.IdPenunjangdetail)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_PENUNJANGDETAIL");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKelas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KELAS");
        });

        modelBuilder.Entity<TmPaketHargaBaru>(entity =>
        {
            entity.HasKey(e => e.IdPaketkelas);

            entity.ToTable("TM_PAKET_HARGA_BARU");

            entity.Property(e => e.IdPaketkelas)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_PAKETKELAS");
            entity.Property(e => e.D2tnd)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_2TND");
            entity.Property(e => e.DAdm)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_ADM");
            entity.Property(e => e.DBahanalkes)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BAHANALKES");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DCito)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_CITO");
            entity.Property(e => e.DDiskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DISKON");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DJasamedis)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS");
            entity.Property(e => e.DJasamedis2)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS2");
            entity.Property(e => e.DJasamedis3)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS3");
            entity.Property(e => e.DJasamedis4)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS4");
            entity.Property(e => e.DJasamedis5)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS5");
            entity.Property(e => e.DJasars)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASARS");
            entity.Property(e => e.DJumlah)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JUMLAH");
            entity.Property(e => e.DLastupdate)
                .HasColumnType("datetime")
                .HasColumnName("D_LASTUPDATE");
            entity.Property(e => e.DPenyulit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_PENYULIT");
            entity.Property(e => e.DSubtotal)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_SUBTOTAL");
            entity.Property(e => e.DTglakhir)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLAKHIR");
            entity.Property(e => e.DTglawal)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLAWAL");
            entity.Property(e => e.IdMasterpemeriksaanpenunjang)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_MASTERPEMERIKSAANPENUNJANG");
            entity.Property(e => e.IdPenunjangdetail)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_PENUNJANGDETAIL");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKelas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KELAS");
        });

        modelBuilder.Entity<TmPaketMatrix>(entity =>
        {
            entity.HasKey(e => new { e.IdMasterpemeriksaanpenunjang, e.VKoderuangan });

            entity.ToTable("TM_PAKET_MATRIX");

            entity.Property(e => e.IdMasterpemeriksaanpenunjang)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_MASTERPEMERIKSAANPENUNJANG");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.IdPaketmatrix)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_PAKETMATRIX");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
        });

        modelBuilder.Entity<TmPaketRekanan>(entity =>
        {
            entity.HasKey(e => e.IdPaketrekanan);

            entity.ToTable("TM_PAKET_REKANAN");

            entity.Property(e => e.IdPaketrekanan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_PAKETREKANAN");
            entity.Property(e => e.IdMasterpemeriksaanpenunjang)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_MASTERPEMERIKSAANPENUNJANG");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
        });

        modelBuilder.Entity<TmPaketdetail>(entity =>
        {
            entity.HasKey(e => e.IdPaketdetail);

            entity.ToTable("TM_PAKETDETAIL");

            entity.Property(e => e.IdPaketdetail)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_PAKETDETAIL");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.Rekanan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("REKANAN");
            entity.Property(e => e.VGroup)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_GROUP");
            entity.Property(e => e.VKdpaketdetail)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KDPAKETDETAIL");
            entity.Property(e => e.VNmpaketdetail)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMPAKETDETAIL");
            entity.Property(e => e.VTipe)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_TIPE");
        });

        modelBuilder.Entity<TmPasien>(entity =>
        {
            entity.HasKey(e => e.IdPasien);

            entity.ToTable("TM_PASIEN");

            entity.HasIndex(e => e.VAgamapasien, "IX_TM_PASIEN_agama");

            entity.HasIndex(e => e.VAlamatpasien, "IX_TM_PASIEN_alamat");

            entity.HasIndex(e => e.IsBlacklist, "IX_TM_PASIEN_blacklist");

            entity.HasIndex(e => e.VHppasien, "IX_TM_PASIEN_hp");

            entity.HasIndex(e => e.IdPasien, "IX_TM_PASIEN_idpasien");

            entity.HasIndex(e => e.IsAktif, "IX_TM_PASIEN_isaktif");

            entity.HasIndex(e => e.CKelaminpasien, "IX_TM_PASIEN_kelamin");

            entity.HasIndex(e => e.VKotapasien, "IX_TM_PASIEN_kota");

            entity.HasIndex(e => e.VNamapasien, "IX_TM_PASIEN_namapasien");

            entity.HasIndex(e => e.VNoktpsimpasien, "IX_TM_PASIEN_noktp");

            entity.HasIndex(e => e.VNopenjamin, "IX_TM_PASIEN_nopenjamin");

            entity.HasIndex(e => e.VPekerjaanpasien, "IX_TM_PASIEN_pekerjaan");

            entity.HasIndex(e => e.VStatuskwnpasien, "IX_TM_PASIEN_statuskawin");

            entity.HasIndex(e => e.VTelppasien, "IX_TM_PASIEN_telp");

            entity.HasIndex(e => e.VTmptlahirpasien, "IX_TM_PASIEN_tempatlahir");

            entity.HasIndex(e => e.DTgllahirpasien, "IX_TM_PASIEN_tgllahir");

            entity.HasIndex(e => e.IdNumpasien, "idnumpasien");

            entity.Property(e => e.IdPasien)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("ID_PASIEN");
            entity.Property(e => e.CGoldarah)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("C_GOLDARAH");
            entity.Property(e => e.CIscetakkartu)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_ISCETAKKARTU");
            entity.Property(e => e.CKelaminpasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("C_KELAMINPASIEN");
            entity.Property(e => e.DTgldaftar)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLDAFTAR");
            entity.Property(e => e.DTgllahirpasien)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLLAHIRPASIEN");
            entity.Property(e => e.IdNumpasien)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUMPASIEN");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.IsBlacklist).HasColumnName("IS_BLACKLIST");
            entity.Property(e => e.IsKunjungan).HasColumnName("IS_KUNJUNGAN");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VAgamapasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_AGAMAPASIEN");
            entity.Property(e => e.VAlamatpasien)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_ALAMATPASIEN");
            entity.Property(e => e.VAlamatpekerjaan)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_ALAMATPEKERJAAN");
            entity.Property(e => e.VAlamatpenanggung)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_ALAMATPENANGGUNG");
            entity.Property(e => e.VAlergipasien)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_ALERGIPASIEN");
            entity.Property(e => e.VAyahpasien)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_AYAHPASIEN");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VCatkhuspasien)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_CATKHUSPASIEN");
            entity.Property(e => e.VHppasien)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("V_HPPASIEN");
            entity.Property(e => e.VIbupasien)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_IBUPASIEN");
            entity.Property(e => e.VJenisidentitas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_JENISIDENTITAS");
            entity.Property(e => e.VJenispasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_JENISPASIEN");
            entity.Property(e => e.VKodepos)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODEPOS");
            entity.Property(e => e.VKotapasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KOTAPASIEN");
            entity.Property(e => e.VNamakelpasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NAMAKELPASIEN");
            entity.Property(e => e.VNamapasien)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NAMAPASIEN");
            entity.Property(e => e.VNamapenanggung)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NAMAPENANGGUNG");
            entity.Property(e => e.VNoktpsimpasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NOKTPSIMPASIEN");
            entity.Property(e => e.VNopenjamin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NOPENJAMIN");
            entity.Property(e => e.VPasanganpasien)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_PASANGANPASIEN");
            entity.Property(e => e.VPekerjaanpasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_PEKERJAANPASIEN");
            entity.Property(e => e.VPendidikanpasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_PENDIDIKANPASIEN");
            entity.Property(e => e.VPerusahaan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_PERUSAHAAN");
            entity.Property(e => e.VPetugas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_PETUGAS");
            entity.Property(e => e.VProvinsi)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_PROVINSI");
            entity.Property(e => e.VRhesus)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_RHESUS");
            entity.Property(e => e.VStatuskwnpasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_STATUSKWNPASIEN");
            entity.Property(e => e.VSuku)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_SUKU");
            entity.Property(e => e.VTelppasien)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TELPPASIEN");
            entity.Property(e => e.VTelppekerjaan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TELPPEKERJAAN");
            entity.Property(e => e.VTelppenanggung)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TELPPENANGGUNG");
            entity.Property(e => e.VTmptlahirpasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_TMPTLAHIRPASIEN");
            entity.Property(e => e.VWarganegara)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_WARGANEGARA");

            entity.HasOne(d => d.Rekanan).WithMany(p => p.TmPasiens)
                .HasForeignKey(d => d.Rekananid)
                .HasConstraintName("FK_TM_PASIEN_TM_REKANAN_(rekananid)");
        });

        modelBuilder.Entity<TmPemeriksaanpenunjang>(entity =>
        {
            entity.HasKey(e => e.IdMasterpemeriksaanpenunjang);

            entity.ToTable("TM_PEMERIKSAANPENUNJANG", tb => tb.HasTrigger("UPDATE_V_KDPEMERIKSAAN"));

            entity.Property(e => e.IdMasterpemeriksaanpenunjang)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_MASTERPEMERIKSAANPENUNJANG");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.IdGrouptarif)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GROUPTARIF");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKdpemeriksaan)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDPEMERIKSAAN");
            entity.Property(e => e.VNmpemeriksaan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMPEMERIKSAAN");
            entity.Property(e => e.VPenunjang)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("V_PENUNJANG");
        });

        modelBuilder.Entity<TmPemeriksaanpenunjangdetail>(entity =>
        {
            entity.HasKey(e => e.IdPenunjangdetail);

            entity.ToTable("TM_PEMERIKSAANPENUNJANGDETAIL");

            entity.Property(e => e.IdPenunjangdetail)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_PENUNJANGDETAIL");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DJumlah)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JUMLAH");
            entity.Property(e => e.IdMasterpemeriksaanpenunjang)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_MASTERPEMERIKSAANPENUNJANG");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VGroup)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_GROUP");
            entity.Property(e => e.VKddetail)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDDETAIL");
            entity.Property(e => e.VKdpemeriksaan)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDPEMERIKSAAN");
            entity.Property(e => e.VKodetarif)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KODETARIF");
            entity.Property(e => e.VNmdetail)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_NMDETAIL");
            entity.Property(e => e.VTipe)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_TIPE");

            entity.HasOne(d => d.IdMasterpemeriksaanpenunjangNavigation).WithMany(p => p.TmPemeriksaanpenunjangdetails)
                .HasForeignKey(d => d.IdMasterpemeriksaanpenunjang)
                .HasConstraintName("FK_TM_PEMERIKSAANPENUNJANGDETAIL_TM_PEMERIKSAANPENUNJANG");
        });

        modelBuilder.Entity<TmRadiologi>(entity =>
        {
            entity.HasKey(e => e.VKdpemeriksaanrad);

            entity.ToTable("TM_RADIOLOGI");

            entity.Property(e => e.VKdpemeriksaanrad)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDPEMERIKSAANRAD");
            entity.Property(e => e.CIsaktif).HasColumnName("C_ISAKTIF");
            entity.Property(e => e.IdGroup)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GROUP");
            entity.Property(e => e.IdPemeriksaanrad)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_PEMERIKSAANRAD");
            entity.Property(e => e.VNmpemeriksaanrad)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMPEMERIKSAANRAD");

            entity.HasOne(d => d.IdGroupNavigation).WithMany(p => p.TmRadiologis)
                .HasForeignKey(d => d.IdGroup)
                .HasConstraintName("FK_TM_RADIOLOGI_TM_RADIOLOGI_GROUP");
        });

        modelBuilder.Entity<TmRadiologiGroup>(entity =>
        {
            entity.HasKey(e => e.IdGroup);

            entity.ToTable("TM_RADIOLOGI_GROUP");

            entity.Property(e => e.IdGroup)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GROUP");
            entity.Property(e => e.IdGrouptarif)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GROUPTARIF");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VNmgroup)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMGROUP");
        });

        modelBuilder.Entity<TmRadiologiHarga>(entity =>
        {
            entity.HasKey(e => e.IdRadharga).HasName("PK_TM_RADIOLOGI_HARGA_1");

            entity.ToTable("TM_RADIOLOGI_HARGA", tb => tb.HasTrigger("UPDATE_STATUS_RADIOLOGI_HARGA"));

            entity.Property(e => e.IdRadharga)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_RADHARGA");
            entity.Property(e => e.D2tnd)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_2TND");
            entity.Property(e => e.DAdm)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_ADM");
            entity.Property(e => e.DBahanalkes)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BAHANALKES");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DCito)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_CITO");
            entity.Property(e => e.DDiskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DISKON");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DJasamedis)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS");
            entity.Property(e => e.DJasars)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASARS");
            entity.Property(e => e.DLastupdate)
                .HasColumnType("datetime")
                .HasColumnName("D_LASTUPDATE");
            entity.Property(e => e.DPenyulit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_PENYULIT");
            entity.Property(e => e.DTglakhir)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLAKHIR");
            entity.Property(e => e.DTglawal)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLAWAL");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKdpemeriksaanrad)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDPEMERIKSAANRAD");
            entity.Property(e => e.VKelas)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("V_KELAS");

            entity.HasOne(d => d.Rekanan).WithMany(p => p.TmRadiologiHargas)
                .HasForeignKey(d => d.Rekananid)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_RADIOLOGI_HARGA_TM_REKANAN");

            entity.HasOne(d => d.VKdpemeriksaanradNavigation).WithMany(p => p.TmRadiologiHargas)
                .HasForeignKey(d => d.VKdpemeriksaanrad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_RADIOLOGI_HARGA_TM_RADIOLOGI");

            entity.HasOne(d => d.VKelasNavigation).WithMany(p => p.TmRadiologiHargas)
                .HasForeignKey(d => d.VKelas)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_RADIOLOGI_HARGA_TM_HARGAKAMAR");
        });

        modelBuilder.Entity<TmRadiologiRekanan>(entity =>
        {
            entity.HasKey(e => e.IdRadrekanan).HasName("PK_TM_RADIOLOGI_REKANAN_1");

            entity.ToTable("TM_RADIOLOGI_REKANAN");

            entity.Property(e => e.IdRadrekanan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_RADREKANAN");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VKdpemeriksaanrad)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDPEMERIKSAANRAD");

            entity.HasOne(d => d.Rekanan).WithMany(p => p.TmRadiologiRekanans)
                .HasForeignKey(d => d.Rekananid)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_RADIOLOGI_REKANAN_TM_REKANAN");

            entity.HasOne(d => d.VKdpemeriksaanradNavigation).WithMany(p => p.TmRadiologiRekanans)
                .HasForeignKey(d => d.VKdpemeriksaanrad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_RADIOLOGI_REKANAN_TM_RADIOLOGI");
        });

        modelBuilder.Entity<TmRekanan>(entity =>
        {
            entity.HasKey(e => e.Rekananid);

            entity.ToTable("TM_REKANAN");

            entity.HasIndex(e => e.IdNumrekanan, "IX_TM_REKANAN");

            entity.HasIndex(e => e.Rekananid, "IX_TM_REKANAN_1");

            entity.HasIndex(e => e.VNmrekanan, "IX_TM_REKANAN_2");

            entity.HasIndex(e => e.IsAktif, "IX_TM_REKANAN_3");

            entity.HasIndex(e => e.VAlias, "IX_TM_REKANAN_4");

            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.IdNumrekanan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUMREKANAN");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.IsCob)
                .HasDefaultValue(false)
                .HasColumnName("IS_COB");
            entity.Property(e => e.IsPaketbhp).HasColumnName("IS_PAKETBHP");
            entity.Property(e => e.IsTarif).HasColumnName("IS_TARIF");
            entity.Property(e => e.IsTarifnonmed).HasColumnName("IS_TARIFNONMED");
            entity.Property(e => e.VAlamat)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_ALAMAT");
            entity.Property(e => e.VAlias)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_ALIAS");
            entity.Property(e => e.VKdakun)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDAKUN");
            entity.Property(e => e.VKota)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KOTA");
            entity.Property(e => e.VNmrekanan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMREKANAN");
            entity.Property(e => e.VTelp)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TELP");
        });

        modelBuilder.Entity<TmRuang>(entity =>
        {
            entity.HasKey(e => e.VKoderuangan);

            entity.ToTable("TM_RUANG");

            entity.HasIndex(e => e.VKoderuangan, "IX_TM_RUANG");

            entity.HasIndex(e => e.Nama, "IX_TM_RUANG_1");

            entity.HasIndex(e => e.Kamar, "IX_TM_RUANG_2");

            entity.HasIndex(e => e.VKodeinventory, "IX_TM_RUANG_3");

            entity.HasIndex(e => e.KodeRequestobat, "IX_TM_RUANG_4");

            entity.HasIndex(e => e.KodeTarif, "IX_TM_RUANG_5");

            entity.HasIndex(e => e.IsAktif, "IX_TM_RUANG_6");

            entity.HasIndex(e => e.IdNumruang, "IX_TM_RUANG_7");

            entity.HasIndex(e => e.VKdinhealth, "IX_V_KDINHEALTH");

            entity.HasIndex(e => e.VLyninhealth, "IX_V_LYNINHEALTH");

            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.IdNumruang)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUMRUANG");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.IsTarif).HasColumnName("IS_TARIF");
            entity.Property(e => e.Kamar)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("KAMAR");
            entity.Property(e => e.Kelompok)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("KELOMPOK");
            entity.Property(e => e.KodeRequestobat)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("KODE_REQUESTOBAT");
            entity.Property(e => e.KodeTarif)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("KODE_TARIF");
            entity.Property(e => e.Nama)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NAMA");
            entity.Property(e => e.Noruang)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("NORUANG");
            entity.Property(e => e.VGdgpaket)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_GDGPAKET");
            entity.Property(e => e.VGdgpenerimaan)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_GDGPENERIMAAN");
            entity.Property(e => e.VGdgretur)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_GDGRETUR");
            entity.Property(e => e.VKdinhealth)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("V_KDINHEALTH");
            entity.Property(e => e.VKodeinventory)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODEINVENTORY");
            entity.Property(e => e.VLyninhealth)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_LYNINHEALTH");

            entity.HasOne(d => d.KodeRequestobatNavigation).WithMany(p => p.TmRuangKodeRequestobatNavigations)
                .HasForeignKey(d => d.KodeRequestobat)
                .HasConstraintName("FK_TM_RUANG_TM_GUDANG2_(requestobat)");

            entity.HasOne(d => d.VKodeinventoryNavigation).WithMany(p => p.TmRuangVKodeinventoryNavigations)
                .HasForeignKey(d => d.VKodeinventory)
                .HasConstraintName("FK_TM_RUANG_TM_GUDANG_(kdinventory)");
        });

        modelBuilder.Entity<TmSeptember2015>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tm_september2015");

            entity.Property(e => e.Barangid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("BARANGID");
            entity.Property(e => e.Harga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("HARGA");
            entity.Property(e => e.Nama)
                .HasMaxLength(255)
                .HasColumnName("NAMA");
            entity.Property(e => e.Supplier)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("SUPPLIER");
        });

        modelBuilder.Entity<TmSettingAdm>(entity =>
        {
            entity.HasKey(e => e.IdNumadm);

            entity.ToTable("TM_SETTING_ADM");

            entity.Property(e => e.IdNumadm)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUMADM");
            entity.Property(e => e.DBiaya)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BIAYA");
            entity.Property(e => e.DPercent)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("D_PERCENT");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VKategori)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KATEGORI");
        });

        modelBuilder.Entity<TmSettingBayar>(entity =>
        {
            entity.HasKey(e => e.VCarabayar);

            entity.ToTable("TM_SETTING_BAYAR");

            entity.Property(e => e.VCarabayar)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_CARABAYAR");
            entity.Property(e => e.IdSettingBayar)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_SETTING_BAYAR");
            entity.Property(e => e.VKdakun)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDAKUN");
        });

        modelBuilder.Entity<TmSettingDaftar>(entity =>
        {
            entity.HasKey(e => e.VTujuan);

            entity.ToTable("TM_SETTING_DAFTAR");

            entity.Property(e => e.VTujuan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_TUJUAN");
            entity.Property(e => e.IdSettingdaftar)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_SETTINGDAFTAR");
            entity.Property(e => e.IsTampil).HasColumnName("IS_TAMPIL");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VNmunitdaftar)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMUNITDAFTAR");
        });

        modelBuilder.Entity<TmSettingKomputerAntrian>(entity =>
        {
            entity.HasKey(e => e.IdSettingkomp).HasName("PK_TM_SETTING_KOMPUTER");

            entity.ToTable("TM_SETTING_KOMPUTER_ANTRIAN");

            entity.HasIndex(e => e.IdSettingkomp, "IX_TM_SETTING_KOMPUTER_ANTRIAN_idsettingkomp");

            entity.HasIndex(e => e.VKdcounter, "IX_TM_SETTING_KOMPUTER_ANTRIAN_vkdcounter");

            entity.HasIndex(e => e.VKdjenislayanan, "IX_TM_SETTING_KOMPUTER_ANTRIAN_vkdlayanan");

            entity.HasIndex(e => e.VKdlokasi, "IX_TM_SETTING_KOMPUTER_ANTRIAN_vkdlokasi");

            entity.HasIndex(e => e.VNmkomputer, "IX_TM_SETTING_KOMPUTER_ANTRIAN_vnmkomp");

            entity.Property(e => e.IdSettingkomp)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_SETTINGKOMP");
            entity.Property(e => e.DTanggal)
                .HasColumnType("datetime")
                .HasColumnName("D_TANGGAL");
            entity.Property(e => e.VKdcounter)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KDCOUNTER");
            entity.Property(e => e.VKdjenislayanan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KDJENISLAYANAN");
            entity.Property(e => e.VKdlokasi)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KDLOKASI");
            entity.Property(e => e.VNmkomputer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMKOMPUTER");
        });

        modelBuilder.Entity<TmSettingPemeriksaan>(entity =>
        {
            entity.HasKey(e => e.VGroup);

            entity.ToTable("TM_SETTING_PEMERIKSAAN");

            entity.Property(e => e.VGroup)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("V_GROUP");
            entity.Property(e => e.IdSettingperiksa)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_SETTINGPERIKSA");
            entity.Property(e => e.IsTampil).HasColumnName("IS_TAMPIL");
            entity.Property(e => e.VNmpemeriksaan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMPEMERIKSAAN");
        });

        modelBuilder.Entity<TmSettingPrshn>(entity =>
        {
            entity.HasKey(e => e.IdPerusahaan).HasName("PK_TM_IDENTITAS_PRSHN");

            entity.ToTable("TM_SETTING_PRSHN");

            entity.Property(e => e.IdPerusahaan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_PERUSAHAAN");
            entity.Property(e => e.VAlamat)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_ALAMAT");
            entity.Property(e => e.VCodelogo)
                .HasColumnType("text")
                .HasColumnName("V_CODELOGO");
            entity.Property(e => e.VEmail)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_EMAIL");
            entity.Property(e => e.VKdperusahaan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KDPERUSAHAAN");
            entity.Property(e => e.VLogo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_LOGO");
            entity.Property(e => e.VNmperusahaan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMPERUSAHAAN");
            entity.Property(e => e.VTelp)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_TELP");
            entity.Property(e => e.VWebsite)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_WEBSITE");
        });

        modelBuilder.Entity<TmSmf>(entity =>
        {
            entity.HasKey(e => e.VKdsmf);

            entity.ToTable("TM_SMF");

            entity.Property(e => e.VKdsmf)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KDSMF");
            entity.Property(e => e.IdSmf)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_SMF");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VNmsmf)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMSMF");
        });

        modelBuilder.Entity<TmStandartfield>(entity =>
        {
            entity.HasKey(e => e.VKodefield);

            entity.ToTable("TM_STANDARTFIELD");

            entity.Property(e => e.VKodefield)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODEFIELD");
            entity.Property(e => e.IdField)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_FIELD");
            entity.Property(e => e.IdFieldgroup)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_FIELDGROUP");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VDeskfield)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_DESKFIELD");
            entity.Property(e => e.VKeterangan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KETERANGAN");

            entity.HasOne(d => d.IdFieldgroupNavigation).WithMany(p => p.TmStandartfields)
                .HasForeignKey(d => d.IdFieldgroup)
                .HasConstraintName("FK_TM_STANDARTFIELD_TM_STANDARTFIELD_GROUP");
        });

        modelBuilder.Entity<TmStandartfieldGroup>(entity =>
        {
            entity.HasKey(e => e.IdFieldgroup);

            entity.ToTable("TM_STANDARTFIELD_GROUP");

            entity.Property(e => e.IdFieldgroup)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_FIELDGROUP");
            entity.Property(e => e.DTanggal)
                .HasColumnType("datetime")
                .HasColumnName("D_TANGGAL");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VKeterangan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KETERANGAN");
            entity.Property(e => e.VNmfieldgroup)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMFIELDGROUP");
        });

        modelBuilder.Entity<TmStatus>(entity =>
        {
            entity.HasKey(e => e.IdStatus);

            entity.ToTable("TM_STATUS");

            entity.HasIndex(e => e.VStatus, "IX_TM_STATUS");

            entity.HasIndex(e => e.IdStatus, "IX_TM_STATUS_1");

            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VStatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_STATUS");
        });

        modelBuilder.Entity<TmSupplier>(entity =>
        {
            entity.HasKey(e => e.Supplierid);

            entity.ToTable("TM_SUPPLIER");

            entity.HasIndex(e => e.Alamat, "IX_TM_SUPPLIER_ALAMAT");

            entity.HasIndex(e => e.Isaktif, "IX_TM_SUPPLIER_ISAKTIF");

            entity.HasIndex(e => e.Namasupplier, "IX_TM_SUPPLIER_NAMA");

            entity.HasIndex(e => e.Supplierid, "IX_TM_SUPPLIER_SUPPLIERID");

            entity.HasIndex(e => e.VKdakun, "IX_TM_SUPPLIER_V_KDAKUN");

            entity.Property(e => e.Supplierid)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("SUPPLIERID");
            entity.Property(e => e.Alamat)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("ALAMAT");
            entity.Property(e => e.Cp)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CP");
            entity.Property(e => e.Fax)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("FAX");
            entity.Property(e => e.Isaktif).HasColumnName("ISAKTIF");
            entity.Property(e => e.Kota)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("KOTA");
            entity.Property(e => e.Namasupplier)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NAMASUPPLIER");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("NOTE");
            entity.Property(e => e.Telpon)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TELPON");
            entity.Property(e => e.VKdakun)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KDAKUN");
        });

        modelBuilder.Entity<TmTarifGroup>(entity =>
        {
            entity.HasKey(e => e.IdGrouptarif);

            entity.ToTable("TM_TARIF_GROUP");

            entity.Property(e => e.IdGrouptarif)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GROUPTARIF");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VAliasgroup)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("V_ALIASGROUP");
            entity.Property(e => e.VKdakun)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDAKUN");
            entity.Property(e => e.VNmgrouptarif)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("V_NMGROUPTARIF");
        });

        modelBuilder.Entity<TmTarifHarga>(entity =>
        {
            entity.HasKey(e => e.IdTarifkelas).HasName("PK_TM_TARIF_KELAS2");

            entity.ToTable("TM_TARIF_HARGA", tb => tb.HasTrigger("UPDATE_STATUS_TM_TARIF_HARGA"));

            entity.Property(e => e.IdTarifkelas)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_TARIFKELAS");
            entity.Property(e => e.D2tnd)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_2TND");
            entity.Property(e => e.DAdm)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_ADM");
            entity.Property(e => e.DBahanalkes)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BAHANALKES");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DCito)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_CITO");
            entity.Property(e => e.DDiskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DISKON");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DJasamedis)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS");
            entity.Property(e => e.DJasamedis2)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS2");
            entity.Property(e => e.DJasamedis3)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS3");
            entity.Property(e => e.DJasamedis4)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS4");
            entity.Property(e => e.DJasamedis5)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS5");
            entity.Property(e => e.DJasars)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASARS");
            entity.Property(e => e.DLastupdate)
                .HasColumnType("datetime")
                .HasColumnName("D_LASTUPDATE");
            entity.Property(e => e.DPenyulit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_PENYULIT");
            entity.Property(e => e.DTglakhir)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLAKHIR");
            entity.Property(e => e.DTglawal)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLAWAL");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKdtarifdetail)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDTARIFDETAIL");
            entity.Property(e => e.VKelas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KELAS");
        });

        modelBuilder.Entity<TmTarifMatrix>(entity =>
        {
            entity.HasKey(e => new { e.VKdtarifdetail, e.VKoderuangan });

            entity.ToTable("TM_TARIF_MATRIX");

            entity.Property(e => e.VKdtarifdetail)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KDTARIFDETAIL");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.IdTarifmatrix)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_TARIFMATRIX");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
        });

        modelBuilder.Entity<TmTarifPelayanan>(entity =>
        {
            entity.HasKey(e => e.VKodetariflayan).HasName("PK_TM_TARIF_LAYANAN");

            entity.ToTable("TM_TARIF_PELAYANAN");

            entity.Property(e => e.VKodetariflayan)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODETARIFLAYAN");
            entity.Property(e => e.IdTariflayan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_TARIFLAYAN");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VNamatariflayan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NAMATARIFLAYAN");
        });

        modelBuilder.Entity<TmTarifRekanan>(entity =>
        {
            entity.HasKey(e => e.IdTarifrekanan).HasName("PK_TM_TARIF_REKANAN2");

            entity.ToTable("TM_TARIF_REKANAN");

            entity.Property(e => e.IdTarifrekanan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_TARIFREKANAN");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VKdtarifdetail)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDTARIFDETAIL");
        });

        modelBuilder.Entity<TmTarifRekananSub>(entity =>
        {
            entity.HasKey(e => e.IdTarifrekanansub);

            entity.ToTable("TM_TARIF_REKANAN_SUB");

            entity.Property(e => e.IdTarifrekanansub)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_TARIFREKANANSUB");
            entity.Property(e => e.RekananidDt)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID_DT");
            entity.Property(e => e.RekananidHd)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID_HD");
        });

        modelBuilder.Entity<TmTarifdetail>(entity =>
        {
            entity.HasKey(e => e.VKdtarifdetail);

            entity.ToTable("TM_TARIFDETAIL");

            entity.Property(e => e.VKdtarifdetail)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDTARIFDETAIL");
            entity.Property(e => e.IdGrouptarif)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GROUPTARIF");
            entity.Property(e => e.IdTarifdetail)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_TARIFDETAIL");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VKodetariflayan)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODETARIFLAYAN");
            entity.Property(e => e.VNmtarifdetail)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMTARIFDETAIL");

            entity.HasOne(d => d.IdGrouptarifNavigation).WithMany(p => p.TmTarifdetails)
                .HasForeignKey(d => d.IdGrouptarif)
                .HasConstraintName("FK_TM_TARIFDETAIL_TM_TARIF_GROUP");

            entity.HasOne(d => d.VKodetariflayanNavigation).WithMany(p => p.TmTarifdetails)
                .HasForeignKey(d => d.VKodetariflayan)
                .HasConstraintName("FK_TM_TARIFDETAIL_TM_TARIF_PELAYANAN");
        });

        modelBuilder.Entity<TmTarifnonmedi>(entity =>
        {
            entity.HasKey(e => e.VKdtarif);

            entity.ToTable("TM_TARIFNONMEDIS");

            entity.Property(e => e.VKdtarif)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDTARIF");
            entity.Property(e => e.IdGroupnonmedis)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GROUPNONMEDIS");
            entity.Property(e => e.IdNonmedis)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NONMEDIS");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VNmtarif)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMTARIF");

            entity.HasOne(d => d.IdGroupnonmedisNavigation).WithMany(p => p.TmTarifnonmedis)
                .HasForeignKey(d => d.IdGroupnonmedis)
                .HasConstraintName("FK_TM_TARIFNONMEDIS_TM_TARIFNONMEDIS_GROUP");
        });

        modelBuilder.Entity<TmTarifnonmedisGroup>(entity =>
        {
            entity.HasKey(e => e.IdGroupnonmedis);

            entity.ToTable("TM_TARIFNONMEDIS_GROUP");

            entity.Property(e => e.IdGroupnonmedis)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GROUPNONMEDIS");
            entity.Property(e => e.VKdakun)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDAKUN");
            entity.Property(e => e.VNmgroupnonmedis)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMGROUPNONMEDIS");
        });

        modelBuilder.Entity<TmTarifnonmedisHarga>(entity =>
        {
            entity.HasKey(e => e.IdNonmedishrg);

            entity.ToTable("TM_TARIFNONMEDIS_HARGA");

            entity.Property(e => e.IdNonmedishrg)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NONMEDISHRG");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.IdRekanan)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_REKANAN");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VKdtarif)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDTARIF");

            entity.HasOne(d => d.VKdtarifNavigation).WithMany(p => p.TmTarifnonmedisHargas)
                .HasForeignKey(d => d.VKdtarif)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_TARIFNONMEDIS_HARGA_TM_TARIFNONMEDIS");
        });

        modelBuilder.Entity<TmTarifnonmedisMatrix>(entity =>
        {
            entity.HasKey(e => e.IdNonmedismatrix);

            entity.ToTable("TM_TARIFNONMEDIS_MATRIX");

            entity.Property(e => e.IdNonmedismatrix)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NONMEDISMATRIX");
            entity.Property(e => e.VKdtarif)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDTARIF");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");

            entity.HasOne(d => d.VKdtarifNavigation).WithMany(p => p.TmTarifnonmedisMatrices)
                .HasForeignKey(d => d.VKdtarif)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_TARIFNONMEDIS_MATRIX_TM_TARIFNONMEDIS");
        });

        modelBuilder.Entity<TmTarifnonmedisRekanan>(entity =>
        {
            entity.HasKey(e => e.IdNonmedrek);

            entity.ToTable("TM_TARIFNONMEDIS_REKANAN");

            entity.Property(e => e.IdNonmedrek)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NONMEDREK");
            entity.Property(e => e.IdRekanan)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_REKANAN");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VKdtarif)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDTARIF");

            entity.HasOne(d => d.VKdtarifNavigation).WithMany(p => p.TmTarifnonmedisRekanans)
                .HasForeignKey(d => d.VKdtarif)
                .HasConstraintName("FK_TM_TARIFNONMEDIS_REKANAN_TM_TARIFNONMEDIS");
        });

        modelBuilder.Entity<TmTindakan>(entity =>
        {
            entity.HasKey(e => e.VKdtindakan);

            entity.ToTable("TM_TINDAKAN");

            entity.Property(e => e.VKdtindakan)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDTINDAKAN");
            entity.Property(e => e.IdTindakan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_TINDAKAN");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VNmpendek)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMPENDEK");
            entity.Property(e => e.VNmtindakan)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_NMTINDAKAN");
        });

        modelBuilder.Entity<TmUser>(entity =>
        {
            entity.HasKey(e => e.IdNumuser);

            entity.ToTable("TM_USER");

            entity.Property(e => e.IdNumuser)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUMUSER");
            entity.Property(e => e.BIsadmin).HasColumnName("B_ISADMIN");
            entity.Property(e => e.BIsdokter).HasColumnName("B_ISDOKTER");
            entity.Property(e => e.BIsmanager).HasColumnName("B_ISMANAGER");
            entity.Property(e => e.BIsmemo).HasColumnName("B_ISMEMO");
            entity.Property(e => e.BIsmod).HasColumnName("B_ISMOD");
            entity.Property(e => e.BIsuser).HasColumnName("B_ISUSER");
            entity.Property(e => e.CIsaktif).HasColumnName("C_ISAKTIF");
            entity.Property(e => e.Id)
                .HasMaxLength(128)
                .HasColumnName("ID");
            entity.Property(e => e.IdGroupuser)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GROUPUSER");
            entity.Property(e => e.IdKaryawan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("idKaryawan");
            entity.Property(e => e.IsTtd)
                .HasColumnType("text")
                .HasColumnName("IS_TTD");
            entity.Property(e => e.Pin)
                .HasColumnType("numeric(10, 2)")
                .HasColumnName("PIN");
            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.VKoderuangan)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VNamalengkap)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NAMALENGKAP");
            entity.Property(e => e.VNmuser)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMUSER");
            entity.Property(e => e.VPassword)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_PASSWORD");

            entity.HasOne(d => d.IdGroupuserNavigation).WithMany(p => p.TmUsers)
                .HasForeignKey(d => d.IdGroupuser)
                .HasConstraintName("FK_TM_USER_TM_USER_GROUP");

            entity.HasOne(d => d.VKddokterNavigation).WithMany(p => p.TmUsers)
                .HasForeignKey(d => d.VKddokter)
                .HasConstraintName("FK_TM_USER_TM_DOKTER");

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TmUsers)
                .HasForeignKey(d => d.VKoderuangan)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_USER_TM_RUANG");
        });

        modelBuilder.Entity<TmUserGroup>(entity =>
        {
            entity.HasKey(e => e.IdGroupuser);

            entity.ToTable("TM_USER_GROUP");

            entity.Property(e => e.IdGroupuser)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GROUPUSER");
            entity.Property(e => e.VNmgroupuser)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMGROUPUSER");
        });

        modelBuilder.Entity<TmhKamar>(entity =>
        {
            entity.HasKey(e => e.Kamar);

            entity.ToTable("TMH_KAMAR");

            entity.Property(e => e.Kamar)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("KAMAR");
            entity.Property(e => e.Harga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("HARGA");
            entity.Property(e => e.Idkamar)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDKAMAR");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Kelas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("KELAS");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}