// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WincareMigrations.NewModels;

#nullable disable

namespace Wincare.Core.Migrations
{
    [DbContext(typeof(SimpleContext))]
    [Migration("20240526164957_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("M_Gizi", b =>
                {
                    b.Property<Guid>("IdGizi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdGizi");

                    b.Property<decimal?>("DAir")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Air");

                    b.Property<decimal?>("DBdd")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Bdd");

                    b.Property<decimal?>("DCalsium")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Calsium");

                    b.Property<decimal?>("DEnergi")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Energi");

                    b.Property<decimal?>("DFe")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Fe");

                    b.Property<decimal?>("DFosfor")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Fosfor");

                    b.Property<decimal?>("DKh")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Kh");

                    b.Property<decimal?>("DLemak")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Lemak");

                    b.Property<decimal?>("DProtein")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Protein");

                    b.Property<decimal?>("DVita")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Vita");

                    b.Property<decimal?>("DVitb1")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Vitb1");

                    b.Property<decimal?>("DVitc")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Vitc");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<decimal>("OldIdGizi")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdGizi");

                    b.Property<string>("VGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Group");

                    b.Property<string>("VKandungan")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Kandungan");

                    b.Property<string>("VKdmakanan")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("Kdmakanan");

                    b.Property<string>("VNmmakanan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Nmmakanan");

                    b.Property<string>("VNote")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Note");

                    b.HasKey("IdGizi");

                    b.ToTable("M_Gizi");
                });

            modelBuilder.Entity("M_Kamarinap", b =>
                {
                    b.Property<decimal>("IdKamarinap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdKamarInap");

                    b.Property<int?>("IX")
                        .HasColumnType("integer")
                        .HasColumnName("IX");

                    b.Property<int?>("IY")
                        .HasColumnType("integer")
                        .HasColumnName("IY");

                    b.Property<decimal?>("IdHargakamar")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdHargakamar");

                    b.Property<decimal?>("IdMapid")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdMapid");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Isi")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("character(1)")
                        .HasColumnName("Isi")
                        .IsFixedLength();

                    b.Property<string>("KdTmpTidur")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("KdTmpTidur");

                    b.Property<string>("Kelas")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("Kelas");

                    b.Property<string>("KodeRuangan")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("KodeRuangan");

                    b.Property<string>("KodeTarif")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("KodeTarif");

                    b.Property<string>("Lantai")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("Lantai");

                    b.Property<string>("Nokamar")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("Nokamar");

                    b.HasKey("IdKamarinap");

                    b.HasIndex("IdHargakamar");

                    b.HasIndex("IdMapid");

                    b.HasIndex(new[] { "KdTmpTidur" }, "IX_TM_KAMARINAP_kdtmptidur");

                    b.HasIndex(new[] { "Lantai" }, "IX_TM_KAMARINAP_lantai");

                    b.ToTable("M_Kamarinap");
                });

            modelBuilder.Entity("M_KamarinapHarga", b =>
                {
                    b.Property<decimal>("IdKamarInapHarga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdKamarInapHarga");

                    b.Property<decimal?>("Adm")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Adm");

                    b.Property<decimal?>("Bahanalkes")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Bahanalkes");

                    b.Property<decimal?>("BeaPasien")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("BeaPasien");

                    b.Property<string>("By")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("By");

                    b.Property<decimal?>("DBearekanan")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("BeaRekanan");

                    b.Property<decimal?>("DCito")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("DCito");

                    b.Property<decimal?>("Diskon")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Diskon");

                    b.Property<decimal?>("Harga")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Harga");

                    b.Property<decimal>("IdKamarinap")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdKamarInap");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<decimal?>("JasaMedis")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("JasaMedis");

                    b.Property<decimal?>("JasaRS")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("JasaRS");

                    b.Property<string>("KdTmpTidur")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("KdTmpTidur");

                    b.Property<decimal?>("Penyulit")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("DPenyulit");

                    b.Property<decimal?>("RekananId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("RekananId");

                    b.Property<decimal?>("SecondTnd")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("SecondTnd");

                    b.Property<DateTime?>("Tglakhir")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("Tglakhir");

                    b.Property<DateTime?>("Tglawal")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("Tglawal");

                    b.HasKey("IdKamarInapHarga");

                    b.HasIndex("IdKamarinap");

                    b.ToTable("M_KamarinapHarga");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_AntrianCounter", b =>
                {
                    b.Property<long>("IdCounter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("IdCounter");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdCounter"));

                    b.Property<string>("Counter")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Counter");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Kdcounter")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("Kdcounter");

                    b.Property<string>("Kdlayanan")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("Kdlayanan");

                    b.Property<string>("Kdlokasi")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("Kdlokasi");

                    b.HasKey("IdCounter");

                    b.HasIndex(new[] { "IdCounter" }, "IX_M_AntrianCounter_idcounter");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_AntrianCounter_isaktif");

                    b.HasIndex(new[] { "Kdcounter" }, "IX_M_AntrianCounter_vkdcounter");

                    b.HasIndex(new[] { "Counter" }, "IX_M_AntrianCounter_vnmcounter");

                    b.ToTable("M_AntrianCounter");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_AntrianCounterAudio", b =>
                {
                    b.Property<long>("IdCounteraudio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("IdCounterAudio");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdCounteraudio"));

                    b.Property<string>("Counter")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Counter");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("File");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Kdcounter")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("KdCounter");

                    b.Property<string>("Kdlayanan")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("KdLayanan");

                    b.Property<string>("Kdlokasi")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("KdLokasi");

                    b.Property<string>("Nomor")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("Nomor");

                    b.HasKey("IdCounteraudio");

                    b.HasIndex(new[] { "Kdlayanan" }, "IX_M_AntrianCounterAudio__kdlayanan");

                    b.HasIndex(new[] { "Kdlokasi" }, "IX_M_AntrianCounterAudio__kdlokasi");

                    b.HasIndex(new[] { "Counter" }, "IX_M_AntrianCounterAudio_counter");

                    b.HasIndex(new[] { "File" }, "IX_M_AntrianCounterAudio_file");

                    b.HasIndex(new[] { "IdCounteraudio" }, "IX_M_AntrianCounterAudio_idcounteraudio");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_AntrianCounterAudio_isaktif");

                    b.HasIndex(new[] { "Kdcounter" }, "IX_M_AntrianCounterAudio_kdcounter");

                    b.HasIndex(new[] { "Nomor" }, "IX_M_AntrianCounterAudio_nomor");

                    b.ToTable("M_AntrianCounterAudio");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_AntrianLayanan", b =>
                {
                    b.Property<long>("IdLayanan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("IdLayanan");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdLayanan"));

                    b.Property<string>("Inisial")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("Inisial");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Kdlayanan")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("KdLayanan");

                    b.Property<string>("Kdlokasi")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("KdLokasi");

                    b.Property<string>("Layanan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Layanan");

                    b.HasKey("IdLayanan");

                    b.HasIndex(new[] { "IdLayanan" }, "IX_M_AntrianLayanan_idlayanan");

                    b.HasIndex(new[] { "Inisial" }, "IX_M_AntrianLayanan_inisial");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_AntrianLayanan_isaktif");

                    b.HasIndex(new[] { "Kdlayanan" }, "IX_M_AntrianLayanan_vkdlayan");

                    b.HasIndex(new[] { "Layanan" }, "IX_M_AntrianLayanan_vlayanan");

                    b.ToTable("M_AntrianLayanan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_AntrianLokasi", b =>
                {
                    b.Property<string>("Kdlokasi")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("Kdlokasi");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Action");

                    b.Property<long>("IdLokasi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("IdLokasi");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdLokasi"));

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Lokasi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Lokasi");

                    b.HasKey("Kdlokasi");

                    b.HasIndex(new[] { "Action" }, "IX_M_AntrianLokasi_action");

                    b.HasIndex(new[] { "IdLokasi" }, "IX_M_AntrianLokasi_idlokasi");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_AntrianLokasi_isaktif");

                    b.HasIndex(new[] { "Kdlokasi" }, "IX_M_AntrianLokasi_vkdlokasi");

                    b.HasIndex(new[] { "Lokasi" }, "IX_M_AntrianLokasi_vlokasi");

                    b.ToTable("M_AntrianLokasi");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Asal", b =>
                {
                    b.Property<long>("IdAsal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("IdAsal");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdAsal"));

                    b.Property<int?>("IdAsalGroup")
                        .HasColumnType("integer")
                        .HasColumnName("IdAsalGroup");

                    b.Property<bool>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("KdAsal")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("Kdasal");

                    b.Property<string>("NmAsal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NmAsal");

                    b.HasKey("IdAsal");

                    b.HasIndex(new[] { "IdAsal" }, "IX_M_Asal_IdAsal");

                    b.HasIndex(new[] { "IdAsalGroup" }, "IX_M_Asal_IdAsalgroup");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_Asal_IsAktif");

                    b.HasIndex(new[] { "KdAsal" }, "IX_M_Asal_Kdasal");

                    b.HasIndex(new[] { "NmAsal" }, "IX_M_Asal_Nmasal");

                    b.ToTable("M_Asal");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_AsalGroup", b =>
                {
                    b.Property<int>("IdAsalGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IdAsalGroup");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAsalGroup"));

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("NamaGroupAsal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NamaGroupAsal");

                    b.HasKey("IdAsalGroup");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_AsalGroup_IS_Aktif");

                    b.HasIndex(new[] { "IdAsalGroup" }, "IX_M_AsalGroup_IdAsalGroup");

                    b.HasIndex(new[] { "NamaGroupAsal" }, "IX_M_AsalGroup_NamaGroupAsal");

                    b.ToTable("M_AsalGroup");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Aturanpakai", b =>
                {
                    b.Property<decimal>("IdAturanpakai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdAturanpakai");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("KdAturanPakai")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("KdAturanPakai");

                    b.Property<string>("KetAturanpakai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("KetAturanpakai");

                    b.Property<string>("NamaAturanpakai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NamaAturanpakai");

                    b.HasKey("IdAturanpakai");

                    b.HasIndex(new[] { "IdAturanpakai" }, "IX_M_AturanPakai_IdAturanPakai");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_AturanPakai_IsAktif");

                    b.HasIndex(new[] { "KdAturanPakai" }, "IX_M_AturanPakai_KdAturanPakai");

                    b.HasIndex(new[] { "KetAturanpakai" }, "IX_M_AturanPakai_KetAturanPakai");

                    b.HasIndex(new[] { "NamaAturanpakai" }, "IX_M_AturanPakai_NmAturanPakai");

                    b.ToTable("M_AturanPakai");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Bank", b =>
                {
                    b.Property<Guid>("IdBank")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdBank");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Alamat");

                    b.Property<string>("Cabang")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Cabang");

                    b.Property<bool>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("KdAkun")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KdAkun");

                    b.Property<string>("KdBank")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("Kdbank");

                    b.Property<string>("Kota")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Kota");

                    b.Property<string>("NmBank")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NmBank");

                    b.Property<string>("NomorRekening")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomorRekening");

                    b.Property<decimal>("OldIdBank")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdBank");

                    b.Property<string>("Telepon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Telepon");

                    b.HasKey("IdBank");

                    b.ToTable("M_Bank");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Barang", b =>
                {
                    b.Property<Guid>("BarangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("barangId");

                    b.Property<decimal?>("Diskonoff")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("DiskonOff");

                    b.Property<decimal?>("Diskonon")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("DiskonOn");

                    b.Property<string>("Etiket")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Etiket");

                    b.Property<bool?>("EtiketQty")
                        .HasColumnType("boolean")
                        .HasColumnName("EtiketQty");

                    b.Property<DateTime?>("Expireddate")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("ExpiredDate");

                    b.Property<string>("Farmakoterapi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Farmakoterapi");

                    b.Property<decimal?>("Hargabeli")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("HargaBeli");

                    b.Property<decimal?>("Hargajual")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("HargaJual");

                    b.Property<decimal?>("IdFarmakoterapi")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdFarmakoterapi");

                    b.Property<decimal?>("IdSubfarmakoterapi")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdSubFarmakoterapi");

                    b.Property<bool?>("Isaktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<bool?>("Isformularium")
                        .HasColumnType("boolean")
                        .HasColumnName("IsFormularium");

                    b.Property<decimal?>("Isi")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Isi");

                    b.Property<string>("Jenis")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Jenis");

                    b.Property<string>("Kandungan")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Kandungan");

                    b.Property<decimal?>("KelompokId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("KelompokId");

                    b.Property<string>("Kemasan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Kemasan");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("kode");

                    b.Property<string>("Merk")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Merk");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Nama");

                    b.Property<string>("Nobatch")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NoBatch");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Note");

                    b.Property<decimal>("OldBarangId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldBarangId");

                    b.Property<string>("Pabrik")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Pabrik");

                    b.Property<string>("Satuan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Satuan");

                    b.Property<decimal?>("Stokmax")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("StokMax");

                    b.Property<decimal?>("Stokmin")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("StokMin");

                    b.Property<decimal?>("Stoknow")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("StokNow");

                    b.Property<string>("Subfarmakoterapi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("SubFarmakoterapi");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea")
                        .HasColumnName("Timestamp");

                    b.Property<string>("Tipebarang")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("character(1)")
                        .HasColumnName("TipeBarang")
                        .IsFixedLength();

                    b.Property<string>("Ukuran")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Ukuran");

                    b.HasKey("BarangId");

                    b.HasIndex("IdFarmakoterapi");

                    b.HasIndex("IdSubfarmakoterapi");

                    b.HasIndex(new[] { "Etiket" }, "IX_M_Barang_Etiket");

                    b.HasIndex(new[] { "Farmakoterapi" }, "IX_M_Barang_Farmakoterapi");

                    b.HasIndex(new[] { "BarangId" }, "IX_M_Barang_IdBarang");

                    b.HasIndex(new[] { "Isaktif" }, "IX_M_Barang_IsAktif");

                    b.HasIndex(new[] { "Isi" }, "IX_M_Barang_Isi");

                    b.HasIndex(new[] { "Jenis" }, "IX_M_Barang_Jenis");

                    b.HasIndex(new[] { "Kandungan" }, "IX_M_Barang_Kandungan");

                    b.HasIndex(new[] { "Kemasan" }, "IX_M_Barang_Kemasan");

                    b.HasIndex(new[] { "Kode" }, "IX_M_Barang_Kode");

                    b.HasIndex(new[] { "Merk" }, "IX_M_Barang_Merk");

                    b.HasIndex(new[] { "Nama" }, "IX_M_Barang_Nama");

                    b.HasIndex(new[] { "Pabrik" }, "IX_M_Barang_Pabrik");

                    b.HasIndex(new[] { "Satuan" }, "IX_M_Barang_Satuan");

                    b.HasIndex(new[] { "Subfarmakoterapi" }, "IX_M_Barang_SubFarmakoterapi");

                    b.HasIndex(new[] { "Tipebarang" }, "IX_M_Barang_TipeBarang");

                    b.HasIndex(new[] { "Ukuran" }, "IX_M_Barang_Ukuran");

                    b.HasIndex(new[] { "KelompokId" }, "IX_M_Barang_kelompokId");

                    b.ToTable("M_Barang");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_BarangAturanpakai", b =>
                {
                    b.Property<decimal>("IdAturanpakai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdAturanpakai");

                    b.Property<string>("KdAturanPakai")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("KdAturanPakai");

                    b.Property<string>("Ketaturanpakai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("KetAturanPakai");

                    b.Property<string>("Nmaturanpakai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NmAturanPakai");

                    b.HasKey("IdAturanpakai");

                    b.ToTable("M_BarangAturanpakai");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Coa", b =>
                {
                    b.Property<Guid>("IdCoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdCoa");

                    b.Property<string>("DC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("DC");

                    b.Property<DateTime?>("DTglsaldoawal")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("TglSaldoAwal");

                    b.Property<Guid?>("IdSubklasifikasi")
                        .HasColumnType("uuid")
                        .HasColumnName("Subklasifikasi");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Kdakun")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("Kdakun");

                    b.Property<string>("NmAkun")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NmAkun");

                    b.Property<string>("NmAkunAlias")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NmAkunAlias");

                    b.Property<decimal>("OldIdCoa")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdCoa");

                    b.Property<decimal?>("OldIdSubklasifikasi")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldSubklasifikasi");

                    b.Property<decimal?>("SaldoAwal")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("SaldoAwal");

                    b.HasKey("IdCoa");

                    b.HasIndex("IdSubklasifikasi");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_Coa_ISAKTIF");

                    b.HasIndex(new[] { "SaldoAwal" }, "IX_M_Coa_SALDO");

                    b.HasIndex(new[] { "DC" }, "IX_M_Coa_VDC");

                    b.HasIndex(new[] { "Kdakun" }, "IX_M_Coa_VKDAKUN");

                    b.HasIndex(new[] { "NmAkun" }, "IX_M_Coa_VNMAKUN");

                    b.ToTable("M_Coa");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_CoaGolongan", b =>
                {
                    b.Property<decimal>("IdGolongan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdGolongan");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("NmGolongan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NmGolongan");

                    b.HasKey("IdGolongan");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_CoaGolongan_IsAktif");

                    b.HasIndex(new[] { "NmGolongan" }, "IX_M_CoaGolongan_NmGolo");

                    b.ToTable("M_CoaGolongan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_CoaKlasifikasi", b =>
                {
                    b.Property<decimal>("IdKlasifikasi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdKlasifikasi");

                    b.Property<decimal?>("IdGolongan")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdGolongan");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("NmKlasifikasi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NmKlasifikasi");

                    b.Property<decimal?>("Urut")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("Urut");

                    b.HasKey("IdKlasifikasi");

                    b.HasIndex("IdGolongan");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_CoaKlasifikasi_IsAktif");

                    b.HasIndex(new[] { "NmKlasifikasi" }, "IX_M_CoaKlasifikasi_NmKlasifikasi");

                    b.ToTable("M_CoaKlasifikasi");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_CoaSubklasifikasi", b =>
                {
                    b.Property<Guid>("IdSubklasifikasi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdSubKlasifikasi");

                    b.Property<string>("DC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("DC");

                    b.Property<decimal?>("IdKlasifikasi")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdKlasifikasi");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Kdsubklasifikasi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("KdSubKlasifikasi");

                    b.Property<string>("NmSubKlasifikasi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NmSubKlasifikasi");

                    b.Property<decimal>("OldIdSubklasifikasi")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdSubKlasifikasi");

                    b.Property<decimal?>("Urut")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("Urut");

                    b.HasKey("IdSubklasifikasi");

                    b.HasIndex("IdKlasifikasi");

                    b.HasIndex(new[] { "DC" }, "IX_M_CoaSubKlasifikasi_DC");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_CoaSubKlasifikasi_ISAKTIF");

                    b.HasIndex(new[] { "Kdsubklasifikasi" }, "IX_M_CoaSubKlasifikasi_Kdsub");

                    b.HasIndex(new[] { "NmSubKlasifikasi" }, "IX_M_CoaSubKlasifikasi_Nmsub");

                    b.ToTable("M_CoaSubKlasifikasi");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_CountTraffic", b =>
                {
                    b.Property<Guid>("Idcounttraffic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdCountTraffic");

                    b.Property<string>("By")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("By");

                    b.Property<string>("Jam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("jam");

                    b.Property<string>("Menu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Menu");

                    b.Property<decimal>("OldIdcounttraffic")
                        .HasColumnType("numeric")
                        .HasColumnName("OldIdCountTraffic");

                    b.Property<string>("Submenu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("SubMenu");

                    b.Property<DateTime?>("Tanggal")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("Tanggal");

                    b.HasKey("Idcounttraffic");

                    b.ToTable("M_CountTraffic");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Departement", b =>
                {
                    b.Property<decimal>("IdDepartment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdDepartment");

                    b.Property<string>("NamaDepartemen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("NamaDepartemen");

                    b.HasKey("IdDepartment");

                    b.ToTable("M_Department");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Diagnosa", b =>
                {
                    b.Property<decimal>("IdDiagnosa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdDiagnosa");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<bool?>("IsPenyakit")
                        .HasColumnType("boolean")
                        .HasColumnName("Ispenyakit");

                    b.Property<string>("KdDTD")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("kdDTD");

                    b.Property<string>("KdDiagnosa")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KdDiagnosa");

                    b.Property<string>("NmDiagnosa")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("NmDiagnosa");

                    b.HasKey("IdDiagnosa");

                    b.HasIndex(new[] { "KdDiagnosa" }, "IX_M_Diagnosa_KdDiagnosa");

                    b.HasIndex(new[] { "NmDiagnosa" }, "IX_M_Diagnosa_NmDiagnosa");

                    b.ToTable("M_Diagnosa");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_DiagnosaMatrix", b =>
                {
                    b.Property<decimal>("IdDiagnosaMatrix")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("IdMatrixDiagnosa");

                    b.Property<decimal>("IdDiagnosa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("IdDiagnosa");

                    b.Property<decimal>("IdRuangan")
                        .HasColumnType("numeric")
                        .HasColumnName("IdRuangan");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Kddiagnosa")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KdDiagnosa");

                    b.Property<string>("Koderuangan")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KodeRuangan");

                    b.HasKey("IdDiagnosaMatrix");

                    b.ToTable("M_DiagnosaMatrix");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Dokter", b =>
                {
                    b.Property<decimal>("IdDokter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdDokter");

                    b.Property<string>("Alamatdokter")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("AlamatDokter");

                    b.Property<string>("Alamatpraktek")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("AlamatPraktek");

                    b.Property<string>("By")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("By");

                    b.Property<Guid>("IdCoa")
                        .HasColumnType("uuid")
                        .HasColumnName("IdCoa");

                    b.Property<string>("ImgFotodokter")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ImgFotodokter");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("KdDokter")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("KdDokter");

                    b.Property<string>("Kdakun")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KdAkun");

                    b.Property<string>("Kodetarif")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("character(2)")
                        .HasColumnName("KodeTarif")
                        .IsFixedLength();

                    b.Property<string>("NmDokter")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NmDokter");

                    b.Property<string>("Nosip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NoSip");

                    b.Property<decimal?>("Pin")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("Pin");

                    b.Property<string>("Spesialisasidokter")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("SpesialisasiDokter");

                    b.Property<string>("Telpdokter")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("TelpDokter");

                    b.Property<string>("Telppraktek")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Telppraktek");

                    b.Property<string>("Ttd")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("IsTtd");

                    b.HasKey("IdDokter");

                    b.HasIndex("IdCoa");

                    b.HasIndex(new[] { "KdDokter" }, "IX_M_Dokter_KdDokter");

                    b.HasIndex(new[] { "NmDokter" }, "IX_M_Dokter_NmDokter");

                    b.ToTable("M_Dokter");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_DokterHonor", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric")
                        .HasColumnName("Id");

                    b.Property<decimal?>("JasaMedis")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("JasaMedis");

                    b.Property<decimal?>("JasaRS")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("JasaRS");

                    b.Property<string>("KdDokter")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("KdDokter");

                    b.Property<string>("Ket")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Ket");

                    b.Property<string>("NmDokter")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NmDokter");

                    b.Property<decimal?>("Tarif")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Tarif");

                    b.HasKey("Id");

                    b.ToTable("M_DokterHonor");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_DokterNote", b =>
                {
                    b.Property<decimal>("IdDokterNote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdDokterNote");

                    b.Property<string>("By")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("By");

                    b.Property<decimal>("IdDokter")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdDokter");

                    b.Property<string>("KdDokter")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("KdDokter");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Keterangan");

                    b.Property<DateTime?>("TglInput")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("TglInput");

                    b.HasKey("IdDokterNote");

                    b.ToTable("M_DokterNote");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Dtd", b =>
                {
                    b.Property<decimal>("IdDtd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdDTD");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Kddtd")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KdDTD");

                    b.Property<string>("Nmdtd")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("NmDTD");

                    b.HasKey("IdDtd");

                    b.ToTable("M_DTD");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Farmakoterapi", b =>
                {
                    b.Property<decimal>("IdFarmakoterapi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric")
                        .HasColumnName("IdFarmakoterapi");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Nmfarmakoterapi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Nmfarmakoterapi");

                    b.HasKey("IdFarmakoterapi");

                    b.ToTable("M_Farmakoterapi");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_FarmakoterapiSub", b =>
                {
                    b.Property<decimal>("IdSubfarmakoterapi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdSubFarmakoterapi");

                    b.Property<decimal?>("IdFarmakoterapi")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdFarmakoterapi");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("NmSubFarmakoterapi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("NmSubFarmakoterapi");

                    b.HasKey("IdSubfarmakoterapi");

                    b.HasIndex("IdFarmakoterapi");

                    b.ToTable("M_FarmakoterapiSub");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Gudang", b =>
                {
                    b.Property<decimal>("IdGudangObat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdGudangObat");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<bool?>("IsListropp")
                        .HasColumnType("boolean")
                        .HasColumnName("IsListropp");

                    b.Property<bool?>("IsPaketbhp")
                        .HasColumnType("boolean")
                        .HasColumnName("IsPaketbhp");

                    b.Property<bool?>("IsRequest")
                        .HasColumnType("boolean")
                        .HasColumnName("IsRequest");

                    b.Property<bool?>("IsReturbhp")
                        .HasColumnType("boolean")
                        .HasColumnName("IsReturbhp");

                    b.Property<string>("IsTipebarang")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("IsTipebarang");

                    b.Property<string>("KodeInventory")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("KodeInventory");

                    b.Property<string>("NamaGudangObat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NamaGudangObat");

                    b.HasKey("IdGudangObat");

                    b.HasIndex(new[] { "KodeInventory" }, "IX_M_GudangKdinv");

                    b.HasIndex(new[] { "IsListropp" }, "IX_M_GudangLisrop");

                    b.HasIndex(new[] { "NamaGudangObat" }, "IX_M_GudangNamagudang");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_Gudang_IsAktif");

                    b.HasIndex(new[] { "IsRequest" }, "IX_M_Gudang_Isrequest");

                    b.ToTable("M_Gudang");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_HargaBarang", b =>
                {
                    b.Property<Guid>("Idhargabeli")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdHargaBeli");

                    b.Property<Guid?>("BarangId")
                        .HasColumnType("uuid")
                        .HasColumnName("BarangId");

                    b.Property<decimal?>("DiskonOff")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("DiskonOff");

                    b.Property<decimal?>("DiskonOn")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("DiskonOn");

                    b.Property<decimal?>("Harga")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Harga");

                    b.Property<string>("InputBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("InputBy");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("LastUpdate");

                    b.Property<decimal?>("OldBarangId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldBarangId");

                    b.Property<decimal>("OldIdhargabeli")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdHargaBeli");

                    b.Property<decimal?>("Ppn")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("PPN");

                    b.Property<decimal?>("SupplierId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("SupplierId");

                    b.HasKey("Idhargabeli");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_HargaBarang_IsAktif");

                    b.HasIndex(new[] { "BarangId" }, "IX_M_HargaBarang_barangId");

                    b.HasIndex(new[] { "DiskonOff" }, "IX_M_HargaBarang_diskonOff");

                    b.HasIndex(new[] { "DiskonOn" }, "IX_M_HargaBarang_diskonOn");

                    b.HasIndex(new[] { "Harga" }, "IX_M_HargaBarang_harga");

                    b.HasIndex(new[] { "LastUpdate" }, "IX_M_HargaBarang_lastupdate");

                    b.HasIndex(new[] { "Ppn" }, "IX_M_HargaBarang_ppn");

                    b.HasIndex(new[] { "SupplierId" }, "IX_M_HargaBarang_supplierId");

                    b.ToTable("M_HargaBarang");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Hargakamar", b =>
                {
                    b.Property<decimal>("IdHargakamar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdHargakamar");

                    b.Property<string>("By")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("By");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Kelas")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Kelas");

                    b.HasKey("IdHargakamar");

                    b.ToTable("M_Hargakamar");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Hargarekanan", b =>
                {
                    b.Property<Guid>("IdHargaRekanan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdHargaRekanan");

                    b.Property<Guid?>("BarangId")
                        .HasColumnType("uuid")
                        .HasColumnName("BarangId");

                    b.Property<decimal?>("Diskon")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Diskon");

                    b.Property<decimal?>("Harga")
                        .HasColumnType("decimal(19, 2)")
                        .HasColumnName("Harga");

                    b.Property<decimal?>("Hargajual")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Hargajual");

                    b.Property<string>("InpuBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("InpuBy");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("LastUpdate");

                    b.Property<decimal?>("Margin")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Margin");

                    b.Property<decimal?>("OldBarangId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldBarangId");

                    b.Property<decimal>("OldIdHargaRekanan")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdHargaRekanan");

                    b.Property<decimal?>("Ppn")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Ppn");

                    b.Property<decimal?>("RekananId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("RekananId");

                    b.HasKey("IdHargaRekanan");

                    b.HasIndex(new[] { "BarangId" }, "IX_M_HargaRekanan_barangId");

                    b.HasIndex(new[] { "Harga" }, "IX_M_HargaRekanan_harga");

                    b.HasIndex(new[] { "Hargajual" }, "IX_M_HargaRekanan_hargaJual");

                    b.HasIndex(new[] { "IdHargaRekanan" }, "IX_M_HargaRekanan_idHargaRekanan");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_HargaRekanan_isAktif");

                    b.HasIndex(new[] { "LastUpdate" }, "IX_M_HargaRekanan_lastUpdate");

                    b.HasIndex(new[] { "RekananId" }, "IX_M_HargaRekanan_rekananId");

                    b.ToTable("M_HargaRekanan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Jadwaldokter", b =>
                {
                    b.Property<decimal>("IdJadwal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdJadwal");

                    b.Property<string>("Hari")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("Hari");

                    b.Property<decimal>("IdDokter")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("IdDokter");

                    b.Property<decimal?>("IdRuangan")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("IdRuangan");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("JamFinish")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("JamFinish");

                    b.Property<string>("JamStart")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("JamStart");

                    b.Property<string>("KdDokter")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("KdDokter");

                    b.Property<string>("KodeRuangan")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("KodeRuangan");

                    b.Property<string>("NamaKlinik")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NamaKlinik");

                    b.Property<int?>("ServisTime")
                        .HasColumnType("integer")
                        .HasColumnName("ServisTime");

                    b.HasKey("IdJadwal");

                    b.HasIndex("IdDokter");

                    b.HasIndex("IdRuangan");

                    b.HasIndex(new[] { "Hari" }, "IX_M_JadwalDokter_Hari");

                    b.HasIndex(new[] { "IdJadwal" }, "IX_M_JadwalDokter_IdJadwal");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_JadwalDokter_IsAktif");

                    b.HasIndex(new[] { "JamFinish" }, "IX_M_JadwalDokter_JamFinish");

                    b.HasIndex(new[] { "JamStart" }, "IX_M_JadwalDokter_JamStart");

                    b.HasIndex(new[] { "KdDokter" }, "IX_M_JadwalDokter_KdDokter");

                    b.HasIndex(new[] { "KodeRuangan" }, "IX_M_JadwalDokter_KdRuangan");

                    b.HasIndex(new[] { "NamaKlinik" }, "IX_M_JadwalDokter_NamaKlinik");

                    b.ToTable("M_JadwalDokter");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_KamarInapRekanan", b =>
                {
                    b.Property<decimal>("IdKamarinaprek")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdKamarinaprek");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Kdtmptidur")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("KdTmpTidur");

                    b.Property<decimal>("OldRekananId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldRekananId");

                    b.Property<Guid>("RekananId")
                        .HasColumnType("uuid")
                        .HasColumnName("RekananId");

                    b.HasKey("IdKamarinaprek");

                    b.ToTable("M_KamarinapRekanan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_KelompokBarang", b =>
                {
                    b.Property<decimal>("KelompokId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("KelompokId");

                    b.Property<decimal?>("IdGroupTarif")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdGroupTarif");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("Kode");

                    b.Property<decimal?>("Margin")
                        .HasColumnType("numeric(18, 2)")
                        .HasColumnName("Margin");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Nama");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Note");

                    b.HasKey("KelompokId");

                    b.HasIndex(new[] { "IdGroupTarif" }, "IX_M_KelompokBarang_IDGROUP");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_KelompokBarang_ISAKTIF");

                    b.HasIndex(new[] { "KelompokId" }, "IX_M_KelompokBarang_KELOMPOKID");

                    b.HasIndex(new[] { "Kode" }, "IX_M_KelompokBarang_KODE");

                    b.HasIndex(new[] { "Nama" }, "IX_M_KelompokBarang_NAMA");

                    b.ToTable("M_KelompokBarang");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Kodepos", b =>
                {
                    b.Property<int>("IdKodepos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IdKodepos");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdKodepos"));

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_AKTIF");

                    b.Property<string>("Kabupaten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Kabupaten");

                    b.Property<string>("KdKodePos")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("KdKodePos");

                    b.Property<string>("Kecamatan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Kecamatan");

                    b.Property<string>("Kelurahan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Kelurahan");

                    b.Property<string>("Provinsi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Provinsi");

                    b.HasKey("IdKodepos");

                    b.ToTable("M_Kodepos");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Laboratorium", b =>
                {
                    b.Property<decimal>("IdPemeriksaanLab")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdPemeriksaanLab");

                    b.Property<decimal?>("IdGroup")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdGroup");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("KdPemeriksaanLab")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KdPemeriksaanLab");

                    b.Property<string>("NmPemeriksaanLab")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NmPemeriksaanLab");

                    b.HasKey("IdPemeriksaanLab");

                    b.HasIndex("IdGroup");

                    b.ToTable("M_Laboratorium");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_LaboratoriumGroup", b =>
                {
                    b.Property<decimal>("IdGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdGroup");

                    b.Property<decimal?>("IdGrouptarif")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdGrouptarif");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<bool?>("IsPk")
                        .HasColumnType("boolean")
                        .HasColumnName("IsPk");

                    b.Property<string>("VNmgroup")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Nmgroup");

                    b.HasKey("IdGroup");

                    b.ToTable("M_LaboratoriumGroup");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_LaboratoriumHarga", b =>
                {
                    b.Property<decimal>("IdLabharga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdLabharga");

                    b.Property<decimal?>("Bahanalkes")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Bahanalkes");

                    b.Property<decimal?>("Beapasien")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Beapasien");

                    b.Property<decimal?>("Bearekanan")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Bearekanan");

                    b.Property<string>("By")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("By");

                    b.Property<decimal?>("Cito")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Cito");

                    b.Property<decimal?>("DAdm")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Adm");

                    b.Property<DateTime?>("DLastupdate")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("LastUpdate");

                    b.Property<DateTime?>("DTglakhir")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("Tglakhir");

                    b.Property<DateTime?>("DTglawal")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("Tglawal");

                    b.Property<decimal?>("Diskon")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Diskon");

                    b.Property<decimal?>("Harga")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Harga");

                    b.Property<decimal?>("IdHargakamar")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdHargakamar");

                    b.Property<decimal?>("IdPemeriksaanLab")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdPemeriksaanLab");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<decimal?>("Jasamedis")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasamedis");

                    b.Property<decimal?>("Jasars")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasars");

                    b.Property<string>("KdPemeriksaanLab")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KdPemeriksaanLab");

                    b.Property<string>("Kelas")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("Kelas");

                    b.Property<decimal?>("Penyulit")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Penyulit");

                    b.Property<decimal>("RekananId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("RekananId");

                    b.Property<decimal?>("SecondTnd")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("SecondTnd");

                    b.HasKey("IdLabharga");

                    b.HasIndex("IdHargakamar");

                    b.HasIndex("IdPemeriksaanLab");

                    b.HasIndex("RekananId");

                    b.ToTable("M_LaboratoriumHarga");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_LaboratoriumRekanan", b =>
                {
                    b.Property<decimal>("IdLabRekanan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdLabrekanan");

                    b.Property<decimal?>("IdPemeriksaanLab")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdPemeriksaanLab");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("KdPemeriksaanLab")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KdPemeriksaanLab");

                    b.Property<decimal>("RekananId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("RekananId");

                    b.HasKey("IdLabRekanan");

                    b.HasIndex("IdPemeriksaanLab");

                    b.HasIndex("RekananId");

                    b.ToTable("M_LaboratoriumRekanan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Map", b =>
                {
                    b.Property<decimal>("IdMapid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdMapid");

                    b.Property<decimal>("IdRuang")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("IdRuang");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("BYTEA")
                        .HasColumnName("Image");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("KodeRuangan")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("KodeRuangan");

                    b.Property<string>("Nmmap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NmMap");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Note");

                    b.HasKey("IdMapid");

                    b.HasIndex("IdRuang");

                    b.ToTable("M_Map");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_MasterPaketH", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<decimal?>("DHarga")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Harga");

                    b.Property<decimal?>("IdGrouptarif")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdGroupTarif");

                    b.Property<decimal?>("Idmasterpemeriksaan")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdMasterPemeriksaan");

                    b.Property<decimal>("OldId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldId");

                    b.Property<string>("VKdpemeriksaan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("KdPemeriksaan");

                    b.Property<string>("VNmpemeriksaan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NmPemeriksaan");

                    b.Property<string>("VPenunjang")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Penunjang");

                    b.HasKey("Id");

                    b.ToTable("M_MasterPaketH");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_MasterTnd", b =>
                {
                    b.Property<double?>("IdGrouptarif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double precision")
                        .HasColumnName("IdGroupTarif");

                    b.Property<double?>("DHarga")
                        .HasColumnType("double precision")
                        .HasColumnName("Harga");

                    b.Property<double?>("DHargaBpjs")
                        .HasColumnType("double precision")
                        .HasColumnName("HargaBpjs");

                    b.Property<double?>("IsAktif")
                        .HasColumnType("double precision")
                        .HasColumnName("IsAktif");

                    b.Property<string>("VKdtarifdetail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("KdTarifDetail");

                    b.Property<string>("VKelas")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Kelas");

                    b.Property<string>("VNmgrouptarif")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("NmgroupTarif");

                    b.Property<string>("VNmtarifdetail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("NmTarifDetail");

                    b.HasKey("IdGrouptarif");

                    b.ToTable("M_MasterTnd");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Module", b =>
                {
                    b.Property<int>("IdModule")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IdModule");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdModule"));

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Nmmodule")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Nmmodule");

                    b.HasKey("IdModule");

                    b.ToTable("M_Module");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_ModuleDetail", b =>
                {
                    b.Property<int>("IdModuledetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IdModuleDetail");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdModuledetail"));

                    b.Property<int?>("IdModule")
                        .HasColumnType("integer")
                        .HasColumnName("IdModule");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("NmModulDetail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NmModulDetail");

                    b.Property<string>("NmModuleDetailSub")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NmModuleDetailSub");

                    b.Property<decimal?>("Urut")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("Urut");

                    b.HasKey("IdModuledetail");

                    b.HasIndex("IdModule");

                    b.ToTable("M_ModuleDetail");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Morfologi", b =>
                {
                    b.Property<decimal>("IdMorfologi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdMorfologi");

                    b.Property<decimal>("IdDiagnosa")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("IdDiagnosa");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Kddiagnosa")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KdDiagnosa");

                    b.Property<string>("Kdmorfologi")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KdMorfologi");

                    b.Property<string>("Nmmorfologi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NmMorfologi");

                    b.HasKey("IdMorfologi");

                    b.HasIndex("IdDiagnosa");

                    b.ToTable("M_Morfologi");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Obatunit", b =>
                {
                    b.Property<decimal>("IdObatUnit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdObatUnit");

                    b.Property<Guid?>("BarangId")
                        .HasColumnType("uuid")
                        .HasColumnName("BarangId");

                    b.Property<string>("By")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("By");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("ExpiredDate");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("KdObat")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("KdObat");

                    b.Property<string>("KodeInventory")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("KodeInventory");

                    b.Property<string>("NmObat")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NmObat");

                    b.Property<decimal?>("OldBarangId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldBarangId");

                    b.Property<bool?>("Rod")
                        .HasColumnType("boolean")
                        .HasColumnName("Rod");

                    b.Property<decimal?>("StokMax")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("StokMax");

                    b.Property<decimal?>("StokMin")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("StokMin");

                    b.Property<decimal?>("StokNow")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("StokNow");

                    b.HasKey("IdObatUnit");

                    b.HasIndex(new[] { "BarangId" }, "IX_M_ObatUnit_barangid");

                    b.HasIndex(new[] { "ExpiredDate" }, "IX_M_ObatUnit_d_expireddate");

                    b.HasIndex(new[] { "StokMax" }, "IX_M_ObatUnit_d_stokmax");

                    b.HasIndex(new[] { "StokMin" }, "IX_M_ObatUnit_d_stokmin");

                    b.HasIndex(new[] { "StokNow" }, "IX_M_ObatUnit_d_stoknow");

                    b.HasIndex(new[] { "IdObatUnit" }, "IX_M_ObatUnit_id_obatunit");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_ObatUnit_is_aktif");

                    b.HasIndex(new[] { "KodeInventory" }, "IX_M_ObatUnit_v_kdinventory");

                    b.HasIndex(new[] { "KdObat" }, "IX_M_ObatUnit_v_kdobat");

                    b.HasIndex(new[] { "Rod" }, "IX_M_ObatUnit_v_rod");

                    b.HasIndex(new[] { "NmObat" }, "IX_M_ObatUnit_vnmobat");

                    b.ToTable("M_ObatUnit");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_PaketHarga", b =>
                {
                    b.Property<Guid>("IdPaketkelas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdPaketkelas");

                    b.Property<decimal?>("Adm")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Adm");

                    b.Property<decimal?>("BahanAlkes")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("BahanAlkes");

                    b.Property<decimal?>("Beapasien")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Beapasien");

                    b.Property<decimal?>("Bearekanan")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Bearekanan");

                    b.Property<string>("By")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("By");

                    b.Property<decimal?>("Cito")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Cito");

                    b.Property<decimal?>("DPenyulit")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Penyulit");

                    b.Property<decimal?>("DSubtotal")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Subtotal");

                    b.Property<decimal?>("Diskon")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Diskon");

                    b.Property<decimal?>("Harga")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Harga");

                    b.Property<Guid>("IdMasterPemeriksaanPenunjang")
                        .HasColumnType("uuid")
                        .HasColumnName("IdMasterPemeriksaanPenunjang");

                    b.Property<Guid?>("IdPenunjangDetail")
                        .HasColumnType("uuid")
                        .HasColumnName("IdPenunjangDetail");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<decimal?>("JasaRS")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("JasaRS");

                    b.Property<decimal?>("Jasamedis")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasamedis");

                    b.Property<decimal?>("Jasamedis2")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasamedis2");

                    b.Property<decimal?>("Jasamedis3")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasamedis3");

                    b.Property<decimal?>("Jasamedis4")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasamedis4");

                    b.Property<decimal?>("Jasamedis5")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasamedis5");

                    b.Property<decimal?>("Jumlah")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jumlah");

                    b.Property<string>("Kelas")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Kelas");

                    b.Property<DateTime?>("Lastupdate")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("LastUpdate");

                    b.Property<decimal>("OldIdMasterPemeriksaanPenunjang")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdMasterPemeriksaanPenunjang");

                    b.Property<decimal>("OldIdPaketkelas")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdPaketkelas");

                    b.Property<decimal?>("OldIdPenunjangDetail")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdPenunjangDetail");

                    b.Property<decimal>("OldRekananId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldRekananid");

                    b.Property<Guid>("RekananId")
                        .HasColumnType("uuid")
                        .HasColumnName("RekananId");

                    b.Property<decimal?>("SecondTnd")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("SecondTnd");

                    b.Property<DateTime?>("Tglakhir")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("TglAkhir");

                    b.Property<DateTime?>("Tglawal")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("TglAwal");

                    b.HasKey("IdPaketkelas");

                    b.ToTable("M_PaketHarga");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_PaketHargaBaru", b =>
                {
                    b.Property<decimal>("IdPaketkelas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdPaketkelas");

                    b.Property<decimal?>("Adm")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Adm");

                    b.Property<decimal?>("Bahanalkes")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Bahanalkes");

                    b.Property<decimal?>("Beapasien")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Beapasien");

                    b.Property<decimal?>("Bearekanan")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Bearekanan");

                    b.Property<string>("By")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("By");

                    b.Property<decimal?>("Cito")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Cito");

                    b.Property<decimal?>("Diskon")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Diskon");

                    b.Property<decimal?>("Harga")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Harga");

                    b.Property<Guid>("IdMasterPemeriksaanPenunjang")
                        .HasColumnType("uuid")
                        .HasColumnName("IdMasterPemeriksaanPenunjang");

                    b.Property<Guid?>("IdPenunjangDetail")
                        .HasColumnType("uuid")
                        .HasColumnName("IdPenunjangDetail");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<decimal?>("Jasamedis")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasamedis");

                    b.Property<decimal?>("Jasamedis2")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasamedis2");

                    b.Property<decimal?>("Jasamedis3")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasamedis3");

                    b.Property<decimal?>("Jasamedis4")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasamedis4");

                    b.Property<decimal?>("Jasamedis5")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasamedis5");

                    b.Property<decimal?>("Jasars")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("JasaRS");

                    b.Property<decimal?>("Jumlah")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jumlah");

                    b.Property<string>("Kelas")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Kelas");

                    b.Property<DateTime?>("Lastupdate")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("Lastupdate");

                    b.Property<decimal>("OldIdMasterPemeriksaanPenunjang")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdMasterPemeriksaanPenunjang");

                    b.Property<decimal?>("OldIdPenunjangDetail")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdPenunjangDetail");

                    b.Property<decimal>("OldRekananid")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldRekananId");

                    b.Property<decimal?>("Penyulit")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Penyulit");

                    b.Property<Guid>("Rekananid")
                        .HasColumnType("uuid")
                        .HasColumnName("RekananId");

                    b.Property<decimal?>("SecondTnd")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("SecondTnd");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Subtotal");

                    b.Property<DateTime?>("Tglakhir")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("Tglakhir");

                    b.Property<DateTime?>("Tglawal")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("Tglawal");

                    b.HasKey("IdPaketkelas");

                    b.ToTable("M_PaketHargaBaru");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_PaketMatrix", b =>
                {
                    b.Property<Guid>("IdPaketmatrix")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdPaketMatrix");

                    b.Property<decimal>("IdMasterpemeriksaanpenunjang")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdMasterpemeriksaanpenunjang");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("KodeRuangan")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("Koderuangan");

                    b.Property<decimal>("OldIdPaketmatrix")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdPaketmatrix");

                    b.HasKey("IdPaketmatrix");

                    b.ToTable("M_PaketMatrix");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_PaketRekanan", b =>
                {
                    b.Property<Guid>("IdPaketRekanan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdPaketRekanan");

                    b.Property<Guid>("IdMasterPemeriksaanPenunjang")
                        .HasColumnType("uuid")
                        .HasColumnName("IdMasterPemeriksaanPenunjang");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<decimal>("OldIdMasterPemeriksaanPenunjang")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdMasterPemeriksaanPenunjang");

                    b.Property<decimal>("OldIdPaketRekanan")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdPaketRekanan");

                    b.Property<decimal>("OldRekananId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldRekananId");

                    b.Property<Guid>("RekananId")
                        .HasColumnType("uuid")
                        .HasColumnName("RekananId");

                    b.HasKey("IdPaketRekanan");

                    b.ToTable("M_PaketRekanan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Paketdetail", b =>
                {
                    b.Property<decimal>("IdPaketdetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdPaketdetail");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Group");

                    b.Property<decimal?>("Harga")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Harga");

                    b.Property<string>("KdPaketDetail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("KdPaketDetail");

                    b.Property<string>("NmPaketDetail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NmPaketDetail");

                    b.Property<string>("Rekanan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Rekanan");

                    b.Property<string>("VTipe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Tipe");

                    b.HasKey("IdPaketdetail");

                    b.ToTable("M_PaketDetail");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Pasien", b =>
                {
                    b.Property<Guid>("IdPasien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdPasien");

                    b.Property<string>("AgamaPasien")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("AgamaPasien");

                    b.Property<string>("AlamatPasien")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("AlamatPasien");

                    b.Property<string>("AlamatPekerjaan")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("AlamatPekerjaan");

                    b.Property<string>("AlamatPenanggung")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("AlamatPenanggung");

                    b.Property<string>("AlergiPasien")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("AlergiPasien");

                    b.Property<string>("AyahPasien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("AyahPasien");

                    b.Property<string>("By")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("By");

                    b.Property<string>("CatKhusPasien")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("CatKhusPasien");

                    b.Property<string>("Goldarah")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("Goldarah");

                    b.Property<string>("HpPasien")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("HpPasien");

                    b.Property<string>("IbuPasien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("IbuPasien");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<bool?>("IsBlacklist")
                        .HasColumnType("boolean")
                        .HasColumnName("IsBlacklist");

                    b.Property<bool?>("IsKunjungan")
                        .HasColumnType("boolean")
                        .HasColumnName("IsKunjungan");

                    b.Property<string>("Iscetakkartu")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("character(1)")
                        .HasColumnName("Iscetakkartu")
                        .IsFixedLength();

                    b.Property<string>("JenisIdentitas")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("JenisIdentitas");

                    b.Property<string>("Jenispasien")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Jenispasien");

                    b.Property<string>("Kelaminpasien")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Kelaminpasien");

                    b.Property<string>("Kodepos")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("Kodepos");

                    b.Property<string>("KotaPasien")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("KotaPasien");

                    b.Property<string>("NamaKelPasien")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NamaKelPasien");

                    b.Property<string>("NamaPasien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NamaPasien");

                    b.Property<string>("NamaPenanggung")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NamaPenanggung");

                    b.Property<string>("NoPenjamin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NoPenjamin");

                    b.Property<string>("Noktpsimpasien")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Noktpsimpasien");

                    b.Property<decimal>("OldIdPasien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdPasien");

                    b.Property<string>("PasanganPasien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("PasanganPasien");

                    b.Property<string>("PasienNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("PasienNo");

                    b.Property<string>("PekerjaanPasien")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("PekerjaanPasien");

                    b.Property<string>("Pendidikanpasien")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("PendidikanPasien");

                    b.Property<string>("Perusahaan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Perusahaan");

                    b.Property<string>("Petugas")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Petugas");

                    b.Property<string>("Provinsi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Provinsi");

                    b.Property<decimal?>("RekananId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("RekananId");

                    b.Property<string>("Rhesus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("Rhesus");

                    b.Property<string>("StatusKWNPasien")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("StatusKWNPasien");

                    b.Property<string>("Suku")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Suku");

                    b.Property<string>("TelpPasien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("TelpPasien");

                    b.Property<string>("TelpPekerjaan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("TelpPekerjaan");

                    b.Property<string>("TelpPenanggung")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("TelpPenanggung");

                    b.Property<DateTime?>("Tgldaftar")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("Tgldaftar");

                    b.Property<DateTime?>("Tgllahirpasien")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("Tgllahirpasien");

                    b.Property<string>("Tmptlahirpasien")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Tmptlahirpasien");

                    b.Property<string>("Warganegara")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Warganegara");

                    b.HasKey("IdPasien");

                    b.HasIndex("RekananId");

                    b.HasIndex(new[] { "AgamaPasien" }, "IX_M_Pasien_agama");

                    b.HasIndex(new[] { "AlamatPasien" }, "IX_M_Pasien_alamat");

                    b.HasIndex(new[] { "IsBlacklist" }, "IX_M_Pasien_blacklist");

                    b.HasIndex(new[] { "HpPasien" }, "IX_M_Pasien_hp");

                    b.HasIndex(new[] { "IdPasien" }, "IX_M_Pasien_idpasien");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_Pasien_isaktif");

                    b.HasIndex(new[] { "Kelaminpasien" }, "IX_M_Pasien_kelamin");

                    b.HasIndex(new[] { "KotaPasien" }, "IX_M_Pasien_kota");

                    b.HasIndex(new[] { "NamaPasien" }, "IX_M_Pasien_namapasien");

                    b.HasIndex(new[] { "Noktpsimpasien" }, "IX_M_Pasien_noktp");

                    b.HasIndex(new[] { "NoPenjamin" }, "IX_M_Pasien_nopenjamin");

                    b.HasIndex(new[] { "PekerjaanPasien" }, "IX_M_Pasien_pekerjaan");

                    b.HasIndex(new[] { "StatusKWNPasien" }, "IX_M_Pasien_statuskawin");

                    b.HasIndex(new[] { "TelpPasien" }, "IX_M_Pasien_telp");

                    b.HasIndex(new[] { "Tmptlahirpasien" }, "IX_M_Pasien_tempatlahir");

                    b.HasIndex(new[] { "Tgllahirpasien" }, "IX_M_Pasien_tgllahir");

                    b.ToTable("M_Pasien");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_PemeriksaanPenunjang", b =>
                {
                    b.Property<decimal>("IdMasterPemeriksaanPenunjang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdMasterPemeriksaanPenunjang");

                    b.Property<decimal?>("BeaPasien")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("BeaPasien");

                    b.Property<decimal?>("BeaRekanan")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("BeaRekanan");

                    b.Property<string>("By")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("By");

                    b.Property<decimal?>("Harga")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Harga");

                    b.Property<Guid>("IdGroupTarif")
                        .HasColumnType("uuid")
                        .HasColumnName("IdGroupTarif");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("KdPemeriksaan")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KdPemeriksaan");

                    b.Property<string>("NmPemeriksaan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NmPemeriksaan");

                    b.Property<decimal?>("OldIdGroupTarif")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdGroupTarif");

                    b.Property<decimal>("OldRekananId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldRekananId");

                    b.Property<string>("Penunjang")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("Penunjang");

                    b.Property<Guid>("RekananId")
                        .HasColumnType("uuid")
                        .HasColumnName("RekananId");

                    b.HasKey("IdMasterPemeriksaanPenunjang");

                    b.ToTable("M_PemeriksaanPenunjang");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_PemeriksaanPenunjangDetail", b =>
                {
                    b.Property<decimal>("IdPenunjangDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdPenunjangDetail");

                    b.Property<decimal?>("BeaPasien")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("BeaPasien");

                    b.Property<decimal?>("BeaRekanan")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("BeaRekanan");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Group");

                    b.Property<decimal?>("Harga")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Harga");

                    b.Property<decimal?>("IdMasterPemeriksaanPenunjang")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdMasterPemeriksaanPenunjang");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<decimal?>("Jumlah")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jumlah");

                    b.Property<string>("KdDetail")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("KdDetail");

                    b.Property<string>("KdPemeriksaan")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KdPemeriksaan");

                    b.Property<string>("KodeTarif")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("KodeTarif");

                    b.Property<string>("NmDetail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("NmDetail");

                    b.Property<string>("Tipe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Tipe");

                    b.HasKey("IdPenunjangDetail");

                    b.HasIndex("IdMasterPemeriksaanPenunjang");

                    b.ToTable("M_PemeriksaanPenunjangDetail");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Radiologi", b =>
                {
                    b.Property<decimal>("IdPemeriksaanRad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdPemeriksaanRad");

                    b.Property<decimal?>("IdGroup")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdGroup");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Kdpemeriksaanrad")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("KdPemeriksaanRad");

                    b.Property<string>("NmPemeriksaanRad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NmPemeriksaanRad");

                    b.HasKey("IdPemeriksaanRad");

                    b.HasIndex("IdGroup");

                    b.ToTable("M_Radiologi");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_RadiologiGroup", b =>
                {
                    b.Property<decimal>("IdGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdGroup");

                    b.Property<decimal?>("IdGrouptarif")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdGrouptarif");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Nmgroup")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Nmgroup");

                    b.HasKey("IdGroup");

                    b.ToTable("M_RadiologiGroup");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_RadiologiHarga", b =>
                {
                    b.Property<decimal>("IdRadharga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdRadHarga");

                    b.Property<decimal?>("Adm")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Adm");

                    b.Property<decimal?>("BahanAlkes")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("BahanAlkes");

                    b.Property<decimal?>("Bearekanan")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("BeaRekanan");

                    b.Property<decimal?>("Cito")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Cito");

                    b.Property<decimal?>("DBeapasien")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("BeaPasien");

                    b.Property<decimal?>("DDiskon")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Diskon");

                    b.Property<decimal?>("DHarga")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Harga");

                    b.Property<DateTime?>("DLastupdate")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("Lastupdate");

                    b.Property<decimal?>("DSecondTnd")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("SecondTnd");

                    b.Property<DateTime?>("DTglakhir")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("Tglakhir");

                    b.Property<decimal?>("IdHargakamar")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdHargakamar");

                    b.Property<decimal>("IdPemeriksaanRad")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdPemeriksaanRad");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<decimal?>("Jasamedis")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("JasaMedis");

                    b.Property<decimal?>("Jasars")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("JasaRS");

                    b.Property<string>("KdPemeriksaanRad")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("KdPemeriksaanRad");

                    b.Property<string>("Kelas")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("Kelas");

                    b.Property<decimal?>("Penyulit")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Penyulit");

                    b.Property<decimal>("Rekananid")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("RekananId");

                    b.Property<DateTime?>("Tglawal")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("Tglawal");

                    b.Property<string>("VBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("By");

                    b.HasKey("IdRadharga");

                    b.HasIndex("IdHargakamar");

                    b.HasIndex("IdPemeriksaanRad");

                    b.HasIndex("Rekananid");

                    b.ToTable("M_RadiologiHarga");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_RadiologiRekanan", b =>
                {
                    b.Property<decimal>("IdRadrekanan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdRadrekanan");

                    b.Property<decimal>("IdPemeriksaanRad")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdPemeriksaanRad");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("KdPemeriksaanRad")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("KdPemeriksaanRad");

                    b.Property<decimal>("RekananId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("RekananId");

                    b.HasKey("IdRadrekanan");

                    b.HasIndex("IdPemeriksaanRad");

                    b.HasIndex("RekananId");

                    b.ToTable("M_RadiologiRekanan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Rekanan", b =>
                {
                    b.Property<decimal>("IdRekanan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdRekanan");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Alamat");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Alias");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<bool>("IsCob")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsCob");

                    b.Property<bool?>("IsPaketbhp")
                        .HasColumnType("boolean")
                        .HasColumnName("IsPaketBHP");

                    b.Property<bool?>("IsTarif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsTarif");

                    b.Property<bool?>("IsTarifNonMed")
                        .HasColumnType("boolean")
                        .HasColumnName("IsTarifNonMed");

                    b.Property<string>("KdAkun")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KdAkun");

                    b.Property<string>("Kota")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Kota");

                    b.Property<string>("NmRekanan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NmRekanan");

                    b.Property<string>("Telp")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Telp");

                    b.HasKey("IdRekanan");

                    b.HasIndex(new[] { "Alias" }, "IX_M_Rekanan_Alias");

                    b.HasIndex(new[] { "IdRekanan" }, "IX_M_Rekanan_IdRekanan");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_Rekanan_IsAktif");

                    b.HasIndex(new[] { "NmRekanan" }, "IX_M_Rekanan_NmRekanan");

                    b.ToTable("M_Rekanan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Ruang", b =>
                {
                    b.Property<decimal>("IdRuang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdRuang");

                    b.Property<string>("GdgPaket")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("GdgPaket");

                    b.Property<string>("GdgPenerimaan")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("GdgPenerimaan");

                    b.Property<string>("GdgRetur")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("GdgRetur");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<bool?>("IsTarif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsTarif");

                    b.Property<string>("Kamar")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("Kamar");

                    b.Property<string>("KdInhealth")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("KdInhealth");

                    b.Property<string>("Kelompok")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("character(1)")
                        .HasColumnName("Kelompok")
                        .IsFixedLength();

                    b.Property<string>("KodeInventory")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("KodeInventory");

                    b.Property<decimal?>("KodeInventoryGudangObat")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("KodeInventoryGudangObat");

                    b.Property<decimal?>("KodeRequestGudangObat")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("KodeRequestGudangObat");

                    b.Property<string>("KodeRequestObat")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("KodeRequestObat");

                    b.Property<string>("KodeTarif")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("KodeTarif");

                    b.Property<string>("Koderuangan")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("KodeRuangan");

                    b.Property<string>("LynInhealth")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("LynInhealth");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Nama");

                    b.Property<string>("Noruang")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("NoRuang");

                    b.HasKey("IdRuang");

                    b.HasIndex(new[] { "Koderuangan" }, "IX_M_Ruang");

                    b.HasIndex(new[] { "Nama" }, "IX_M_Ruang_1");

                    b.HasIndex(new[] { "Kamar" }, "IX_M_Ruang_2");

                    b.HasIndex(new[] { "KodeInventoryGudangObat" }, "IX_M_Ruang_3");

                    b.HasIndex(new[] { "KodeRequestGudangObat" }, "IX_M_Ruang_4");

                    b.HasIndex(new[] { "KodeTarif" }, "IX_M_Ruang_5");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_Ruang_6");

                    b.HasIndex(new[] { "IdRuang" }, "IX_M_Ruang_7");

                    b.HasIndex(new[] { "KdInhealth" }, "IX_V_KDINHEALTH");

                    b.HasIndex(new[] { "LynInhealth" }, "IX_V_LYNINHEALTH");

                    b.ToTable("M_Ruang");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_SettingAdm", b =>
                {
                    b.Property<decimal>("IdAdm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdSettingAdm");

                    b.Property<decimal?>("Biaya")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Biaya");

                    b.Property<string>("Kategori")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Kategori");

                    b.Property<decimal?>("OldRekananId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldRekananId");

                    b.Property<decimal?>("Percent")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Percent");

                    b.Property<Guid>("RekananId")
                        .HasColumnType("uuid")
                        .HasColumnName("RekananId");

                    b.HasKey("IdAdm");

                    b.ToTable("M_SettingAdm");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_SettingBayar", b =>
                {
                    b.Property<int>("IdSettingBayar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IdSettingBayar");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdSettingBayar"));

                    b.Property<string>("CaraBayar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("CaraBayar");

                    b.Property<string>("VKdakun")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KdAkun");

                    b.HasKey("IdSettingBayar");

                    b.ToTable("M_SettingBayar");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_SettingDaftar", b =>
                {
                    b.Property<int>("IdSettingdaftar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IdSettingdaftar");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdSettingdaftar"));

                    b.Property<bool?>("IsTampil")
                        .HasColumnType("boolean")
                        .HasColumnName("IsTampil");

                    b.Property<string>("KodeRuangan")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("Koderuangan");

                    b.Property<string>("NmUnitDaftar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NmUnitDaftar");

                    b.Property<string>("Tujuan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Tujuan");

                    b.HasKey("IdSettingdaftar");

                    b.ToTable("M_SettingDaftar");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_SettingKomputerAntrian", b =>
                {
                    b.Property<int>("IdSettingKomp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IdSettingKomp");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdSettingKomp"));

                    b.Property<string>("KdCounter")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("KdCounter");

                    b.Property<string>("KdJenisLayanan")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("KdJenisLayanan");

                    b.Property<string>("KdLokasi")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("KdLokasi");

                    b.Property<string>("NmKomputer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NmKomputer");

                    b.Property<DateTime?>("Tanggal")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("Tanggal");

                    b.HasKey("IdSettingKomp");

                    b.HasIndex(new[] { "IdSettingKomp" }, "IX_M_SettingKomputerAntrian_idsettingkomp");

                    b.HasIndex(new[] { "KdCounter" }, "IX_M_SettingKomputerAntrian_vkdcounter");

                    b.HasIndex(new[] { "KdJenisLayanan" }, "IX_M_SettingKomputerAntrian_vkdlayanan");

                    b.HasIndex(new[] { "KdLokasi" }, "IX_M_SettingKomputerAntrian_vkdlokasi");

                    b.HasIndex(new[] { "NmKomputer" }, "IX_M_SettingKomputerAntrian_vnmkomp");

                    b.ToTable("M_SettingKomputerAntrian");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_SettingPemeriksaan", b =>
                {
                    b.Property<int>("IdSettingperiksa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IdSettingPeriksaan");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdSettingperiksa"));

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("Group");

                    b.Property<bool?>("IsTampil")
                        .HasColumnType("boolean")
                        .HasColumnName("IsTampil");

                    b.Property<string>("Nmpemeriksaan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NmPemeriksaan");

                    b.HasKey("IdSettingperiksa");

                    b.ToTable("M_SettingPemeriksaan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Smf", b =>
                {
                    b.Property<int>("IdSmf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IdSmf");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdSmf"));

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Kdsmf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("Kdsmf");

                    b.Property<string>("Nmsmf")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Nmsmf");

                    b.HasKey("IdSmf");

                    b.ToTable("M_Smf");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Standartfield", b =>
                {
                    b.Property<decimal>("IdField")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdField");

                    b.Property<string>("DeskField")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("VDeskfield");

                    b.Property<decimal?>("IdFieldgroup")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdFieldgroup");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Keterangan");

                    b.Property<string>("KodeField")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("KodeField");

                    b.HasKey("IdField");

                    b.HasIndex("IdFieldgroup");

                    b.ToTable("M_Standartfield");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_StandartfieldGroup", b =>
                {
                    b.Property<decimal>("IdFieldgroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdFieldgroup");

                    b.Property<DateTime?>("DTanggal")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("DTanggal");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("VKeterangan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("VKeterangan");

                    b.Property<string>("VNmfieldgroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Nmfieldgroup");

                    b.HasKey("IdFieldgroup");

                    b.ToTable("M_StandartfieldGroup");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Status", b =>
                {
                    b.Property<int>("IdStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IdStatus");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdStatus"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("VStatus");

                    b.HasKey("IdStatus");

                    b.HasIndex(new[] { "Status" }, "IX_M_Status");

                    b.HasIndex(new[] { "IdStatus" }, "IX_M_Status_1");

                    b.ToTable("M_Status");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Supplier", b =>
                {
                    b.Property<decimal>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("SupplierId");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Alamat");

                    b.Property<string>("Cp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Cp");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Fax");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("KdAkun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("KdAkun");

                    b.Property<string>("Kota")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Kota");

                    b.Property<string>("NamaSupplier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NamaSupplier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Note");

                    b.Property<string>("Telpon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Telpon");

                    b.HasKey("SupplierId");

                    b.HasIndex(new[] { "Alamat" }, "IX_M_Supplier_ALAMAT");

                    b.HasIndex(new[] { "IsAktif" }, "IX_M_Supplier_ISAKTIF");

                    b.HasIndex(new[] { "NamaSupplier" }, "IX_M_Supplier_NAMA");

                    b.HasIndex(new[] { "SupplierId" }, "IX_M_Supplier_SUPPLIERID");

                    b.HasIndex(new[] { "KdAkun" }, "IX_M_Supplier_V_KDAKUN");

                    b.ToTable("M_Supplier");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifDetail", b =>
                {
                    b.Property<Guid>("IdTarifdetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdTarifdetail");

                    b.Property<int?>("IdGroupTarif")
                        .HasColumnType("integer")
                        .HasColumnName("IdGroupTarif");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("KdTarifDetail")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("KdTarifDetail");

                    b.Property<string>("KodeTarifLayan")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("KodeTarifLayan");

                    b.Property<int>("Kodetariflayan")
                        .HasColumnType("integer");

                    b.Property<string>("NmTarifDetail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NmTarifDetail");

                    b.Property<decimal>("OldIdTarifdetail")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdTarifdetail");

                    b.HasKey("IdTarifdetail");

                    b.HasIndex("IdGroupTarif");

                    b.HasIndex("Kodetariflayan");

                    b.ToTable("M_TarifDetail");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifGroup", b =>
                {
                    b.Property<int>("IdGrouptarif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IdGroupTarif");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdGrouptarif"));

                    b.Property<string>("AliasGroup")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("Aliasgroup");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("KdAkun")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KdAkun");

                    b.Property<string>("NmGroupTarif")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("NmGroupTarif");

                    b.HasKey("IdGrouptarif");

                    b.ToTable("M_TarifGroup");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifHarga", b =>
                {
                    b.Property<Guid>("IdTarifkelas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdTarifkelas");

                    b.Property<decimal?>("Adm")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Adm");

                    b.Property<decimal?>("Bahanalkes")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Bahanalkes");

                    b.Property<decimal?>("Beapasien")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Beapasien");

                    b.Property<decimal?>("Bearekanan")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Bearekanan");

                    b.Property<string>("By")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("By");

                    b.Property<decimal?>("Cito")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Cito");

                    b.Property<decimal?>("Diskon")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Diskon");

                    b.Property<decimal?>("Harga")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Harga");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<decimal?>("Jasamedis")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasamedis");

                    b.Property<decimal?>("Jasamedis2")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasamedis2");

                    b.Property<decimal?>("Jasamedis3")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasamedis3");

                    b.Property<decimal?>("Jasamedis4")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasamedis4");

                    b.Property<decimal?>("Jasamedis5")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasamedis5");

                    b.Property<decimal?>("Jasars")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Jasars");

                    b.Property<string>("Kdtarifdetail")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("Kdtarifdetail");

                    b.Property<string>("Kelas")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Kelas");

                    b.Property<DateTime?>("Lastupdate")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("Lastupdate");

                    b.Property<decimal>("OldIdTarifkelas")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdTarifkelas");

                    b.Property<decimal?>("OldRekananId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldRekananId");

                    b.Property<decimal?>("Penyulit")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Penyulit");

                    b.Property<Guid?>("RekananId")
                        .HasColumnType("uuid")
                        .HasColumnName("RekananId");

                    b.Property<decimal?>("SecondTnd")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("SecondTnd");

                    b.Property<DateTime?>("Tglakhir")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("Tglakhir");

                    b.Property<DateTime?>("Tglawal")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("Tglawal");

                    b.HasKey("IdTarifkelas");

                    b.ToTable("M_TarifHarga");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifMatrix", b =>
                {
                    b.Property<Guid>("IdTarifmatrix")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdTarifmatrix");

                    b.Property<Guid>("IdRuang")
                        .HasColumnType("uuid")
                        .HasColumnName("IdRuang");

                    b.Property<Guid>("IdTarifdetail")
                        .HasColumnType("uuid")
                        .HasColumnName("IdTarifdetail");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Kdtarifdetail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Kdtarifdetail");

                    b.Property<string>("Koderuangan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Koderuangan");

                    b.Property<decimal>("OldIdTarifmatrix")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdTarifmatrix");

                    b.HasKey("IdTarifmatrix");

                    b.ToTable("M_TarifMatrix");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifNonMedis", b =>
                {
                    b.Property<decimal>("IdNonMedis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdNonMedis");

                    b.Property<int?>("IdGroupNonMedis")
                        .HasColumnType("integer")
                        .HasColumnName("IdGroupNonMedis");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("KdTarif")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("KdTarif");

                    b.Property<string>("NmTarif")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Nmtarif");

                    b.HasKey("IdNonMedis");

                    b.HasIndex("IdGroupNonMedis");

                    b.HasIndex(new[] { "KdTarif" }, "IX_TmTarifNonMedis_KdTarif")
                        .IsUnique();

                    b.ToTable("M_TarifNonMedis");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifPelayanan", b =>
                {
                    b.Property<int>("IdTariflayan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IdTariflayan");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTariflayan"));

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Kodetariflayan")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("KodeTarifLayan");

                    b.Property<string>("Namatariflayan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NamaTarifLayan");

                    b.HasKey("IdTariflayan");

                    b.HasIndex(new[] { "Kodetariflayan" }, "IX_M_SettingKomputerAntrian_vnmkomp")
                        .IsUnique()
                        .HasDatabaseName("IX_M_SettingKomputerAntrian_vnmkomp1");

                    b.ToTable("M_TarifPelayanan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifRekanan", b =>
                {
                    b.Property<Guid>("IdTarifRekanan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdTarifRekanan");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("KdTarifDetail")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("KdTarifDetail");

                    b.Property<decimal>("OldIdTarifRekanan")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdTarifRekanan");

                    b.Property<decimal>("OldRekananId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldRekananId");

                    b.Property<Guid>("RekananId")
                        .HasColumnType("uuid")
                        .HasColumnName("RekananId");

                    b.HasKey("IdTarifRekanan");

                    b.ToTable("M_TarifRekanan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifRekananSub", b =>
                {
                    b.Property<Guid>("IdTarifrekanansub")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdTarifrekanansub");

                    b.Property<decimal>("OldIdTarifRekananSub")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdTarifRekananSub");

                    b.Property<decimal>("RekananIdHd")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("RekananIdHd");

                    b.Property<decimal>("RekananidDt")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("RekananidDt");

                    b.HasKey("IdTarifrekanansub");

                    b.ToTable("M_TarifRekananSub");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifnonmedisGroup", b =>
                {
                    b.Property<int>("IdGroupNonMedis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IdGroupNonMedis");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdGroupNonMedis"));

                    b.Property<string>("KdAkun")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("Kdakun");

                    b.Property<string>("NmGroupNonMedis")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Nmgroupnonmedis");

                    b.HasKey("IdGroupNonMedis");

                    b.ToTable("M_TarifnonmedisGroup");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifnonmedisHarga", b =>
                {
                    b.Property<int>("IdNonmedishrg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IdNonmedishrg");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdNonmedishrg"));

                    b.Property<decimal?>("DBeapasien")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Beapasien");

                    b.Property<decimal?>("DBearekanan")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Bearekanan");

                    b.Property<decimal?>("DHarga")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Harga");

                    b.Property<decimal>("IdTarifNon")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdTarifNon");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("Kdtarif")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("Kdtarif");

                    b.Property<decimal?>("OldRekananId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldRekananId");

                    b.Property<Guid?>("RekananId")
                        .HasColumnType("uuid")
                        .HasColumnName("RekananId");

                    b.HasKey("IdNonmedishrg");

                    b.HasIndex("IdTarifNon");

                    b.ToTable("M_TarifnonmedisHarga");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifnonmedisMatrix", b =>
                {
                    b.Property<decimal>("IdNonMedisMatrix")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdNonMedisMatrix");

                    b.Property<decimal>("IdNonMedis")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("IdNonMedis");

                    b.Property<string>("KdTarif")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("KdTarif");

                    b.Property<string>("VKoderuangan")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KodeRuangan");

                    b.HasKey("IdNonMedisMatrix");

                    b.HasIndex("IdNonMedis");

                    b.ToTable("M_TarifnonmedisMatrix");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifnonmedisRekanan", b =>
                {
                    b.Property<int>("IdNonMedRek")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IdNonMedRek");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdNonMedRek"));

                    b.Property<Guid>("IdRekanan")
                        .HasColumnType("uuid")
                        .HasColumnName("IdRekanan");

                    b.Property<decimal>("IdTarifNon")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdTarifNon");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAktif");

                    b.Property<string>("KdTarif")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("KdTarif");

                    b.Property<decimal?>("OldIdRekanan")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdRekanan");

                    b.HasKey("IdNonMedRek");

                    b.HasIndex("IdTarifNon");

                    b.ToTable("M_TarifnonmedisRekanan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Tenant", b =>
                {
                    b.Property<Guid>("IdTenant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdTenant");

                    b.Property<string>("Codelogo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CodeLogo");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Email");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Logo");

                    b.Property<decimal>("OldIdTenant")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdTenant");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Phone");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SubscriptionCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("SubscriptionCode");

                    b.Property<string>("TenantAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("TenantAddress");

                    b.Property<string>("TenantCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("TenantCode");

                    b.Property<string>("TenantName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("TenantName");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Website");

                    b.HasKey("IdTenant");

                    b.ToTable("M_Tennant");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Tindakan", b =>
                {
                    b.Property<decimal>("IdTindakan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdTindakan");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_AKTIF");

                    b.Property<string>("Kdtindakan")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("KdTindakan");

                    b.Property<string>("Nmpendek")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NmPendek");

                    b.Property<string>("Nmtindakan")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("NmTindakan");

                    b.HasKey("IdTindakan");

                    b.ToTable("M_Tindakan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_User", b =>
                {
                    b.Property<Guid>("Iduser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("IdUser");

                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("Id");

                    b.Property<decimal>("IdDokter")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("IdDokter");

                    b.Property<decimal?>("IdGroupUser")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdGroupUser");

                    b.Property<string>("IdKaryawan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IdKaryawan");

                    b.Property<decimal>("IdRuang")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdRuang");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAdmin");

                    b.Property<bool?>("IsAktif")
                        .HasColumnType("boolean")
                        .HasColumnName("Isaktif");

                    b.Property<bool?>("IsDokter")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDokter");

                    b.Property<bool?>("IsManager")
                        .HasColumnType("boolean")
                        .HasColumnName("IsManager");

                    b.Property<bool?>("IsMemo")
                        .HasColumnType("boolean")
                        .HasColumnName("IsMemo");

                    b.Property<bool?>("IsMod")
                        .HasColumnType("boolean")
                        .HasColumnName("IsMod");

                    b.Property<bool?>("IsUser")
                        .HasColumnType("boolean")
                        .HasColumnName("IsUser");

                    b.Property<string>("KdDokter")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("KdDokter");

                    b.Property<string>("KodeRuangan")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("KodeRuangan");

                    b.Property<string>("Namalengkap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Namalengkap");

                    b.Property<string>("Nmuser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Nmuser");

                    b.Property<decimal>("OldIduser")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("OldIdUser");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Password");

                    b.Property<decimal?>("Pin")
                        .HasColumnType("numeric(10, 2)")
                        .HasColumnName("PIN");

                    b.Property<bool?>("Transmigrated")
                        .HasColumnType("boolean");

                    b.Property<string>("Ttd")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Ttd");

                    b.HasKey("Iduser");

                    b.HasIndex("IdDokter");

                    b.HasIndex("IdGroupUser");

                    b.HasIndex("IdRuang");

                    b.ToTable("M_User");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_UserGroup", b =>
                {
                    b.Property<decimal>("IdGroupUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("IdGroupUser");

                    b.Property<string>("NmgroupUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NmGroupUser");

                    b.HasKey("IdGroupUser");

                    b.ToTable("M_UserGroup");
                });

            modelBuilder.Entity("M_Kamarinap", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_Hargakamar", "KelasNavigation")
                        .WithMany("M_Kamarinaps")
                        .HasForeignKey("IdHargakamar")
                        .HasConstraintName("FK_M_KAMARINAP_M_HARGAKAMAR");

                    b.HasOne("WincareMigrations.NewModels.M_Map", "IdMap")
                        .WithMany("M_Kamarinaps")
                        .HasForeignKey("IdMapid")
                        .HasConstraintName("FK_M_KAMARINAP_M_MAP");

                    b.Navigation("IdMap");

                    b.Navigation("KelasNavigation");
                });

            modelBuilder.Entity("M_KamarinapHarga", b =>
                {
                    b.HasOne("M_Kamarinap", "KdtmptidurNavigation")
                        .WithMany("M_KamarInapHargas")
                        .HasForeignKey("IdKamarinap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_M_KAMARINAP_HARGA_M_KAMARINAP");

                    b.Navigation("KdtmptidurNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Asal", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_AsalGroup", "IdAsalgroupNavigation")
                        .WithMany("MAsals")
                        .HasForeignKey("IdAsalGroup")
                        .HasConstraintName("FK_M_ASAL_M_ASAL_GROUP");

                    b.Navigation("IdAsalgroupNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Barang", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_Farmakoterapi", "IdFarmakoterapiNavigation")
                        .WithMany("MBarangs")
                        .HasForeignKey("IdFarmakoterapi")
                        .HasConstraintName("FK_M_BARANG_M_FARMAKOTERAPI");

                    b.HasOne("WincareMigrations.NewModels.M_FarmakoterapiSub", "IdSubfarmakoterapiNavigation")
                        .WithMany("MBarangs")
                        .HasForeignKey("IdSubfarmakoterapi")
                        .HasConstraintName("FK_M_BARANG_M_FARMAKOTERAPI_SUB");

                    b.HasOne("WincareMigrations.NewModels.M_KelompokBarang", "Kelompok")
                        .WithMany("MBarangs")
                        .HasForeignKey("KelompokId")
                        .HasConstraintName("FK_M_BARANG_M_KELOMPOKBARANG2");

                    b.Navigation("IdFarmakoterapiNavigation");

                    b.Navigation("IdSubfarmakoterapiNavigation");

                    b.Navigation("Kelompok");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Coa", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_CoaSubklasifikasi", "IdSubklasifikasiNavigation")
                        .WithMany("M_Coas")
                        .HasForeignKey("IdSubklasifikasi")
                        .HasConstraintName("FK_M_COA_M_COA_SUBKLASIFIKASI");

                    b.Navigation("IdSubklasifikasiNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_CoaKlasifikasi", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_CoaGolongan", "IdGolonganNavigation")
                        .WithMany("M_CoaKlasifikasis")
                        .HasForeignKey("IdGolongan")
                        .HasConstraintName("FK_M_COA_KLASIFIKASI_M_COA_GOLONGAN");

                    b.Navigation("IdGolonganNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_CoaSubklasifikasi", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_CoaKlasifikasi", "IdKlasifikasiNavigation")
                        .WithMany("M_CoaSubklasifikasis")
                        .HasForeignKey("IdKlasifikasi")
                        .HasConstraintName("FK_M_COA_SUBKLASIFIKASI_M_COA_KLASIFIKASI");

                    b.Navigation("IdKlasifikasiNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Dokter", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_Coa", "KdAkunNavigation")
                        .WithMany("M_Dokters")
                        .HasForeignKey("IdCoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_M_DOKTER_M_COA");

                    b.Navigation("KdAkunNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_FarmakoterapiSub", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_Farmakoterapi", "IdFarmakoterapiNavigation")
                        .WithMany("M_FarmakoterapiSubs")
                        .HasForeignKey("IdFarmakoterapi")
                        .HasConstraintName("FK_M_FARMAKOTERAPI_SUB_M_FARMAKOTERAPI");

                    b.Navigation("IdFarmakoterapiNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_HargaBarang", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_Barang", "Barang")
                        .WithMany("M_Hargabarangs")
                        .HasForeignKey("BarangId")
                        .HasConstraintName("FK_M_HARGABARANG_M_BARANG");

                    b.HasOne("WincareMigrations.NewModels.M_Supplier", "Supplier")
                        .WithMany("M_Hargabarangs")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_M_HARGABARANG_M_SUPPLIER");

                    b.Navigation("Barang");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Hargarekanan", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_Barang", "Barang")
                        .WithMany("M_Hargarekanans")
                        .HasForeignKey("BarangId")
                        .HasConstraintName("FK_M_HARGAREKANAN_M_BARANG");

                    b.HasOne("WincareMigrations.NewModels.M_Rekanan", "Rekanan")
                        .WithMany("M_Hargarekanans")
                        .HasForeignKey("RekananId")
                        .HasConstraintName("FK_M_HARGAREKANAN_M_REKANAN");

                    b.Navigation("Barang");

                    b.Navigation("Rekanan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Jadwaldokter", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_Dokter", "KdDokterNavigation")
                        .WithMany("M_JadwalDokters")
                        .HasForeignKey("IdDokter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_M_JADWALDOKTER_M_DOKTER_(kddokter)");

                    b.HasOne("WincareMigrations.NewModels.M_Ruang", "KoderuanganNavigation")
                        .WithMany("M_Jadwaldokters")
                        .HasForeignKey("IdRuangan")
                        .HasConstraintName("FK_M_JADWALDOKTER_M_RUANG_(kdruangan)");

                    b.Navigation("KdDokterNavigation");

                    b.Navigation("KoderuanganNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Laboratorium", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_LaboratoriumGroup", "IdGroupNavigation")
                        .WithMany("M_Laboratoria")
                        .HasForeignKey("IdGroup")
                        .HasConstraintName("FK_M_LABORATORIUM_M_LABORATORIUM_GROUP");

                    b.Navigation("IdGroupNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_LaboratoriumHarga", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_Hargakamar", "KelasNavigation")
                        .WithMany("M_LaboratoriumHargas")
                        .HasForeignKey("IdHargakamar")
                        .HasConstraintName("FK_M_LABORATORIUM_HARGA_M_HARGAKAMAR");

                    b.HasOne("WincareMigrations.NewModels.M_Laboratorium", "KdPemeriksaanlabNavigation")
                        .WithMany("M_LaboratoriumHargas")
                        .HasForeignKey("IdPemeriksaanLab")
                        .HasConstraintName("FK_M_LABORATORIUM_HARGA_M_LABORATORIUM");

                    b.HasOne("WincareMigrations.NewModels.M_Rekanan", "Rekanan")
                        .WithMany("M_LaboratoriumHargas")
                        .HasForeignKey("RekananId")
                        .IsRequired()
                        .HasConstraintName("FK_M_LABORATORIUM_HARGA_M_REKANAN");

                    b.Navigation("KdPemeriksaanlabNavigation");

                    b.Navigation("KelasNavigation");

                    b.Navigation("Rekanan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_LaboratoriumRekanan", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_Laboratorium", "KdpemeriksaanlabNavigation")
                        .WithMany("M_LaboratoriumRekanans")
                        .HasForeignKey("IdPemeriksaanLab")
                        .HasConstraintName("FK_M_LABORATORIUM_REKANAN_M_LABORATORIUM");

                    b.HasOne("WincareMigrations.NewModels.M_Rekanan", "Rekanan")
                        .WithMany("M_LaboratoriumRekanans")
                        .HasForeignKey("RekananId")
                        .IsRequired()
                        .HasConstraintName("FK_M_LABORATORIUM_REKANAN_M_REKANAN");

                    b.Navigation("KdpemeriksaanlabNavigation");

                    b.Navigation("Rekanan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Map", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_Ruang", "KoderuanganNavigation")
                        .WithMany("M_Maps")
                        .HasForeignKey("IdRuang")
                        .IsRequired()
                        .HasConstraintName("FK_M_MAP_M_RUANG");

                    b.Navigation("KoderuanganNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_ModuleDetail", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_Module", "IdModuleNavigation")
                        .WithMany("M_ModuleDetails")
                        .HasForeignKey("IdModule")
                        .HasConstraintName("FK_M_MODULE_DETAIL_M_MODULE");

                    b.Navigation("IdModuleNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Morfologi", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_Diagnosa", "KdDiagnosaNavigation")
                        .WithMany("M_Morfologis")
                        .HasForeignKey("IdDiagnosa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_M_MORFOLOGI_M_DIAGNOSA");

                    b.Navigation("KdDiagnosaNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Pasien", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_Rekanan", "Rekanan")
                        .WithMany("M_Pasiens")
                        .HasForeignKey("RekananId")
                        .HasConstraintName("FK_M_PASIEN_M_REKANAN_(rekananid)");

                    b.Navigation("Rekanan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_PemeriksaanPenunjangDetail", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_PemeriksaanPenunjang", "IdMasterPemeriksaanPenunjangNavigation")
                        .WithMany("M_PemeriksaanPenunjangDetails")
                        .HasForeignKey("IdMasterPemeriksaanPenunjang")
                        .HasConstraintName("FK_M_PEMERIKSAANPENUNJANGDETAIL_M_PEMERIKSAANPENUNJANG");

                    b.Navigation("IdMasterPemeriksaanPenunjangNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Radiologi", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_RadiologiGroup", "IdGroupNavigation")
                        .WithMany("M_Radiologis")
                        .HasForeignKey("IdGroup")
                        .HasConstraintName("FK_M_RADIOLOGI_M_RADIOLOGI_GROUP");

                    b.Navigation("IdGroupNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_RadiologiHarga", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_Hargakamar", "KelasNavigation")
                        .WithMany("M_RadiologiHargas")
                        .HasForeignKey("IdHargakamar")
                        .HasConstraintName("FK_M_RADIOLOGI_HARGA_M_HARGAKAMAR");

                    b.HasOne("WincareMigrations.NewModels.M_Radiologi", "KdpemeriksaanRadNavigation")
                        .WithMany("M_RadiologiHargas")
                        .HasForeignKey("IdPemeriksaanRad")
                        .IsRequired()
                        .HasConstraintName("FK_M_RADIOLOGI_HARGA_M_RADIOLOGI");

                    b.HasOne("WincareMigrations.NewModels.M_Rekanan", "Rekanan")
                        .WithMany("M_RadiologiHargas")
                        .HasForeignKey("Rekananid")
                        .IsRequired()
                        .HasConstraintName("FK_M_RADIOLOGI_HARGA_M_REKANAN");

                    b.Navigation("KdpemeriksaanRadNavigation");

                    b.Navigation("KelasNavigation");

                    b.Navigation("Rekanan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_RadiologiRekanan", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_Radiologi", "KdpemeriksaanRadNavigation")
                        .WithMany("M_RadiologiRekanans")
                        .HasForeignKey("IdPemeriksaanRad")
                        .IsRequired()
                        .HasConstraintName("FK_M_RADIOLOGI_REKANAN_M_RADIOLOGI");

                    b.HasOne("WincareMigrations.NewModels.M_Rekanan", "Rekanan")
                        .WithMany("M_RadiologiRekanans")
                        .HasForeignKey("RekananId")
                        .IsRequired()
                        .HasConstraintName("FK_M_RADIOLOGI_REKANAN_M_REKANAN");

                    b.Navigation("KdpemeriksaanRadNavigation");

                    b.Navigation("Rekanan");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Ruang", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_Gudang", "KodeinventoryNavigation")
                        .WithMany("M_RuangVKodeinventoryNavigations")
                        .HasForeignKey("KodeInventoryGudangObat")
                        .HasConstraintName("FK_M_RUANG_M_GUDANG_(kdinventory)");

                    b.HasOne("WincareMigrations.NewModels.M_Gudang", "KodeRequestobatNavigation")
                        .WithMany("M_RuangKodeRequestobatNavigations")
                        .HasForeignKey("KodeRequestGudangObat")
                        .HasConstraintName("FK_M_RUANG_M_GUDANG2_(requestobat)");

                    b.Navigation("KodeRequestobatNavigation");

                    b.Navigation("KodeinventoryNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Standartfield", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_StandartfieldGroup", "IdFieldgroupNavigation")
                        .WithMany("M_Standartfields")
                        .HasForeignKey("IdFieldgroup")
                        .HasConstraintName("FK_M_STANDARTFIELD_M_STANDARTFIELD_GROUP");

                    b.Navigation("IdFieldgroupNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifDetail", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_TarifGroup", "IdGrouptarifNavigation")
                        .WithMany("M_Tarifdetails")
                        .HasForeignKey("IdGroupTarif")
                        .HasConstraintName("FK_M_TARIFDETAIL_M_TARIF_GROUP");

                    b.HasOne("WincareMigrations.NewModels.M_TarifPelayanan", "VKodetariflayanNavigation")
                        .WithMany("M_Tarifdetails")
                        .HasForeignKey("Kodetariflayan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_M_TARIFDETAIL_M_TARIF_PELAYANAN");

                    b.Navigation("IdGrouptarifNavigation");

                    b.Navigation("VKodetariflayanNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifNonMedis", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_TarifnonmedisGroup", "IdGroupnonmedisNavigation")
                        .WithMany("M_Tarifnonmedis")
                        .HasForeignKey("IdGroupNonMedis");

                    b.Navigation("IdGroupnonmedisNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifnonmedisHarga", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_TarifNonMedis", "KdtarifNavigation")
                        .WithMany("M_TarifnonmedisHargas")
                        .HasForeignKey("IdTarifNon")
                        .IsRequired()
                        .HasConstraintName("FK_M_TARIFNONMEDIS_HARGA_M_TARIFNONMEDIS");

                    b.Navigation("KdtarifNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifnonmedisMatrix", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_TarifNonMedis", "KdtarifNavigation")
                        .WithMany("M_TarifnonmedisMatrices")
                        .HasForeignKey("IdNonMedis")
                        .IsRequired()
                        .HasConstraintName("FK_M_TARIFNONMEDIS_MATRIX_M_TARIFNONMEDIS");

                    b.Navigation("KdtarifNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifnonmedisRekanan", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_TarifNonMedis", "KdtarifNavigation")
                        .WithMany("M_TarifnonmedisRekanans")
                        .HasForeignKey("IdTarifNon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_M_TARIFNONMEDIS_REKANAN_M_TARIFNONMEDIS");

                    b.Navigation("KdtarifNavigation");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_User", b =>
                {
                    b.HasOne("WincareMigrations.NewModels.M_Dokter", "KdDokterNavigation")
                        .WithMany("M_Users")
                        .HasForeignKey("IdDokter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_M_USER_M_DOKTER");

                    b.HasOne("WincareMigrations.NewModels.M_UserGroup", "IdGroupuserNavigation")
                        .WithMany("M_Users")
                        .HasForeignKey("IdGroupUser")
                        .HasConstraintName("FK_M_USER_M_USER_GROUP");

                    b.HasOne("WincareMigrations.NewModels.M_Ruang", "KoderuanganNavigation")
                        .WithMany("M_Users")
                        .HasForeignKey("IdRuang")
                        .IsRequired()
                        .HasConstraintName("FK_M_USER_M_RUANG");

                    b.Navigation("IdGroupuserNavigation");

                    b.Navigation("KdDokterNavigation");

                    b.Navigation("KoderuanganNavigation");
                });

            modelBuilder.Entity("M_Kamarinap", b =>
                {
                    b.Navigation("M_KamarInapHargas");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_AsalGroup", b =>
                {
                    b.Navigation("MAsals");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Barang", b =>
                {
                    b.Navigation("M_Hargabarangs");

                    b.Navigation("M_Hargarekanans");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Coa", b =>
                {
                    b.Navigation("M_Dokters");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_CoaGolongan", b =>
                {
                    b.Navigation("M_CoaKlasifikasis");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_CoaKlasifikasi", b =>
                {
                    b.Navigation("M_CoaSubklasifikasis");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_CoaSubklasifikasi", b =>
                {
                    b.Navigation("M_Coas");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Diagnosa", b =>
                {
                    b.Navigation("M_Morfologis");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Dokter", b =>
                {
                    b.Navigation("M_JadwalDokters");

                    b.Navigation("M_Users");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Farmakoterapi", b =>
                {
                    b.Navigation("MBarangs");

                    b.Navigation("M_FarmakoterapiSubs");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_FarmakoterapiSub", b =>
                {
                    b.Navigation("MBarangs");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Gudang", b =>
                {
                    b.Navigation("M_RuangKodeRequestobatNavigations");

                    b.Navigation("M_RuangVKodeinventoryNavigations");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Hargakamar", b =>
                {
                    b.Navigation("M_Kamarinaps");

                    b.Navigation("M_LaboratoriumHargas");

                    b.Navigation("M_RadiologiHargas");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_KelompokBarang", b =>
                {
                    b.Navigation("MBarangs");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Laboratorium", b =>
                {
                    b.Navigation("M_LaboratoriumHargas");

                    b.Navigation("M_LaboratoriumRekanans");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_LaboratoriumGroup", b =>
                {
                    b.Navigation("M_Laboratoria");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Map", b =>
                {
                    b.Navigation("M_Kamarinaps");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Module", b =>
                {
                    b.Navigation("M_ModuleDetails");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_PemeriksaanPenunjang", b =>
                {
                    b.Navigation("M_PemeriksaanPenunjangDetails");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Radiologi", b =>
                {
                    b.Navigation("M_RadiologiHargas");

                    b.Navigation("M_RadiologiRekanans");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_RadiologiGroup", b =>
                {
                    b.Navigation("M_Radiologis");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Rekanan", b =>
                {
                    b.Navigation("M_Hargarekanans");

                    b.Navigation("M_LaboratoriumHargas");

                    b.Navigation("M_LaboratoriumRekanans");

                    b.Navigation("M_Pasiens");

                    b.Navigation("M_RadiologiHargas");

                    b.Navigation("M_RadiologiRekanans");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Ruang", b =>
                {
                    b.Navigation("M_Jadwaldokters");

                    b.Navigation("M_Maps");

                    b.Navigation("M_Users");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_StandartfieldGroup", b =>
                {
                    b.Navigation("M_Standartfields");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_Supplier", b =>
                {
                    b.Navigation("M_Hargabarangs");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifGroup", b =>
                {
                    b.Navigation("M_Tarifdetails");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifNonMedis", b =>
                {
                    b.Navigation("M_TarifnonmedisHargas");

                    b.Navigation("M_TarifnonmedisMatrices");

                    b.Navigation("M_TarifnonmedisRekanans");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifPelayanan", b =>
                {
                    b.Navigation("M_Tarifdetails");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_TarifnonmedisGroup", b =>
                {
                    b.Navigation("M_Tarifnonmedis");
                });

            modelBuilder.Entity("WincareMigrations.NewModels.M_UserGroup", b =>
                {
                    b.Navigation("M_Users");
                });
#pragma warning restore 612, 618
        }
    }
}
