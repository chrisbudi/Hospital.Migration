// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Wincare.Pendaftaran.Migration.Models;

public partial class WinCare2Context : DbContext
{
    public WinCare2Context(DbContextOptions<WinCare2Context> options)
        : base(options)
    {
    }

    public virtual DbSet<TmDokter> TmDokters { get; set; }

    public virtual DbSet<TmDokterNote> TmDokterNotes { get; set; }

    public virtual DbSet<TmGudang> TmGudangs { get; set; }

    public virtual DbSet<TmJadwaldokter> TmJadwaldokters { get; set; }

    public virtual DbSet<TmKamarinap> TmKamarinaps { get; set; }

    public virtual DbSet<TmKodepo> TmKodepos { get; set; }

    public virtual DbSet<TmPasien> TmPasiens { get; set; }

    public virtual DbSet<TmRekanan> TmRekanans { get; set; }

    public virtual DbSet<TmRuang> TmRuangs { get; set; }

    public virtual DbSet<TmSettingAdm> TmSettingAdms { get; set; }

    public virtual DbSet<TmSettingDaftar> TmSettingDaftars { get; set; }

    public virtual DbSet<TmTarifGroup> TmTarifGroups { get; set; }

    public virtual DbSet<TmTarifHarga> TmTarifHargas { get; set; }

    public virtual DbSet<TmTarifMatrix> TmTarifMatrices { get; set; }

    public virtual DbSet<TmTarifRekanan> TmTarifRekanans { get; set; }

    public virtual DbSet<TmTarifRekananSub> TmTarifRekananSubs { get; set; }

    public virtual DbSet<TmTarifdetail> TmTarifdetails { get; set; }

    public virtual DbSet<TmhKamar> TmhKamars { get; set; }

    public virtual DbSet<TmhPengunjung> TmhPengunjungs { get; set; }

    public virtual DbSet<TrHasillab> TrHasillabs { get; set; }

    public virtual DbSet<TrHasilrad> TrHasilrads { get; set; }

    public virtual DbSet<TrItemnonmedi> TrItemnonmedis { get; set; }

    public virtual DbSet<TrItemobatlangsung> TrItemobatlangsungs { get; set; }

    public virtual DbSet<TrItempaket> TrItempakets { get; set; }

    public virtual DbSet<TtAcountpasien> TtAcountpasiens { get; set; }

    public virtual DbSet<TtBetinap> TtBetinaps { get; set; }

    public virtual DbSet<TtBlacklist> TtBlacklists { get; set; }

    public virtual DbSet<TtDeposit> TtDeposits { get; set; }

    public virtual DbSet<TtKuitansi> TtKuitansis { get; set; }

    public virtual DbSet<TtKuitansialke> TtKuitansialkes { get; set; }

    public virtual DbSet<TtKuitansiresep> TtKuitansireseps { get; set; }

    public virtual DbSet<TtKunjungan> TtKunjungans { get; set; }

    public virtual DbSet<TtLiburdokter> TtLiburdokters { get; set; }

    public virtual DbSet<TtNotedokter> TtNotedokters { get; set; }

    public virtual DbSet<TtObatalke> TtObatalkes { get; set; }

    public virtual DbSet<TtObatlangsung> TtObatlangsungs { get; set; }

    public virtual DbSet<TtPaidout> TtPaidouts { get; set; }

    public virtual DbSet<TtPaket> TtPakets { get; set; }

    public virtual DbSet<TtPaketPbAppDetail> TtPaketPbAppDetails { get; set; }

    public virtual DbSet<TtPasienRencanaRad> TtPasienRencanaRads { get; set; }

    public virtual DbSet<TtPasieninap> TtPasieninaps { get; set; }

    public virtual DbSet<TtPasienlab> TtPasienlabs { get; set; }

    public virtual DbSet<TtPasienpenunjang> TtPasienpenunjangs { get; set; }

    public virtual DbSet<TtPasienrad> TtPasienrads { get; set; }

    public virtual DbSet<TtPasienugd> TtPasienugds { get; set; }

    public virtual DbSet<TtPembayaran> TtPembayarans { get; set; }

    public virtual DbSet<TtPembayaranDetail> TtPembayaranDetails { get; set; }

    public virtual DbSet<TtPembayaranLock> TtPembayaranLocks { get; set; }

    public virtual DbSet<TtPemeriksaanradiologi> TtPemeriksaanradiologis { get; set; }

    public virtual DbSet<TtPenjadwalan> TtPenjadwalans { get; set; }

    public virtual DbSet<TtPlafonbpj> TtPlafonbpjs { get; set; }

    public virtual DbSet<TtPlafonbpjsHistory> TtPlafonbpjsHistories { get; set; }

    public virtual DbSet<TtResep> TtReseps { get; set; }

    public virtual DbSet<TtRetur> TtReturs { get; set; }

    public virtual DbSet<TtReturalke> TtReturalkes { get; set; }

    public virtual DbSet<TtRubahrekanan> TtRubahrekanans { get; set; }

    public virtual DbSet<TtTindakan> TtTindakans { get; set; }

    public virtual DbSet<TtTindakanDetail> TtTindakanDetails { get; set; }

    public virtual DbSet<TtTransaksi> TtTransaksis { get; set; }

    public virtual DbSet<TtTransaksinonmedi> TtTransaksinonmedis { get; set; }

    public virtual DbSet<TthDeposit> TthDeposits { get; set; }

    public virtual DbSet<TthKunjungan> TthKunjungans { get; set; }

    public virtual DbSet<TthPengunjunginap> TthPengunjunginaps { get; set; }

    public virtual DbSet<TthRubahrekananHotel> TthRubahrekananHotels { get; set; }

    public virtual DbSet<TthTransaksi> TthTransaksis { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<TmDokter>(entity =>
        {
            entity.HasKey(e => e.VKddokter);

            entity.ToTable("TM_DOKTER", tb =>
                {
                    tb.HasTrigger("INSERT_TM_ASAL");
                    tb.HasTrigger("UPDATE_TM_ASAL");
                });

            entity.HasIndex(e => e.VKddokter, "IX_TM_DOKTER");

            entity.HasIndex(e => e.VNmdokter, "IX_TM_DOKTER_1");

            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.CAktif).HasColumnName("C_AKTIF");
            entity.Property(e => e.IdDokter)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_DOKTER");
            entity.Property(e => e.ImFotodokter)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("IM_FOTODOKTER");
            entity.Property(e => e.IsTtd)
                .HasColumnType("text")
                .HasColumnName("IS_TTD");
            entity.Property(e => e.Pin)
                .HasColumnType("numeric(18, 2)")
                .HasColumnName("PIN");
            entity.Property(e => e.VAlamatdokter)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_ALAMATDOKTER");
            entity.Property(e => e.VAlamatpraktek)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_ALAMATPRAKTEK");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKdakun)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDAKUN");
            entity.Property(e => e.VKodetarif)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("V_KODETARIF");
            entity.Property(e => e.VNmdokter)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMDOKTER");
            entity.Property(e => e.VNosip)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NOSIP");
            entity.Property(e => e.VSpesialisasidokter)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("V_SPESIALISASIDOKTER");
            entity.Property(e => e.VTelpdokter)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TELPDOKTER");
            entity.Property(e => e.VTelppraktek)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TELPPRAKTEK");
        });

        modelBuilder.Entity<TmDokterNote>(entity =>
        {
            entity.HasKey(e => e.IdDokter);

            entity.ToTable("TM_DOKTER_NOTE");

            entity.Property(e => e.IdDokter)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_DOKTER");
            entity.Property(e => e.Keterangan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("KETERANGAN");
            entity.Property(e => e.TglInput)
                .HasColumnType("datetime")
                .HasColumnName("TGL_INPUT");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKddokter)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
        });

        modelBuilder.Entity<TmGudang>(entity =>
        {
            entity.HasKey(e => e.VKodeinventory);

            entity.ToTable("TM_GUDANG");

            entity.HasIndex(e => e.IsRequest, "IX_TM_GUDANG_ISREQUEST");

            entity.HasIndex(e => e.IsAktif, "IX_TM_GUDANG_IS_AKTIF");

            entity.HasIndex(e => e.VKodeinventory, "IX_TM_GUDANG_KDINV");

            entity.HasIndex(e => e.IsListropp, "IX_TM_GUDANG_LISROP");

            entity.HasIndex(e => e.VNamagudangobat, "IX_TM_GUDANG_NAMAGUDANG");

            entity.Property(e => e.VKodeinventory)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODEINVENTORY");
            entity.Property(e => e.IdGudangobat)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GUDANGOBAT");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.IsListropp).HasColumnName("IS_LISTROPP");
            entity.Property(e => e.IsPaketbhp).HasColumnName("IS_PAKETBHP");
            entity.Property(e => e.IsRequest).HasColumnName("IS_REQUEST");
            entity.Property(e => e.IsReturbhp).HasColumnName("IS_RETURBHP");
            entity.Property(e => e.IsTipebarang)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("IS_TIPEBARANG");
            entity.Property(e => e.VNamagudangobat)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NAMAGUDANGOBAT");
        });

        modelBuilder.Entity<TmJadwaldokter>(entity =>
        {
            entity.HasKey(e => e.IdJadwal).HasName("PK_TR_JADWALDOKTER");

            entity.ToTable("TM_JADWALDOKTER");

            entity.HasIndex(e => e.IdJadwal, "IX_TM_JADWALDOKTER");

            entity.HasIndex(e => e.VKddokter, "IX_TM_JADWALDOKTER_1");

            entity.HasIndex(e => e.VKoderuangan, "IX_TM_JADWALDOKTER_2");

            entity.HasIndex(e => e.VNamaklinik, "IX_TM_JADWALDOKTER_3");

            entity.HasIndex(e => e.VHari, "IX_TM_JADWALDOKTER_4");

            entity.HasIndex(e => e.VJamstart, "IX_TM_JADWALDOKTER_5");

            entity.HasIndex(e => e.VJamfinish, "IX_TM_JADWALDOKTER_6");

            entity.HasIndex(e => e.IsAktif, "IX_TM_JADWALDOKTER_7");

            entity.Property(e => e.IdJadwal)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_JADWAL");
            entity.Property(e => e.IServistime).HasColumnName("I_SERVISTIME");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VHari)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("V_HARI");
            entity.Property(e => e.VJamfinish)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_JAMFINISH");
            entity.Property(e => e.VJamstart)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_JAMSTART");
            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.VKoderuangan)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VNamaklinik)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NAMAKLINIK");

            entity.HasOne(d => d.VKddokterNavigation).WithMany(p => p.TmJadwaldokters)
                .HasForeignKey(d => d.VKddokter)
                .HasConstraintName("FK_TM_JADWALDOKTER_TM_DOKTER_(kddokter)");

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TmJadwaldokters)
                .HasForeignKey(d => d.VKoderuangan)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_JADWALDOKTER_TM_RUANG_(kdruangan)");
        });

        modelBuilder.Entity<TmKamarinap>(entity =>
        {
            entity.HasKey(e => e.VKdtmptidur);

            entity.ToTable("TM_KAMARINAP");

            entity.HasIndex(e => e.VKdtmptidur, "IX_TM_KAMARINAP_v_kdtmptidur");

            entity.HasIndex(e => e.VLantai, "IX_TM_KAMARINAP_v_lantai");

            entity.Property(e => e.VKdtmptidur)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDTMPTIDUR");
            entity.Property(e => e.CIsi)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_ISI");
            entity.Property(e => e.IX).HasColumnName("I_X");
            entity.Property(e => e.IY).HasColumnName("I_Y");
            entity.Property(e => e.IdKamarinap)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_KAMARINAP");
            entity.Property(e => e.IdMapid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_MAPID");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VKelas)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("V_KELAS");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VKodetarif)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODETARIF");
            entity.Property(e => e.VLantai)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_LANTAI");
            entity.Property(e => e.VNokamar)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_NOKAMAR");
        });

        modelBuilder.Entity<TmKodepo>(entity =>
        {
            entity.HasKey(e => e.IdKodepos).HasName("PK_TM_KODEPOS_1");

            entity.ToTable("TM_KODEPOS");

            entity.Property(e => e.IdKodepos)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_KODEPOS");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VKabupaten)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KABUPATEN");
            entity.Property(e => e.VKdkodepos)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KDKODEPOS");
            entity.Property(e => e.VKecamatan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KECAMATAN");
            entity.Property(e => e.VKelurahan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KELURAHAN");
            entity.Property(e => e.VProvinsi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_PROVINSI");
        });

        modelBuilder.Entity<TmPasien>(entity =>
        {
            entity.HasKey(e => e.IdPasien);

            entity.ToTable("TM_PASIEN");

            entity.HasIndex(e => e.VAgamapasien, "IX_TM_PASIEN_agama");

            entity.HasIndex(e => e.VAlamatpasien, "IX_TM_PASIEN_alamat");

            entity.HasIndex(e => e.IsBlacklist, "IX_TM_PASIEN_blacklist");

            entity.HasIndex(e => e.VHppasien, "IX_TM_PASIEN_hp");

            entity.HasIndex(e => e.IdPasien, "IX_TM_PASIEN_idpasien");

            entity.HasIndex(e => e.IsAktif, "IX_TM_PASIEN_isaktif");

            entity.HasIndex(e => e.CKelaminpasien, "IX_TM_PASIEN_kelamin");

            entity.HasIndex(e => e.VKotapasien, "IX_TM_PASIEN_kota");

            entity.HasIndex(e => e.VNamapasien, "IX_TM_PASIEN_namapasien");

            entity.HasIndex(e => e.VNoktpsimpasien, "IX_TM_PASIEN_noktp");

            entity.HasIndex(e => e.VNopenjamin, "IX_TM_PASIEN_nopenjamin");

            entity.HasIndex(e => e.VPekerjaanpasien, "IX_TM_PASIEN_pekerjaan");

            entity.HasIndex(e => e.VStatuskwnpasien, "IX_TM_PASIEN_statuskawin");

            entity.HasIndex(e => e.VTelppasien, "IX_TM_PASIEN_telp");

            entity.HasIndex(e => e.VTmptlahirpasien, "IX_TM_PASIEN_tempatlahir");

            entity.HasIndex(e => e.DTgllahirpasien, "IX_TM_PASIEN_tgllahir");

            entity.HasIndex(e => e.IdNumpasien, "idnumpasien");

            entity.Property(e => e.IdPasien)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("ID_PASIEN");
            entity.Property(e => e.CGoldarah)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("C_GOLDARAH");
            entity.Property(e => e.CIscetakkartu)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_ISCETAKKARTU");
            entity.Property(e => e.CKelaminpasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("C_KELAMINPASIEN");
            entity.Property(e => e.DTgldaftar)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLDAFTAR");
            entity.Property(e => e.DTgllahirpasien)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLLAHIRPASIEN");
            entity.Property(e => e.IdNumpasien)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUMPASIEN");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.IsBlacklist).HasColumnName("IS_BLACKLIST");
            entity.Property(e => e.IsKunjungan).HasColumnName("IS_KUNJUNGAN");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VAgamapasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_AGAMAPASIEN");
            entity.Property(e => e.VAlamatpasien)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_ALAMATPASIEN");
            entity.Property(e => e.VAlamatpekerjaan)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_ALAMATPEKERJAAN");
            entity.Property(e => e.VAlamatpenanggung)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_ALAMATPENANGGUNG");
            entity.Property(e => e.VAlergipasien)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_ALERGIPASIEN");
            entity.Property(e => e.VAyahpasien)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_AYAHPASIEN");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VCatkhuspasien)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_CATKHUSPASIEN");
            entity.Property(e => e.VHppasien)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("V_HPPASIEN");
            entity.Property(e => e.VIbupasien)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_IBUPASIEN");
            entity.Property(e => e.VJenisidentitas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_JENISIDENTITAS");
            entity.Property(e => e.VJenispasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_JENISPASIEN");
            entity.Property(e => e.VKodepos)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODEPOS");
            entity.Property(e => e.VKotapasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KOTAPASIEN");
            entity.Property(e => e.VNamakelpasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NAMAKELPASIEN");
            entity.Property(e => e.VNamapasien)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NAMAPASIEN");
            entity.Property(e => e.VNamapenanggung)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NAMAPENANGGUNG");
            entity.Property(e => e.VNoktpsimpasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NOKTPSIMPASIEN");
            entity.Property(e => e.VNopenjamin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NOPENJAMIN");
            entity.Property(e => e.VPasanganpasien)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_PASANGANPASIEN");
            entity.Property(e => e.VPekerjaanpasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_PEKERJAANPASIEN");
            entity.Property(e => e.VPendidikanpasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_PENDIDIKANPASIEN");
            entity.Property(e => e.VPerusahaan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_PERUSAHAAN");
            entity.Property(e => e.VPetugas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_PETUGAS");
            entity.Property(e => e.VProvinsi)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_PROVINSI");
            entity.Property(e => e.VRhesus)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_RHESUS");
            entity.Property(e => e.VStatuskwnpasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_STATUSKWNPASIEN");
            entity.Property(e => e.VSuku)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_SUKU");
            entity.Property(e => e.VTelppasien)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TELPPASIEN");
            entity.Property(e => e.VTelppekerjaan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TELPPEKERJAAN");
            entity.Property(e => e.VTelppenanggung)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TELPPENANGGUNG");
            entity.Property(e => e.VTmptlahirpasien)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_TMPTLAHIRPASIEN");
            entity.Property(e => e.VWarganegara)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_WARGANEGARA");

            entity.HasOne(d => d.Rekanan).WithMany(p => p.TmPasiens)
                .HasForeignKey(d => d.Rekananid)
                .HasConstraintName("FK_TM_PASIEN_TM_REKANAN_(rekananid)");
        });

        modelBuilder.Entity<TmRekanan>(entity =>
        {
            entity.HasKey(e => e.Rekananid);

            entity.ToTable("TM_REKANAN");

            entity.HasIndex(e => e.IdNumrekanan, "IX_TM_REKANAN");

            entity.HasIndex(e => e.Rekananid, "IX_TM_REKANAN_1");

            entity.HasIndex(e => e.VNmrekanan, "IX_TM_REKANAN_2");

            entity.HasIndex(e => e.IsAktif, "IX_TM_REKANAN_3");

            entity.HasIndex(e => e.VAlias, "IX_TM_REKANAN_4");

            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.IdNumrekanan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUMREKANAN");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.IsCob)
                .HasDefaultValue(false)
                .HasColumnName("IS_COB");
            entity.Property(e => e.IsPaketbhp).HasColumnName("IS_PAKETBHP");
            entity.Property(e => e.IsTarif).HasColumnName("IS_TARIF");
            entity.Property(e => e.IsTarifnonmed).HasColumnName("IS_TARIFNONMED");
            entity.Property(e => e.VAlamat)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_ALAMAT");
            entity.Property(e => e.VAlias)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_ALIAS");
            entity.Property(e => e.VKdakun)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDAKUN");
            entity.Property(e => e.VKota)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KOTA");
            entity.Property(e => e.VNmrekanan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMREKANAN");
            entity.Property(e => e.VTelp)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TELP");
        });

        modelBuilder.Entity<TmRuang>(entity =>
        {
            entity.HasKey(e => e.VKoderuangan);

            entity.ToTable("TM_RUANG");

            entity.HasIndex(e => e.VKoderuangan, "IX_TM_RUANG");

            entity.HasIndex(e => e.Nama, "IX_TM_RUANG_1");

            entity.HasIndex(e => e.Kamar, "IX_TM_RUANG_2");

            entity.HasIndex(e => e.VKodeinventory, "IX_TM_RUANG_3");

            entity.HasIndex(e => e.KodeRequestobat, "IX_TM_RUANG_4");

            entity.HasIndex(e => e.KodeTarif, "IX_TM_RUANG_5");

            entity.HasIndex(e => e.IsAktif, "IX_TM_RUANG_6");

            entity.HasIndex(e => e.IdNumruang, "IX_TM_RUANG_7");

            entity.HasIndex(e => e.VKdinhealth, "IX_V_KDINHEALTH");

            entity.HasIndex(e => e.VLyninhealth, "IX_V_LYNINHEALTH");

            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.IdNumruang)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUMRUANG");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.IsTarif).HasColumnName("IS_TARIF");
            entity.Property(e => e.Kamar)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("KAMAR");
            entity.Property(e => e.Kelompok)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("KELOMPOK");
            entity.Property(e => e.KodeRequestobat)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("KODE_REQUESTOBAT");
            entity.Property(e => e.KodeTarif)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("KODE_TARIF");
            entity.Property(e => e.Nama)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NAMA");
            entity.Property(e => e.Noruang)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("NORUANG");
            entity.Property(e => e.VGdgpaket)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_GDGPAKET");
            entity.Property(e => e.VGdgpenerimaan)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_GDGPENERIMAAN");
            entity.Property(e => e.VGdgretur)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_GDGRETUR");
            entity.Property(e => e.VKdinhealth)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("V_KDINHEALTH");
            entity.Property(e => e.VKodeinventory)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODEINVENTORY");
            entity.Property(e => e.VLyninhealth)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_LYNINHEALTH");

            entity.HasOne(d => d.KodeRequestobatNavigation).WithMany(p => p.TmRuangKodeRequestobatNavigations)
                .HasForeignKey(d => d.KodeRequestobat)
                .HasConstraintName("FK_TM_RUANG_TM_GUDANG2_(requestobat)");

            entity.HasOne(d => d.VKodeinventoryNavigation).WithMany(p => p.TmRuangVKodeinventoryNavigations)
                .HasForeignKey(d => d.VKodeinventory)
                .HasConstraintName("FK_TM_RUANG_TM_GUDANG_(kdinventory)");
        });

        modelBuilder.Entity<TmSettingAdm>(entity =>
        {
            entity.HasKey(e => e.IdNumadm);

            entity.ToTable("TM_SETTING_ADM");

            entity.Property(e => e.IdNumadm)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUMADM");
            entity.Property(e => e.DBiaya)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BIAYA");
            entity.Property(e => e.DPercent)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("D_PERCENT");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VKategori)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KATEGORI");
        });

        modelBuilder.Entity<TmSettingDaftar>(entity =>
        {
            entity.HasKey(e => e.VTujuan);

            entity.ToTable("TM_SETTING_DAFTAR");

            entity.Property(e => e.VTujuan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_TUJUAN");
            entity.Property(e => e.IdSettingdaftar)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_SETTINGDAFTAR");
            entity.Property(e => e.IsTampil).HasColumnName("IS_TAMPIL");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VNmunitdaftar)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMUNITDAFTAR");
        });

        modelBuilder.Entity<TmTarifGroup>(entity =>
        {
            entity.HasKey(e => e.IdGrouptarif);

            entity.ToTable("TM_TARIF_GROUP");

            entity.Property(e => e.IdGrouptarif)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GROUPTARIF");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VAliasgroup)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("V_ALIASGROUP");
            entity.Property(e => e.VKdakun)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDAKUN");
            entity.Property(e => e.VNmgrouptarif)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("V_NMGROUPTARIF");
        });

        modelBuilder.Entity<TmTarifHarga>(entity =>
        {
            entity.HasKey(e => e.IdTarifkelas).HasName("PK_TM_TARIF_KELAS2");

            entity.ToTable("TM_TARIF_HARGA", tb => tb.HasTrigger("UPDATE_STATUS_TM_TARIF_HARGA"));

            entity.Property(e => e.IdTarifkelas)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_TARIFKELAS");
            entity.Property(e => e.D2tnd)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_2TND");
            entity.Property(e => e.DAdm)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_ADM");
            entity.Property(e => e.DBahanalkes)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BAHANALKES");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DCito)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_CITO");
            entity.Property(e => e.DDiskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DISKON");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DJasamedis)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS");
            entity.Property(e => e.DJasamedis2)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS2");
            entity.Property(e => e.DJasamedis3)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS3");
            entity.Property(e => e.DJasamedis4)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS4");
            entity.Property(e => e.DJasamedis5)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS5");
            entity.Property(e => e.DJasars)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASARS");
            entity.Property(e => e.DLastupdate)
                .HasColumnType("datetime")
                .HasColumnName("D_LASTUPDATE");
            entity.Property(e => e.DPenyulit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_PENYULIT");
            entity.Property(e => e.DTglakhir)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLAKHIR");
            entity.Property(e => e.DTglawal)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLAWAL");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKdtarifdetail)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDTARIFDETAIL");
            entity.Property(e => e.VKelas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KELAS");
        });

        modelBuilder.Entity<TmTarifMatrix>(entity =>
        {
            entity.HasKey(e => new { e.VKdtarifdetail, e.VKoderuangan });

            entity.ToTable("TM_TARIF_MATRIX");

            entity.Property(e => e.VKdtarifdetail)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KDTARIFDETAIL");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.IdTarifmatrix)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_TARIFMATRIX");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
        });

        modelBuilder.Entity<TmTarifRekanan>(entity =>
        {
            entity.HasKey(e => e.IdTarifrekanan).HasName("PK_TM_TARIF_REKANAN2");

            entity.ToTable("TM_TARIF_REKANAN");

            entity.Property(e => e.IdTarifrekanan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_TARIFREKANAN");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VKdtarifdetail)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDTARIFDETAIL");
        });

        modelBuilder.Entity<TmTarifRekananSub>(entity =>
        {
            entity.HasKey(e => e.IdTarifrekanansub);

            entity.ToTable("TM_TARIF_REKANAN_SUB");

            entity.Property(e => e.IdTarifrekanansub)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_TARIFREKANANSUB");
            entity.Property(e => e.RekananidDt)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID_DT");
            entity.Property(e => e.RekananidHd)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID_HD");
        });

        modelBuilder.Entity<TmTarifdetail>(entity =>
        {
            entity.HasKey(e => e.VKdtarifdetail);

            entity.ToTable("TM_TARIFDETAIL");

            entity.Property(e => e.VKdtarifdetail)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDTARIFDETAIL");
            entity.Property(e => e.IdGrouptarif)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_GROUPTARIF");
            entity.Property(e => e.IdTarifdetail)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_TARIFDETAIL");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.VKodetariflayan)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODETARIFLAYAN");
            entity.Property(e => e.VNmtarifdetail)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMTARIFDETAIL");

            entity.HasOne(d => d.IdGrouptarifNavigation).WithMany(p => p.TmTarifdetails)
                .HasForeignKey(d => d.IdGrouptarif)
                .HasConstraintName("FK_TM_TARIFDETAIL_TM_TARIF_GROUP");
        });

        modelBuilder.Entity<TmhKamar>(entity =>
        {
            entity.HasKey(e => e.Kamar);

            entity.ToTable("TMH_KAMAR");

            entity.Property(e => e.Kamar)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("KAMAR");
            entity.Property(e => e.Harga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("HARGA");
            entity.Property(e => e.Idkamar)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDKAMAR");
            entity.Property(e => e.IsAktif).HasColumnName("IS_AKTIF");
            entity.Property(e => e.Kelas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("KELAS");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
        });

        modelBuilder.Entity<TmhPengunjung>(entity =>
        {
            entity.HasKey(e => e.Idpengunjung);

            entity.ToTable("TMH_PENGUNJUNG");

            entity.Property(e => e.Idpengunjung)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("IDPENGUNJUNG");
            entity.Property(e => e.Alamat)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ALAMAT");
            entity.Property(e => e.Alamatorangdekat)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ALAMATORANGDEKAT");
            entity.Property(e => e.Alamatpekerjaan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ALAMATPEKERJAAN");
            entity.Property(e => e.IdNumpengunjung)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUMPENGUNJUNG");
            entity.Property(e => e.IsKunjungan).HasColumnName("IS_KUNJUNGAN");
            entity.Property(e => e.Jenisidentitas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("JENISIDENTITAS");
            entity.Property(e => e.Kota)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("KOTA");
            entity.Property(e => e.Namaorangdekat)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("NAMAORANGDEKAT");
            entity.Property(e => e.Namapengunjung)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("NAMAPENGUNJUNG");
            entity.Property(e => e.Nomoridentitas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NOMORIDENTITAS");
            entity.Property(e => e.Pekerjaan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PEKERJAAN");
            entity.Property(e => e.Telp)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TELP");
            entity.Property(e => e.Telporangdekat)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TELPORANGDEKAT");
            entity.Property(e => e.Telppekerjaan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TELPPEKERJAAN");
            entity.Property(e => e.Tgllahir)
                .HasColumnType("datetime")
                .HasColumnName("TGLLAHIR");
        });

        modelBuilder.Entity<TrHasillab>(entity =>
        {
            entity.HasKey(e => e.IdHasillab);

            entity.ToTable("TR_HASILLAB");

            entity.HasIndex(e => e.IdHasillab, "IX_TR_HASILLAB");

            entity.HasIndex(e => e.VHasil, "IX_TR_HASILLAB_1");

            entity.HasIndex(e => e.VNistandart, "IX_TR_HASILLAB_2");

            entity.HasIndex(e => e.IdDetilpemeriksaanlab, "IX_TR_HASILLAB_3");

            entity.HasIndex(e => e.IdPasienlab, "IX_TR_HASILLAB_4");

            entity.Property(e => e.IdHasillab)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_HASILLAB");
            entity.Property(e => e.IdDetilpemeriksaanlab).HasColumnName("ID_DETILPEMERIKSAANLAB");
            entity.Property(e => e.IdPasienlab)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_PASIENLAB");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VHasil)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("V_HASIL");
            entity.Property(e => e.VKdpemeriksaanlab)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDPEMERIKSAANLAB");
            entity.Property(e => e.VNistandart)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_NISTANDART");
            entity.Property(e => e.VNmpemeriksaan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMPEMERIKSAAN");
            entity.Property(e => e.VSatuan)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_SATUAN");

            entity.HasOne(d => d.IdPasienlabNavigation).WithMany(p => p.TrHasillabs)
                .HasForeignKey(d => d.IdPasienlab)
                .HasConstraintName("FK_TR_HASILLAB_TT_PASIENLAB");
        });

        modelBuilder.Entity<TrHasilrad>(entity =>
        {
            entity.HasKey(e => e.IdTrhasilrad).HasName("PK_TR_HASILRAD_1");

            entity.ToTable("TR_HASILRAD");

            entity.HasIndex(e => e.IdPasienrad, "IX_TR_HASILRAD_idpasienrad");

            entity.HasIndex(e => e.IdTrhasilrad, "IX_TR_HASILRAD_idtrhasilrad");

            entity.HasIndex(e => e.VKddokter, "IX_TR_HASILRAD_kddokter");

            entity.HasIndex(e => e.VNmdokter, "IX_TR_HASILRAD_nmdokter");

            entity.Property(e => e.IdTrhasilrad)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_TRHASILRAD");
            entity.Property(e => e.DTglinput)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLINPUT");
            entity.Property(e => e.IdPasienrad)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_PASIENRAD");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VHasil)
                .HasColumnType("text")
                .HasColumnName("V_HASIL");
            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.VKdrad)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDRAD");
            entity.Property(e => e.VNmdokter)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMDOKTER");
            entity.Property(e => e.VNmpemeriksaan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMPEMERIKSAAN");
            entity.Property(e => e.VRtf)
                .HasMaxLength(50)
                .IsFixedLength()
                .HasColumnName("V_RTF");

            entity.HasOne(d => d.IdPasienradNavigation).WithMany(p => p.TrHasilrads)
                .HasForeignKey(d => d.IdPasienrad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TR_HASILRAD_TT_PASIENRAD");
        });

        modelBuilder.Entity<TrItemnonmedi>(entity =>
        {
            entity.HasKey(e => e.IdItemnonmedis);

            entity.ToTable("TR_ITEMNONMEDIS");

            entity.Property(e => e.IdItemnonmedis)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_ITEMNONMEDIS");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DDiskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DISKON");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DJumlah)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JUMLAH");
            entity.Property(e => e.DSubtotal)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_SUBTOTAL");
            entity.Property(e => e.IdTransaksinonmedis)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_TRANSAKSINONMEDIS");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VGroup)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_GROUP");
            entity.Property(e => e.VKdtarif)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDTARIF");
            entity.Property(e => e.VNmtarif)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMTARIF");

            entity.HasOne(d => d.IdTransaksinonmedisNavigation).WithMany(p => p.TrItemnonmedis)
                .HasForeignKey(d => d.IdTransaksinonmedis)
                .HasConstraintName("FK_TR_ITEMNONMEDIS_TT_TRANSAKSINONMEDIS");
        });

        modelBuilder.Entity<TrItemobatlangsung>(entity =>
        {
            entity.HasKey(e => e.IdItemobatlangsung);

            entity.ToTable("TR_ITEMOBATLANGSUNG");

            entity.Property(e => e.IdItemobatlangsung)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_ITEMOBATLANGSUNG");
            entity.Property(e => e.CApprove)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE");
            entity.Property(e => e.CApproveVer)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_VER");
            entity.Property(e => e.DApprove)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE");
            entity.Property(e => e.DApproveVer)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_VER");
            entity.Property(e => e.DDiskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DISKON");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DJumlah)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JUMLAH");
            entity.Property(e => e.IdBarang)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_BARANG");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VApprove)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE");
            entity.Property(e => e.VApproveVer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_VER");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKdobat)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDOBAT");
            entity.Property(e => e.VNmobat)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMOBAT");
            entity.Property(e => e.VNoitem)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_NOITEM");
            entity.Property(e => e.VNokuitansi)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_NOKUITANSI");
            entity.Property(e => e.VNoteobat)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NOTEOBAT");

            entity.HasOne(d => d.VNokuitansiNavigation).WithMany(p => p.TrItemobatlangsungs)
                .HasForeignKey(d => d.VNokuitansi)
                .HasConstraintName("FK_TR_ITEMOBATLANGSUNG_TT_OBATLANGSUNG");
        });

        modelBuilder.Entity<TrItempaket>(entity =>
        {
            entity.HasKey(e => e.IdDetailpaket);

            entity.ToTable("TR_ITEMPAKET");

            entity.Property(e => e.IdDetailpaket)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_DETAILPAKET");
            entity.Property(e => e.CApprove)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE");
            entity.Property(e => e.CApproveVer)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_VER");
            entity.Property(e => e.D2tnd)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_2TND");
            entity.Property(e => e.DAdm)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_ADM");
            entity.Property(e => e.DApprove)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE");
            entity.Property(e => e.DApproveVer)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_VER");
            entity.Property(e => e.DBahanalkes)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BAHANALKES");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DCito)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_CITO");
            entity.Property(e => e.DDiskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DISKON");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DJasamedis)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS");
            entity.Property(e => e.DJasamedis2)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS2");
            entity.Property(e => e.DJasamedis3)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS3");
            entity.Property(e => e.DJasamedis4)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS4");
            entity.Property(e => e.DJasamedis5)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS5");
            entity.Property(e => e.DJasars)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASARS");
            entity.Property(e => e.DJumlah)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JUMLAH");
            entity.Property(e => e.DPenyulit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_PENYULIT");
            entity.Property(e => e.DSubtotal)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_SUBTOTAL");
            entity.Property(e => e.IdMasterpemeriksaanpenunjang)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_MASTERPEMERIKSAANPENUNJANG");
            entity.Property(e => e.IdPaket)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_PAKET");
            entity.Property(e => e.IdPenunjangdetail)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_PENUNJANGDETAIL");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VApproveVer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_VER");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VGroup)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_GROUP");
            entity.Property(e => e.VKddetail)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDDETAIL");
            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.VKodetarif)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KODETARIF");
            entity.Property(e => e.VNmdetail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMDETAIL");
            entity.Property(e => e.VNmdokter)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMDOKTER");
            entity.Property(e => e.VNomorpaket)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("V_NOMORPAKET");
            entity.Property(e => e.VTipe)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_TIPE");

            entity.HasOne(d => d.IdPaketNavigation).WithMany(p => p.TrItempakets)
                .HasForeignKey(d => d.IdPaket)
                .HasConstraintName("FK_TR_ITEMPAKET_TT_PAKET");
        });

        modelBuilder.Entity<TtAcountpasien>(entity =>
        {
            entity.HasKey(e => e.IdAcountpasien);

            entity.ToTable("TT_ACOUNTPASIEN");

            entity.Property(e => e.IdAcountpasien)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_ACOUNTPASIEN");
            entity.Property(e => e.Biaya)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("BIAYA");
            entity.Property(e => e.CApproveVer)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_VER");
            entity.Property(e => e.DApproveVer)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_VER");
            entity.Property(e => e.DTgl)
                .HasColumnType("datetime")
                .HasColumnName("D_TGL");
            entity.Property(e => e.Disc)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("DISC");
            entity.Property(e => e.IdRegistrasi)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.Item)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("ITEM");
            entity.Property(e => e.Paket)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("PAKET");
            entity.Property(e => e.Unit)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))")
                .HasColumnName("UNIT");
            entity.Property(e => e.VApproveVer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_VER");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
        });

        modelBuilder.Entity<TtBetinap>(entity =>
        {
            entity.HasKey(e => new { e.IdRegistrasi, e.DTglmasuk });

            entity.ToTable("TT_BETINAP");

            entity.HasIndex(e => e.DTglmasuk, "IX_TT_BETINAP_tglmasuk");

            entity.HasIndex(e => e.VNotmptidur, "IX_TT_BETINAP_v_notmptidur");

            entity.HasIndex(e => e.VRuang, "IX_TT_BETINAP_v_ruang");

            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.DTglmasuk)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLMASUK");
            entity.Property(e => e.CApprove)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE");
            entity.Property(e => e.CTipeaskes)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("C_TIPEASKES");
            entity.Property(e => e.DApprove)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DDiskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DISKON");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DTglkeluar)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLKELUAR");
            entity.Property(e => e.IdNum)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUM");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VApprove)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE");
            entity.Property(e => e.VBagian)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("V_BAGIAN");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VJam)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_JAM");
            entity.Property(e => e.VKelas)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("V_KELAS");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VKodetarif)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODETARIF");
            entity.Property(e => e.VNote)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_NOTE");
            entity.Property(e => e.VNotmptidur)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_NOTMPTIDUR");
            entity.Property(e => e.VPenanggungjawab)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_PENANGGUNGJAWAB");
            entity.Property(e => e.VRuang)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("V_RUANG");

            entity.HasOne(d => d.IdRegistrasiNavigation).WithMany(p => p.TtBetinaps)
                .HasForeignKey(d => d.IdRegistrasi)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TT_BETINAP_TT_KUNJUNGAN");
        });

        modelBuilder.Entity<TtBlacklist>(entity =>
        {
            entity.HasKey(e => e.IdBlacklist);

            entity.ToTable("TT_BLACKLIST");

            entity.Property(e => e.IdBlacklist)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_BLACKLIST");
            entity.Property(e => e.DTgl)
                .HasColumnType("datetime")
                .HasColumnName("D_TGL");
            entity.Property(e => e.IdPasien)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("ID_PASIEN");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKeterangan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KETERANGAN");
        });

        modelBuilder.Entity<TtDeposit>(entity =>
        {
            entity.HasKey(e => new { e.IdRegistrasi, e.DTgl, e.Id });

            entity.ToTable("TT_DEPOSIT");

            entity.HasIndex(e => e.IdRegistrasi, "IX_TT_DEPOSIT");

            entity.HasIndex(e => e.DTgl, "IX_TT_DEPOSIT_1");

            entity.HasIndex(e => e.DCharge, "IX_TT_DEPOSIT_2");

            entity.HasIndex(e => e.DKredit, "IX_TT_DEPOSIT_3");

            entity.HasIndex(e => e.DTransfer, "IX_TT_DEPOSIT_4");

            entity.HasIndex(e => e.DTunai, "IX_TT_DEPOSIT_5");

            entity.HasIndex(e => e.IdStatus, "IX_TT_DEPOSIT_6");

            entity.HasIndex(e => e.Id, "IX_TT_DEPOSIT_7");

            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.DTgl)
                .HasColumnType("datetime")
                .HasColumnName("D_TGL");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID");
            entity.Property(e => e.DCharge)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_CHARGE");
            entity.Property(e => e.DKredit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_KREDIT");
            entity.Property(e => e.DTransfer)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_TRANSFER");
            entity.Property(e => e.DTunai)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_TUNAI");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKreditjeniscard)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_KREDITJENISCARD");
            entity.Property(e => e.VKreditnamabank)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_KREDITNAMABANK");
            entity.Property(e => e.VKreditnobatch)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_KREDITNOBATCH");
            entity.Property(e => e.VKreditnocard)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_KREDITNOCARD");
            entity.Property(e => e.VNote)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_NOTE");
            entity.Property(e => e.VStatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_STATUS");
            entity.Property(e => e.VTransfernamabank)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TRANSFERNAMABANK");
            entity.Property(e => e.VTransfernomor)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TRANSFERNOMOR");
            entity.Property(e => e.VTransfernorekasal)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TRANSFERNOREKASAL");

            entity.HasOne(d => d.IdRegistrasiNavigation).WithMany(p => p.TtDeposits)
                .HasForeignKey(d => d.IdRegistrasi)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TT_DEPOSIT_TT_KUNJUNGAN");
        });

        modelBuilder.Entity<TtKuitansi>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_TT_EDITKUITANSI");

            entity.ToTable("TT_KUITANSI");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID");
            entity.Property(e => e.DNominal)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_NOMINAL");
            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKeterangan)
                .HasColumnType("text")
                .HasColumnName("V_KETERANGAN");
            entity.Property(e => e.VTerimadari)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_TERIMADARI");
        });

        modelBuilder.Entity<TtKuitansialke>(entity =>
        {
            entity.HasKey(e => e.IdKuitansialkes);

            entity.ToTable("TT_KUITANSIALKES");

            entity.HasIndex(e => e.IdNumalkes, "IX_TT_KUITANSIALKES");

            entity.HasIndex(e => e.DTgl, "IX_TT_KUITANSIALKES_tgl");

            entity.Property(e => e.IdKuitansialkes)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_KUITANSIALKES");
            entity.Property(e => e.CApprove)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE");
            entity.Property(e => e.CApproveVer)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_VER");
            entity.Property(e => e.DApprove)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE");
            entity.Property(e => e.DApproveVer)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_VER");
            entity.Property(e => e.DTgl)
                .HasColumnType("datetime")
                .HasColumnName("D_TGL");
            entity.Property(e => e.IdNumalkes)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUMALKES");
            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VApproveVer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_VER");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.VKodeinventory)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODEINVENTORY");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VKodetarif)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODETARIF");
            entity.Property(e => e.VNmdokter)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMDOKTER");
            entity.Property(e => e.VStatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_STATUS");

            entity.HasOne(d => d.VKodeinventoryNavigation).WithMany(p => p.TtKuitansialkes)
                .HasForeignKey(d => d.VKodeinventory)
                .HasConstraintName("FK_TT_KUITANSIALKES_TM_GUDANG");

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TtKuitansialkes)
                .HasForeignKey(d => d.VKoderuangan)
                .HasConstraintName("FK_TT_KUITANSIALKES_TM_RUANG");
        });

        modelBuilder.Entity<TtKuitansiresep>(entity =>
        {
            entity.HasKey(e => e.IdKuitansiresep);

            entity.ToTable("TT_KUITANSIRESEP");

            entity.HasIndex(e => e.IdKuitansiresep, "IX_TT_KUITANSIRESEP");

            entity.HasIndex(e => e.IdRegistrasi, "IX_TT_KUITANSIRESEP_1");

            entity.HasIndex(e => e.VNmdokter, "IX_TT_KUITANSIRESEP_2");

            entity.HasIndex(e => e.VKoderuangan, "IX_TT_KUITANSIRESEP_3");

            entity.HasIndex(e => e.VKoderequestobat, "IX_TT_KUITANSIRESEP_4");

            entity.HasIndex(e => e.VKodetarif, "IX_TT_KUITANSIRESEP_5");

            entity.HasIndex(e => e.VKddokter, "IX_TT_KUITANSIRESEP_6");

            entity.HasIndex(e => e.Idn, "IX_TT_KUITANSIRESEP_idn");

            entity.HasIndex(e => e.VNoresep, "IX_TT_KUITANSIRESEP_noresep");

            entity.HasIndex(e => e.VStatus, "IX_TT_KUITANSIRESEP_status");

            entity.HasIndex(e => e.Statusnotif, "IX_TT_KUITANSIRESEP_statusnotif");

            entity.HasIndex(e => e.DTgl, "IX_TT_KUITANSIRESEP_tgl");

            entity.HasIndex(e => e.VTiperesep, "IX_TT_KUITANSIRESEP_tiperesep");

            entity.Property(e => e.IdKuitansiresep)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_KUITANSIRESEP");
            entity.Property(e => e.CApprove)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE");
            entity.Property(e => e.CApproveAa)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_AA");
            entity.Property(e => e.CApproveVer)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_VER");
            entity.Property(e => e.DApprove)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE");
            entity.Property(e => e.DApproveAa)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_AA");
            entity.Property(e => e.DApproveVer)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_VER");
            entity.Property(e => e.DTgl)
                .HasColumnType("datetime")
                .HasColumnName("D_TGL");
            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.Idn)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDN");
            entity.Property(e => e.Statusnotif)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("STATUSNOTIF");
            entity.Property(e => e.TtdDokter)
                .IsRequired()
                .HasDefaultValue("")
                .HasColumnType("text")
                .HasColumnName("TTD_DOKTER");
            entity.Property(e => e.VApproveAa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_AA");
            entity.Property(e => e.VApproveVer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_VER");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.VKoderequestobat)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODEREQUESTOBAT");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VKodetarif)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODETARIF");
            entity.Property(e => e.VNmdokter)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMDOKTER");
            entity.Property(e => e.VNoresep)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NORESEP");
            entity.Property(e => e.VStatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_STATUS");
            entity.Property(e => e.VTiperesep)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_TIPERESEP");

            entity.HasOne(d => d.VKddokterNavigation).WithMany(p => p.TtKuitansireseps)
                .HasForeignKey(d => d.VKddokter)
                .HasConstraintName("FK_TT_KUITANSIRESEP_TM_DOKTER");

            entity.HasOne(d => d.VKoderequestobatNavigation).WithMany(p => p.TtKuitansireseps)
                .HasForeignKey(d => d.VKoderequestobat)
                .HasConstraintName("FK_TT_KUITANSIRESEP_TM_GUDANG");

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TtKuitansireseps)
                .HasForeignKey(d => d.VKoderuangan)
                .HasConstraintName("FK_TT_KUITANSIRESEP_TM_RUANG");
        });

        modelBuilder.Entity<TtKunjungan>(entity =>
        {
            entity.HasKey(e => e.IdRegistrasi);

            entity.ToTable("TT_KUNJUNGAN");

            entity.HasIndex(e => e.IdRegistrasi, "IX_TT_KUNJUNGAN");

            entity.HasIndex(e => e.IdPasien, "IX_TT_KUNJUNGAN_1");

            entity.HasIndex(e => e.Rekananid, "IX_TT_KUNJUNGAN_2");

            entity.HasIndex(e => e.VTujuankunjungan, "IX_TT_KUNJUNGAN_3");

            entity.HasIndex(e => e.DTglpulang, "IX_TT_KUNJUNGAN_4");

            entity.HasIndex(e => e.DTglkunjungan, "IX_TT_KUNJUNGAN_5");

            entity.HasIndex(e => e.IdNumkunjungan, "IX_TT_KUNJUNGAN_6");

            entity.HasIndex(e => e.IsCob, "IX_TT_KUNJUNGAN_cob");

            entity.HasIndex(e => e.CIsbatal, "IX_TT_KUNJUNGAN_isbatal");

            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.CIsbatal)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_ISBATAL");
            entity.Property(e => e.DTglkunjungan)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLKUNJUNGAN");
            entity.Property(e => e.DTglotorisasi)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLOTORISASI");
            entity.Property(e => e.DTglpulang)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLPULANG");
            entity.Property(e => e.IdNumkunjungan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUMKUNJUNGAN");
            entity.Property(e => e.IdPasien)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("ID_PASIEN");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.IsCob).HasColumnName("IS_COB");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VAlasanbatal)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_ALASANBATAL");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VJamkunjungan)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("V_JAMKUNJUNGAN");
            entity.Property(e => e.VKet)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_KET");
            entity.Property(e => e.VNomorsep)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("V_NOMORSEP");
            entity.Property(e => e.VOtorisasi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_OTORISASI");
            entity.Property(e => e.VTransaksi)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("V_TRANSAKSI");
            entity.Property(e => e.VTujuankunjungan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_TUJUANKUNJUNGAN");
            entity.Property(e => e.VUmur)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_UMUR");

            entity.HasOne(d => d.IdPasienNavigation).WithMany(p => p.TtKunjungans)
                .HasForeignKey(d => d.IdPasien)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TT_KUNJUNGAN_TM_PASIEN_(idpasien)");

            entity.HasOne(d => d.Rekanan).WithMany(p => p.TtKunjungans)
                .HasForeignKey(d => d.Rekananid)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TT_KUNJUNGAN_TM_REKANAN_(rekananid)");
        });

        modelBuilder.Entity<TtLiburdokter>(entity =>
        {
            entity.HasKey(e => e.IdLiburdokter);

            entity.ToTable("TT_LIBURDOKTER");

            entity.Property(e => e.IdLiburdokter)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_LIBURDOKTER");
            entity.Property(e => e.Keterangan)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("KETERANGAN");
            entity.Property(e => e.TglAkhir)
                .HasColumnType("datetime")
                .HasColumnName("TGL_AKHIR");
            entity.Property(e => e.TglAwal)
                .HasColumnType("datetime")
                .HasColumnName("TGL_AWAL");
            entity.Property(e => e.TglInput)
                .HasColumnType("datetime")
                .HasColumnName("TGL_INPUT");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKddokter)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
        });

        modelBuilder.Entity<TtNotedokter>(entity =>
        {
            entity.HasKey(e => e.IdNotedokter);

            entity.ToTable("TT_NOTEDOKTER");

            entity.Property(e => e.IdNotedokter)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NOTEDOKTER");
            entity.Property(e => e.Keterangan)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("KETERANGAN");
            entity.Property(e => e.TglInput)
                .HasColumnType("datetime")
                .HasColumnName("TGL_INPUT");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKddokter)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
        });

        modelBuilder.Entity<TtObatalke>(entity =>
        {
            entity.HasKey(e => e.IdAlkes);

            entity.ToTable("TT_OBATALKES");

            entity.HasIndex(e => e.IdAlkes, "IX_TT_OBATALKES");

            entity.HasIndex(e => e.IdKuitansialkes, "IX_TT_OBATALKES_1");

            entity.HasIndex(e => e.IJml, "IX_TT_OBATALKES_2");

            entity.Property(e => e.IdAlkes)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_ALKES");
            entity.Property(e => e.CApprove)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE");
            entity.Property(e => e.CApproveVer)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_VER");
            entity.Property(e => e.DApprove)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE");
            entity.Property(e => e.DApproveVer)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_VER");
            entity.Property(e => e.DDiskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DISKON");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.IJml)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("I_JML");
            entity.Property(e => e.IdBarang)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_BARANG");
            entity.Property(e => e.IdKuitansialkes)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_KUITANSIALKES");
            entity.Property(e => e.IdObatalkes)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_OBATALKES");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VApproveVer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_VER");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKdobatalkes)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDOBATALKES");
            entity.Property(e => e.VNmobatalkes)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMOBATALKES");
            entity.Property(e => e.VNote)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("V_NOTE");
        });

        modelBuilder.Entity<TtObatlangsung>(entity =>
        {
            entity.HasKey(e => e.VNokuitansi);

            entity.ToTable("TT_OBATLANGSUNG");

            entity.HasIndex(e => e.IdRekanan, "IX_TT_OBATLANGSUNG");

            entity.HasIndex(e => e.DTanggal, "IX_TT_OBATLANGSUNG_1");

            entity.HasIndex(e => e.VNmpembeli, "IX_TT_OBATLANGSUNG_2");

            entity.HasIndex(e => e.IdRegistrasi, "IX_TT_OBATLANGSUNG_3");

            entity.HasIndex(e => e.VNokuitansi, "IX_TT_OBATLANGSUNG_4");

            entity.HasIndex(e => e.VNmdokter, "IX_TT_OBATLANGSUNG_5");

            entity.HasIndex(e => e.VKoderequestobat, "IX_TT_OBATLANGSUNG_6");

            entity.Property(e => e.VNokuitansi)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_NOKUITANSI");
            entity.Property(e => e.BBayar)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("B_BAYAR");
            entity.Property(e => e.CApproveVer)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_VER");
            entity.Property(e => e.DApproveVer)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_VER");
            entity.Property(e => e.DBiaya)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("D_BIAYA");
            entity.Property(e => e.DJasar)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("D_JASAR");
            entity.Property(e => e.DTanggal)
                .HasColumnType("datetime")
                .HasColumnName("D_TANGGAL");
            entity.Property(e => e.DTglapp)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLAPP");
            entity.Property(e => e.IdObatlangsung)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_OBATLANGSUNG");
            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.IdRekanan)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_REKANAN");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VApproveVer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_VER");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.VKeterangan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_KETERANGAN");
            entity.Property(e => e.VKoderequestobat)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODEREQUESTOBAT");
            entity.Property(e => e.VNmdokter)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMDOKTER");
            entity.Property(e => e.VNmpembeli)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMPEMBELI");
            entity.Property(e => e.VStatus)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_STATUS");
        });

        modelBuilder.Entity<TtPaidout>(entity =>
        {
            entity.HasKey(e => e.IdPaidout);

            entity.ToTable("TT_PAIDOUT");

            entity.HasIndex(e => e.IdPaidout, "IX_TT_PAIDOUT");

            entity.HasIndex(e => e.DTgl, "IX_TT_PAIDOUT_1");

            entity.HasIndex(e => e.IdStatus, "IX_TT_PAIDOUT_2");

            entity.HasIndex(e => e.DJumlah, "IX_TT_PAIDOUT_3");

            entity.HasIndex(e => e.VCarabayar, "IX_TT_PAIDOUT_4");

            entity.Property(e => e.IdPaidout)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_PAIDOUT");
            entity.Property(e => e.DJumlah)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JUMLAH");
            entity.Property(e => e.DTgl)
                .HasColumnType("datetime")
                .HasColumnName("D_TGL");
            entity.Property(e => e.IdPasien)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("ID_PASIEN");
            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VApprovedby)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVEDBY");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VCarabayar)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_CARABAYAR");
            entity.Property(e => e.VKeterangan)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("V_KETERANGAN");
            entity.Property(e => e.VNamapasien)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NAMAPASIEN");
            entity.Property(e => e.VNotebayar)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NOTEBAYAR");

            entity.HasOne(d => d.IdRegistrasiNavigation).WithMany(p => p.TtPaidouts)
                .HasForeignKey(d => d.IdRegistrasi)
                .HasConstraintName("FK_TT_PAIDOUT_TT_KUNJUNGAN");
        });

        modelBuilder.Entity<TtPaket>(entity =>
        {
            entity.HasKey(e => e.IdPaket);

            entity.ToTable("TT_PAKET", tb => tb.HasTrigger("UPDATE_TT_TRANSAKSI"));

            entity.HasIndex(e => e.VNomorpaket, "IX_TT_PAKET");

            entity.HasIndex(e => e.IdRegistrasi, "IX_TT_PAKET_1");

            entity.HasIndex(e => e.DTgl, "IX_TT_PAKET_3");

            entity.HasIndex(e => e.VNmpemeriksaan, "IX_TT_PAKET_4");

            entity.Property(e => e.IdPaket)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_PAKET");
            entity.Property(e => e.CApprove)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE");
            entity.Property(e => e.CApproveVer)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_VER");
            entity.Property(e => e.DApprove)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE");
            entity.Property(e => e.DApproveVer)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_VER");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DDiskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DISKON");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DTgl)
                .HasColumnType("datetime")
                .HasColumnName("D_TGL");
            entity.Property(e => e.IdMasterpemeriksaanpenunjang)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_MASTERPEMERIKSAANPENUNJANG");
            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.IdRekanan)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_REKANAN");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VApprove)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE");
            entity.Property(e => e.VApproveVer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_VER");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.VKdpemeriksaan)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("V_KDPEMERIKSAAN");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VKodetarif)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("V_KODETARIF");
            entity.Property(e => e.VNmdokter)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("V_NMDOKTER");
            entity.Property(e => e.VNmpemeriksaan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("V_NMPEMERIKSAAN");
            entity.Property(e => e.VNmunit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("V_NMUNIT");
            entity.Property(e => e.VNomorpaket)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("V_NOMORPAKET");

            entity.HasOne(d => d.IdRegistrasiNavigation).WithMany(p => p.TtPakets)
                .HasForeignKey(d => d.IdRegistrasi)
                .HasConstraintName("FK_TT_PAKET_TT_KUNJUNGAN");
        });

        modelBuilder.Entity<TtPaketPbAppDetail>(entity =>
        {
            entity.HasKey(e => e.IdPaketpbAppdetail);

            entity.ToTable("TT_PAKET_PB_APP_DETAIL");

            entity.Property(e => e.IdPaketpbAppdetail)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_PAKETPB_APPDETAIL");
            entity.Property(e => e.DJml)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("D_JML");
            entity.Property(e => e.DJmlapp)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("D_JMLAPP");
            entity.Property(e => e.IdBarang)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_BARANG");
            entity.Property(e => e.IdPaketpbApp)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_PAKETPB_APP");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VByapp)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BYAPP");
        });

        modelBuilder.Entity<TtPasienRencanaRad>(entity =>
        {
            entity.HasKey(e => e.IdRencanakegiatan);

            entity.ToTable("TT_PASIEN_RENCANA_RAD");

            entity.Property(e => e.IdRencanakegiatan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_RENCANAKEGIATAN");
            entity.Property(e => e.CStatus)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_STATUS");
            entity.Property(e => e.DTgl)
                .HasColumnType("datetime")
                .HasColumnName("D_TGL");
            entity.Property(e => e.IdPasien)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("ID_PASIEN");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VJam)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_JAM");
            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.VKegiatan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KEGIATAN");
            entity.Property(e => e.VKelompok)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KELOMPOK");
            entity.Property(e => e.VNamapasien)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NAMAPASIEN");
            entity.Property(e => e.VNmdokter)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMDOKTER");
            entity.Property(e => e.VTelepon)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_TELEPON");

            entity.HasOne(d => d.IdPasienNavigation).WithMany(p => p.TtPasienRencanaRads)
                .HasForeignKey(d => d.IdPasien)
                .HasConstraintName("FK_TT_PASIEN_RENCANA_RAD_TM_PASIEN");
        });

        modelBuilder.Entity<TtPasieninap>(entity =>
        {
            entity.HasKey(e => e.IdRegistrasi);

            entity.ToTable("TT_PASIENINAP");

            entity.HasIndex(e => e.CIsdone, "IX_TT_PASIENINAP_c_isdone");

            entity.HasIndex(e => e.DTgldatang, "IX_TT_PASIENINAP_d_tgldatang");

            entity.HasIndex(e => e.IdNum, "IX_TT_PASIENINAP_idnum");

            entity.HasIndex(e => e.IdPasieninap, "IX_TT_PASIENINAP_idpaiseninap");

            entity.HasIndex(e => e.IdRegistrasi, "IX_TT_PASIENINAP_idregistrasi");

            entity.HasIndex(e => e.VKdpengirim, "IX_TT_PASIENINAP_v_kdpengirim");

            entity.HasIndex(e => e.VNmpengirim, "IX_TT_PASIENINAP_v_nmpengirim");

            entity.HasIndex(e => e.VKddokter, "IX_TT_PASIENINAP_vkddokter");

            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.BJaminpribadi).HasColumnName("B_JAMINPRIBADI");
            entity.Property(e => e.CIsdone)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_ISDONE");
            entity.Property(e => e.DTgldatang)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLDATANG");
            entity.Property(e => e.DTglpulang)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLPULANG");
            entity.Property(e => e.Dokter1)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("DOKTER1");
            entity.Property(e => e.Dokter2)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("DOKTER2");
            entity.Property(e => e.Dokter3)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("DOKTER3");
            entity.Property(e => e.Dokter4)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("DOKTER4");
            entity.Property(e => e.Dokter5)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("DOKTER5");
            entity.Property(e => e.IdNum)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUM");
            entity.Property(e => e.IdPasieninap)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_PASIENINAP");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("NOTE");
            entity.Property(e => e.VAlamatpenjamin)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_ALAMATPENJAMIN");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VCarakeluar)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_CARAKELUAR");
            entity.Property(e => e.VCaramasuk)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_CARAMASUK");
            entity.Property(e => e.VHakkelas)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("V_HAKKELAS");
            entity.Property(e => e.VJamdatang)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_JAMDATANG");
            entity.Property(e => e.VJampulang)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_JAMPULANG");
            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.VKdpengirim)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDPENGIRIM");
            entity.Property(e => e.VKeadaanakhir)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KEADAANAKHIR");
            entity.Property(e => e.VKeluhan)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_KELUHAN");
            entity.Property(e => e.VKeteranganawal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_KETERANGANAWAL");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VNmpengirim)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMPENGIRIM");
            entity.Property(e => e.VNmpenjamin)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMPENJAMIN");
            entity.Property(e => e.VTelppenjamin)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TELPPENJAMIN");
            entity.Property(e => e.VTipepengirim)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_TIPEPENGIRIM");

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TtPasieninaps)
                .HasForeignKey(d => d.VKoderuangan)
                .HasConstraintName("FK_TT_PASIENINAP_TM_RUANG");
        });

        modelBuilder.Entity<TtPasienlab>(entity =>
        {
            entity.HasKey(e => e.IdPasienlab);

            entity.ToTable("TT_PASIENLAB");

            entity.HasIndex(e => e.IdPasienlab, "IX_TT_PASIENLAB");

            entity.HasIndex(e => e.IdRegistrasi, "IX_TT_PASIENLAB_1");

            entity.HasIndex(e => e.DTglsample, "IX_TT_PASIENLAB_10");

            entity.HasIndex(e => e.IdNum, "IX_TT_PASIENLAB_11");

            entity.HasIndex(e => e.VBy, "IX_TT_PASIENLAB_12");

            entity.HasIndex(e => e.VKddokter, "IX_TT_PASIENLAB_2");

            entity.HasIndex(e => e.VKddokterpjawab, "IX_TT_PASIENLAB_3");

            entity.HasIndex(e => e.VKelas, "IX_TT_PASIENLAB_4");

            entity.HasIndex(e => e.VKoderuangan, "IX_TT_PASIENLAB_5");

            entity.HasIndex(e => e.VNmdokter, "IX_TT_PASIENLAB_6");

            entity.HasIndex(e => e.VPenanggungjawab, "IX_TT_PASIENLAB_7");

            entity.HasIndex(e => e.VUnit, "IX_TT_PASIENLAB_8");

            entity.HasIndex(e => e.DTgldatang, "IX_TT_PASIENLAB_9");

            entity.Property(e => e.IdPasienlab)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_PASIENLAB");
            entity.Property(e => e.CApprove)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE");
            entity.Property(e => e.CApproveAna)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_ANA");
            entity.Property(e => e.CApproveVer)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_VER");
            entity.Property(e => e.CIsdone)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_ISDONE");
            entity.Property(e => e.DApprove)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE");
            entity.Property(e => e.DApproveAna)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_ANA");
            entity.Property(e => e.DApproveVer)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_VER");
            entity.Property(e => e.DTgldatang)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLDATANG");
            entity.Property(e => e.DTglsample)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLSAMPLE");
            entity.Property(e => e.IUrut).HasColumnName("I_URUT");
            entity.Property(e => e.IdNum)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUM");
            entity.Property(e => e.IdRegistrasi)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VApproveAna)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_ANA");
            entity.Property(e => e.VApproveVer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_VER");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VCatatan)
                .HasColumnType("text")
                .HasColumnName("V_CATATAN");
            entity.Property(e => e.VJam)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_JAM");
            entity.Property(e => e.VJaminput)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_JAMINPUT");
            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.VKddokterpjawab)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTERPJAWAB");
            entity.Property(e => e.VKelas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KELAS");
            entity.Property(e => e.VKetbahan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KETBAHAN");
            entity.Property(e => e.VKetcairan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KETCAIRAN");
            entity.Property(e => e.VKetkhusus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KETKHUSUS");
            entity.Property(e => e.VKetklinik)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KETKLINIK");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VNmdokter)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMDOKTER");
            entity.Property(e => e.VPenanggungjawab)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_PENANGGUNGJAWAB");
            entity.Property(e => e.VPengobatan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_PENGOBATAN");
            entity.Property(e => e.VStatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_STATUS");
            entity.Property(e => e.VUnit)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_UNIT");

            entity.HasOne(d => d.IdRegistrasiNavigation).WithMany(p => p.TtPasienlabs)
                .HasForeignKey(d => d.IdRegistrasi)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TT_PASIENLAB_TT_KUNJUNGAN");

            entity.HasOne(d => d.VKddokterNavigation).WithMany(p => p.TtPasienlabVKddokterNavigations)
                .HasForeignKey(d => d.VKddokter)
                .HasConstraintName("FK_TT_PASIENLAB_TM_DOKTER3");

            entity.HasOne(d => d.VKddokterpjawabNavigation).WithMany(p => p.TtPasienlabVKddokterpjawabNavigations)
                .HasForeignKey(d => d.VKddokterpjawab)
                .HasConstraintName("FK_TT_PASIENLAB_TM_DOKTER2");

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TtPasienlabs)
                .HasForeignKey(d => d.VKoderuangan)
                .HasConstraintName("FK_TT_PASIENLAB_TM_RUANG");
        });

        modelBuilder.Entity<TtPasienpenunjang>(entity =>
        {
            entity.HasKey(e => e.IdPasienpenunjang).HasName("PK_TT_PASIENHEMO");

            entity.ToTable("TT_PASIENPENUNJANG");

            entity.HasIndex(e => new { e.IdRegistrasi, e.DTglkunjungan, e.VPenunjang, e.VKddokter, e.IdPasienpenunjang, e.CIsdone, e.IdNumpasienpenj }, "IX_TT_PASIENPENUNJANG").IsUnique();

            entity.Property(e => e.IdPasienpenunjang)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_PASIENPENUNJANG");
            entity.Property(e => e.CIsdone)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_ISDONE");
            entity.Property(e => e.DTglkunjungan)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLKUNJUNGAN");
            entity.Property(e => e.IUrut).HasColumnName("I_URUT");
            entity.Property(e => e.IdNumpasienpenj)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUMPASIENPENJ");
            entity.Property(e => e.IdPasien)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("ID_PASIEN");
            entity.Property(e => e.IdRegistrasi)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VJam)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_JAM");
            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.VKdpengirim)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDPENGIRIM");
            entity.Property(e => e.VKdunit)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KDUNIT");
            entity.Property(e => e.VKelas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KELAS");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VNmdokter)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("V_NMDOKTER");
            entity.Property(e => e.VNmpengirim)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMPENGIRIM");
            entity.Property(e => e.VNote)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("V_NOTE");
            entity.Property(e => e.VPenunjang)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("V_PENUNJANG");
            entity.Property(e => e.VStatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_STATUS");
            entity.Property(e => e.VUnit)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_UNIT");

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TtPasienpenunjangs)
                .HasForeignKey(d => d.VKoderuangan)
                .HasConstraintName("FK_TT_PASIENPENUNJANG_TM_RUANG");
        });

        modelBuilder.Entity<TtPasienrad>(entity =>
        {
            entity.HasKey(e => e.IdPasienrad);

            entity.ToTable("TT_PASIENRAD");

            entity.HasIndex(e => new { e.IdRegistrasi, e.DTgldatang, e.VKddokter, e.IdPasienrad, e.IdNum, e.VBy, e.VKelas, e.VKoderuangan, e.VNmdokter, e.VUnit, e.CIsdone, e.IdStatus, e.VKet, e.IUrut }, "IX_TT_PASIENRAD").IsUnique();

            entity.Property(e => e.IdPasienrad)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_PASIENRAD");
            entity.Property(e => e.CApprove)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE");
            entity.Property(e => e.CApproveAna)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_ANA");
            entity.Property(e => e.CApproveVer)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_VER");
            entity.Property(e => e.CIsdone)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_ISDONE");
            entity.Property(e => e.DApprove)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE");
            entity.Property(e => e.DApproveAna)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_ANA");
            entity.Property(e => e.DApproveVer)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_VER");
            entity.Property(e => e.DTgldatang)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLDATANG");
            entity.Property(e => e.IUrut).HasColumnName("I_URUT");
            entity.Property(e => e.IdNum)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUM");
            entity.Property(e => e.IdRegistrasi)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VApproveAna)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_ANA");
            entity.Property(e => e.VApproveVer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_VER");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VJam)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_JAM");
            entity.Property(e => e.VKddokter)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.VKelas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KELAS");
            entity.Property(e => e.VKet)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KET");
            entity.Property(e => e.VKetbahan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KETBAHAN");
            entity.Property(e => e.VKetklinik)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KETKLINIK");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VNmdokter)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMDOKTER");
            entity.Property(e => e.VPengobatan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_PENGOBATAN");
            entity.Property(e => e.VStatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_STATUS");
            entity.Property(e => e.VUnit)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_UNIT");

            entity.HasOne(d => d.IdRegistrasiNavigation).WithMany(p => p.TtPasienrads)
                .HasForeignKey(d => d.IdRegistrasi)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TT_PASIENRAD_TT_KUNJUNGAN");

            entity.HasOne(d => d.VKddokterNavigation).WithMany(p => p.TtPasienrads)
                .HasForeignKey(d => d.VKddokter)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TT_PASIENRAD_TM_DOKTER");

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TtPasienrads)
                .HasForeignKey(d => d.VKoderuangan)
                .HasConstraintName("FK_TT_PASIENRAD_TM_RUANG");
        });

        modelBuilder.Entity<TtPasienugd>(entity =>
        {
            entity.HasKey(e => e.IdNumpasienugd);

            entity.ToTable("TT_PASIENUGD");

            entity.HasIndex(e => e.IdNumpasienugd, "IX_TT_PASIENUGD_idnum");

            entity.HasIndex(e => e.IdPasienigd, "IX_TT_PASIENUGD_idpasienigd");

            entity.HasIndex(e => e.IdRegistrasi, "IX_TT_PASIENUGD_idreg");

            entity.HasIndex(e => e.CIsdone, "IX_TT_PASIENUGD_isdone");

            entity.HasIndex(e => e.VKddokter, "IX_TT_PASIENUGD_kddokter");

            entity.HasIndex(e => e.VKoderuangan, "IX_TT_PASIENUGD_kdruang");

            entity.HasIndex(e => e.VNmdokter, "IX_TT_PASIENUGD_nmdokter");

            entity.HasIndex(e => e.DTgldatang, "IX_TT_PASIENUGD_tgl");

            entity.HasIndex(e => e.VKdpengirim, "IX_TT_PASIENUGD_vkdpengirim");

            entity.Property(e => e.IdNumpasienugd)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUMPASIENUGD");
            entity.Property(e => e.BDiberitahukankekeluarga).HasColumnName("B_DIBERITAHUKANKEKELUARGA");
            entity.Property(e => e.BDiberitahukankepolisi).HasColumnName("B_DIBERITAHUKANKEPOLISI");
            entity.Property(e => e.BKasuskecelakaan).HasColumnName("B_KASUSKECELAKAAN");
            entity.Property(e => e.BKasuspolisi).HasColumnName("B_KASUSPOLISI");
            entity.Property(e => e.BPendarahan).HasColumnName("B_PENDARAHAN");
            entity.Property(e => e.BVisum).HasColumnName("B_VISUM");
            entity.Property(e => e.CIsdone)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_ISDONE");
            entity.Property(e => e.CNadi)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_NADI");
            entity.Property(e => e.CSuhutubuh)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_SUHUTUBUH");
            entity.Property(e => e.CTekanandarah)
                .HasMaxLength(8)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_TEKANANDARAH");
            entity.Property(e => e.DTgldatang)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLDATANG");
            entity.Property(e => e.DTglkelakaan)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLKELAKAAN");
            entity.Property(e => e.DTglpemberitahuan)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLPEMBERITAHUAN");
            entity.Property(e => e.DTglpulang)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLPULANG");
            entity.Property(e => e.IdPasienigd)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_PASIENIGD");
            entity.Property(e => e.IdRegistrasi)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VAnamnese)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_ANAMNESE");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VCarakeluar)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_CARAKELUAR");
            entity.Property(e => e.VDibawaoleh)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_DIBAWAOLEH");
            entity.Property(e => e.VJamdatang)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_JAMDATANG");
            entity.Property(e => e.VJampemberitahuan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_JAMPEMBERITAHUAN");
            entity.Property(e => e.VJampulang)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_JAMPULANG");
            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.VKdpengirim)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDPENGIRIM");
            entity.Property(e => e.VKeadaanterakhir)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KEADAANTERAKHIR");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VNmdokter)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMDOKTER");
            entity.Property(e => e.VNmpemberitahu)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMPEMBERITAHU");
            entity.Property(e => e.VNmpengirim)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMPENGIRIM");
            entity.Property(e => e.VPemeriksaanfisik)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_PEMERIKSAANFISIK");
            entity.Property(e => e.VPemeriksaanlanjutan)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_PEMERIKSAANLANJUTAN");
            entity.Property(e => e.VPemeriksaanpenunjang)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_PEMERIKSAANPENUNJANG");
            entity.Property(e => e.VPenjamin)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_PENJAMIN");
            entity.Property(e => e.VRiwayatsingkat)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_RIWAYATSINGKAT");
            entity.Property(e => e.VTmpkecelakaan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TMPKECELAKAAN");

            entity.HasOne(d => d.IdRegistrasiNavigation).WithMany(p => p.TtPasienugds)
                .HasForeignKey(d => d.IdRegistrasi)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TT_PASIENUGD_TT_KUNJUNGAN");

            entity.HasOne(d => d.VKddokterNavigation).WithMany(p => p.TtPasienugds)
                .HasForeignKey(d => d.VKddokter)
                .HasConstraintName("FK_TT_PASIENUGD_TM_DOKTER");

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TtPasienugds)
                .HasForeignKey(d => d.VKoderuangan)
                .HasConstraintName("FK_TT_PASIENUGD_TM_RUANG");
        });

        modelBuilder.Entity<TtPembayaran>(entity =>
        {
            entity.HasKey(e => e.VNomorbyrpasien).HasName("PK_TT_PEMBAYARAN_1");

            entity.ToTable("TT_PEMBAYARAN");

            entity.HasIndex(e => e.DTgl, "IX_TT_PEMBAYARAN");

            entity.HasIndex(e => e.VNomorbyrpasien, "IX_TT_PEMBAYARAN_1");

            entity.HasIndex(e => e.VBy, "IX_TT_PEMBAYARAN_2");

            entity.HasIndex(e => e.DJumlah, "IX_TT_PEMBAYARAN_3");

            entity.Property(e => e.VNomorbyrpasien)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("V_NOMORBYRPASIEN");
            entity.Property(e => e.DJumlah)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JUMLAH");
            entity.Property(e => e.DTgl)
                .HasColumnType("datetime")
                .HasColumnName("D_TGL");
            entity.Property(e => e.IdRegistrasi)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.Idpembayaran)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDPEMBAYARAN");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
        });

        modelBuilder.Entity<TtPembayaranDetail>(entity =>
        {
            entity.HasKey(e => e.Idn).HasName("PK_TT_PEMBAYARAN");

            entity.ToTable("TT_PEMBAYARAN_DETAIL");

            entity.HasIndex(e => e.IdRegistrasi, "IX_TT_PEMBAYARAN_DETAIL");

            entity.HasIndex(e => e.DTgl, "IX_TT_PEMBAYARAN_DETAIL_1");

            entity.HasIndex(e => e.DChargekredit, "IX_TT_PEMBAYARAN_DETAIL_10");

            entity.HasIndex(e => e.DCompliment, "IX_TT_PEMBAYARAN_DETAIL_11");

            entity.HasIndex(e => e.DKembali, "IX_TT_PEMBAYARAN_DETAIL_12");

            entity.HasIndex(e => e.IdStatus, "IX_TT_PEMBAYARAN_DETAIL_13");

            entity.HasIndex(e => e.VNomorbyrpasien, "IX_TT_PEMBAYARAN_DETAIL_14");

            entity.HasIndex(e => e.DBayartunai, "IX_TT_PEMBAYARAN_DETAIL_15");

            entity.HasIndex(e => e.VBy, "IX_TT_PEMBAYARAN_DETAIL_16");

            entity.HasIndex(e => e.DBeapasien, "IX_TT_PEMBAYARAN_DETAIL_2");

            entity.HasIndex(e => e.DBearekanan, "IX_TT_PEMBAYARAN_DETAIL_3");

            entity.HasIndex(e => e.DPerjanjianprshn, "IX_TT_PEMBAYARAN_DETAIL_4");

            entity.HasIndex(e => e.DAsuransi, "IX_TT_PEMBAYARAN_DETAIL_5");

            entity.HasIndex(e => e.DBayarkredit, "IX_TT_PEMBAYARAN_DETAIL_6");

            entity.HasIndex(e => e.DBayartransfer, "IX_TT_PEMBAYARAN_DETAIL_7");

            entity.HasIndex(e => e.Idn, "IX_TT_PEMBAYARAN_DETAIL_8");

            entity.HasIndex(e => e.DBeacharge, "IX_TT_PEMBAYARAN_DETAIL_9");

            entity.Property(e => e.Idn)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDN");
            entity.Property(e => e.CStatus)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_STATUS");
            entity.Property(e => e.DAdministrasi)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_ADMINISTRASI");
            entity.Property(e => e.DAsuransi)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_ASURANSI");
            entity.Property(e => e.DBayarkredit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BAYARKREDIT");
            entity.Property(e => e.DBayartransfer)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BAYARTRANSFER");
            entity.Property(e => e.DBayartunai)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BAYARTUNAI");
            entity.Property(e => e.DBeacharge)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEACHARGE");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DChargekredit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_CHARGEKREDIT");
            entity.Property(e => e.DCompliment)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_COMPLIMENT");
            entity.Property(e => e.DDeposit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DEPOSIT");
            entity.Property(e => e.DJumlah)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JUMLAH");
            entity.Property(e => e.DKembali)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_KEMBALI");
            entity.Property(e => e.DLainlain)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_LAINLAIN");
            entity.Property(e => e.DMaterai)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_MATERAI");
            entity.Property(e => e.DPerjanjianprshn)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_PERJANJIANPRSHN");
            entity.Property(e => e.DTgl)
                .HasColumnType("datetime")
                .HasColumnName("D_TGL");
            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKreditjeniscard)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_KREDITJENISCARD");
            entity.Property(e => e.VKreditnamabank)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_KREDITNAMABANK");
            entity.Property(e => e.VKreditnobatch)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_KREDITNOBATCH");
            entity.Property(e => e.VKreditnocard)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_KREDITNOCARD");
            entity.Property(e => e.VNomorbyrpasien)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("V_NOMORBYRPASIEN");
            entity.Property(e => e.VNonamacc)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_NONAMACC");
            entity.Property(e => e.VOtorisasi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_OTORISASI");
            entity.Property(e => e.VTransfernamabank)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TRANSFERNAMABANK");
            entity.Property(e => e.VTransfernomor)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TRANSFERNOMOR");
            entity.Property(e => e.VTransfernorekasal)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TRANSFERNOREKASAL");
        });

        modelBuilder.Entity<TtPembayaranLock>(entity =>
        {
            entity.HasKey(e => e.IdLockbayar);

            entity.ToTable("TT_PEMBAYARAN_LOCK");

            entity.Property(e => e.IdLockbayar)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_LOCKBAYAR");
            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.LockUnlock).HasColumnName("LOCK_UNLOCK");
        });

        modelBuilder.Entity<TtPemeriksaanradiologi>(entity =>
        {
            entity.HasKey(e => e.IdNumpasienrad);

            entity.ToTable("TT_PEMERIKSAANRADIOLOGI");

            entity.HasIndex(e => e.IdNumpasienrad, "IX_TT_PEMERIKSAANRADIOLOGI_idnum");

            entity.HasIndex(e => e.IdPasienrad, "IX_TT_PEMERIKSAANRADIOLOGI_idpasienrad");

            entity.HasIndex(e => e.VKelompok, "IX_TT_PEMERIKSAANRADIOLOGI_kelompok");

            entity.HasIndex(e => e.VNmpemeriksaanrad, "IX_TT_PEMERIKSAANRADIOLOGI_nmpemeriksaan");

            entity.HasIndex(e => e.VKdrad, "IX_TT_PEMERIKSAANRADIOLOGI_vkdrad");

            entity.HasIndex(e => e.VKelas, "IX_TT_PEMERIKSAANRADIOLOGI_vkelas");

            entity.Property(e => e.IdNumpasienrad)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUMPASIENRAD");
            entity.Property(e => e.CApprove)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE");
            entity.Property(e => e.CApproveAna)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_ANA");
            entity.Property(e => e.CApproveVer)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_VER");
            entity.Property(e => e.D2tnd)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_2TND");
            entity.Property(e => e.DAdm)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_ADM");
            entity.Property(e => e.DApprove)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE");
            entity.Property(e => e.DApproveAna)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_ANA");
            entity.Property(e => e.DApproveVer)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_VER");
            entity.Property(e => e.DBahanalkes)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BAHANALKES");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DCito)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_CITO");
            entity.Property(e => e.DDiskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DISKON");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DJasabaca)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASABACA");
            entity.Property(e => e.DJasapengirim)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAPENGIRIM");
            entity.Property(e => e.DJasars)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASARS");
            entity.Property(e => e.DPenyulit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_PENYULIT");
            entity.Property(e => e.DSubtotal)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_SUBTOTAL");
            entity.Property(e => e.IdPasienrad)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_PASIENRAD");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VApprove)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE");
            entity.Property(e => e.VApproveAna)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_ANA");
            entity.Property(e => e.VApproveVer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_VER");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKdrad)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("V_KDRAD");
            entity.Property(e => e.VKelas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KELAS");
            entity.Property(e => e.VKelompok)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_KELOMPOK");
            entity.Property(e => e.VNmpemeriksaanrad)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_NMPEMERIKSAANRAD");
        });

        modelBuilder.Entity<TtPenjadwalan>(entity =>
        {
            entity.HasKey(e => e.IdPenjadwalan);

            entity.ToTable("TT_PENJADWALAN");

            entity.Property(e => e.IdPenjadwalan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_Penjadwalan");
            entity.Property(e => e.DTglInput)
                .HasColumnType("datetime")
                .HasColumnName("D_TglInput");
            entity.Property(e => e.DTglJadwal)
                .HasColumnType("datetime")
                .HasColumnName("D_TglJadwal");
            entity.Property(e => e.IUrut).HasColumnName("I_Urut");
            entity.Property(e => e.IdJadwal)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_Jadwal");
            entity.Property(e => e.IdPasien)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("ID_Pasien");
            entity.Property(e => e.VAlamatPasien)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_AlamatPasien");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VJam)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_Jam");
            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDokter");
            entity.Property(e => e.VKet)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_KET");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.VNamaPasien)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NamaPasien");
            entity.Property(e => e.VStatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_STATUS");
            entity.Property(e => e.VTelpPasien)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TelpPasien");

            entity.HasOne(d => d.IdPasienNavigation).WithMany(p => p.TtPenjadwalans)
                .HasForeignKey(d => d.IdPasien)
                .HasConstraintName("FK_TT_PENJADWALAN_TM_PASIEN");
        });

        modelBuilder.Entity<TtPlafonbpj>(entity =>
        {
            entity.HasKey(e => e.Idbpjs);

            entity.ToTable("TT_PLAFONBPJS");

            entity.Property(e => e.Idbpjs)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDBPJS");
            entity.Property(e => e.DBpjs)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BPJS");
            entity.Property(e => e.DTgl)
                .HasColumnType("datetime")
                .HasColumnName("D_TGL");
            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKeterangan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KETERANGAN");
            entity.Property(e => e.VStatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_STATUS");
        });

        modelBuilder.Entity<TtPlafonbpjsHistory>(entity =>
        {
            entity.HasKey(e => e.Idbpjshistory);

            entity.ToTable("TT_PLAFONBPJS_HISTORY");

            entity.Property(e => e.Idbpjshistory)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDBPJSHISTORY");
            entity.Property(e => e.DBpjs)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BPJS");
            entity.Property(e => e.DTgl)
                .HasColumnType("datetime")
                .HasColumnName("D_TGL");
            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKeterangan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KETERANGAN");
        });

        modelBuilder.Entity<TtResep>(entity =>
        {
            entity.HasKey(e => e.IdObatresep).HasName("PK_TT_RESEPX");

            entity.ToTable("TT_RESEP");

            entity.HasIndex(e => e.IdKuitansiresep, "IX_TT_RESEP");

            entity.HasIndex(e => e.IdBarang, "IX_TT_RESEP_1");

            entity.HasIndex(e => e.DJml, "IX_TT_RESEP_2");

            entity.HasIndex(e => e.DJmltebus, "IX_TT_RESEP_3");

            entity.Property(e => e.IdObatresep)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_OBATRESEP");
            entity.Property(e => e.CApprove)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE");
            entity.Property(e => e.CApproveAa)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_AA");
            entity.Property(e => e.CApproveVer)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_VER");
            entity.Property(e => e.DApprove)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE");
            entity.Property(e => e.DApproveAa)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_AA");
            entity.Property(e => e.DApproveVer)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_VER");
            entity.Property(e => e.DDiskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DISKON");
            entity.Property(e => e.DDosisracikan)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("D_DOSISRACIKAN");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DJml)
                .HasColumnType("decimal(9, 3)")
                .HasColumnName("D_JML");
            entity.Property(e => e.DJmlracikan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JMLRACIKAN");
            entity.Property(e => e.DJmltebus)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JMLTEBUS");
            entity.Property(e => e.IdBarang)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_BARANG");
            entity.Property(e => e.IdKuitansiresep)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_KUITANSIRESEP");
            entity.Property(e => e.IdResep)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_RESEP");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VApproveAa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_AA");
            entity.Property(e => e.VApproveVer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_VER");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKdobat)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDOBAT");
            entity.Property(e => e.VNmobat)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMOBAT");
            entity.Property(e => e.VNmracikan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NMRACIKAN");
            entity.Property(e => e.VNoteobat)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_NOTEOBAT");
        });

        modelBuilder.Entity<TtRetur>(entity =>
        {
            entity.HasKey(e => e.IdReturdetail);

            entity.ToTable("TT_RETUR");

            entity.HasIndex(e => e.DJml, "IX_TT_RETUR_d_jml");

            entity.HasIndex(e => e.DTglretur, "IX_TT_RETUR_d_tglretur");

            entity.HasIndex(e => e.IdResep, "IX_TT_RETUR_idresep");

            entity.HasIndex(e => e.IdReturdetail, "IX_TT_RETUR_idreturdetail");

            entity.HasIndex(e => e.VBy, "IX_TT_RETUR_v_by");

            entity.HasIndex(e => e.DHarga, "d_harga");

            entity.Property(e => e.IdReturdetail)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_RETURDETAIL");
            entity.Property(e => e.CApprove)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE");
            entity.Property(e => e.CApproveVer)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_VER");
            entity.Property(e => e.DApprove)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE");
            entity.Property(e => e.DApproveVer)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_VER");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DJml)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JML");
            entity.Property(e => e.DTglretur)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLRETUR");
            entity.Property(e => e.IdBarang)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_BARANG");
            entity.Property(e => e.IdRegistrasi)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.IdResep)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_RESEP");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VApprove)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE");
            entity.Property(e => e.VApproveVer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_VER");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKdobat)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDOBAT");
            entity.Property(e => e.VNmobat)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMOBAT");
            entity.Property(e => e.VNomorretur)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("V_NOMORRETUR");
            entity.Property(e => e.VNote)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_NOTE");
            entity.Property(e => e.VSettingretur)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("V_SETTINGRETUR");
            entity.Property(e => e.VStatus)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("V_STATUS");
        });

        modelBuilder.Entity<TtReturalke>(entity =>
        {
            entity.HasKey(e => e.IdReturalkes);

            entity.ToTable("TT_RETURALKES");

            entity.Property(e => e.IdReturalkes)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_RETURALKES");
            entity.Property(e => e.CApprove)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE");
            entity.Property(e => e.CApproveVer)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE_VER");
            entity.Property(e => e.CTipeaskes)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("C_TIPEASKES");
            entity.Property(e => e.DApprove)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE");
            entity.Property(e => e.DApproveVer)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE_VER");
            entity.Property(e => e.DHarga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_HARGA");
            entity.Property(e => e.DJml)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JML");
            entity.Property(e => e.DTglretur)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLRETUR");
            entity.Property(e => e.IdAlkes)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_ALKES");
            entity.Property(e => e.IdBarang)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_BARANG");
            entity.Property(e => e.IdRegistrasi)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.VApprove)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE");
            entity.Property(e => e.VApproveVer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE_VER");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKdobat)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDOBAT");
            entity.Property(e => e.VNmobat)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMOBAT");
            entity.Property(e => e.VNote)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("V_NOTE");
            entity.Property(e => e.VSettingretur)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("V_SETTINGRETUR");
        });

        modelBuilder.Entity<TtRubahrekanan>(entity =>
        {
            entity.HasKey(e => e.IdRubahrekanan);

            entity.ToTable("TT_RUBAHREKANAN");

            entity.Property(e => e.IdRubahrekanan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_RUBAHREKANAN");
            entity.Property(e => e.DTglrubah)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLRUBAH");
            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.RekananidAsal)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID_ASAL");
            entity.Property(e => e.RekananidTujuan)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID_TUJUAN");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKeterangan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KETERANGAN");
        });

        modelBuilder.Entity<TtTindakan>(entity =>
        {
            entity.HasKey(e => e.IdTindakan);

            entity.ToTable("TT_TINDAKAN");

            entity.HasIndex(e => e.DTgltindakan, "IX_TT_TINDAKAN");

            entity.HasIndex(e => e.IdRegistrasi, "IX_TT_TINDAKAN_1");

            entity.HasIndex(e => e.VNomortindakan, "IX_TT_TINDAKAN_2");

            entity.HasIndex(e => e.VKodetarif, "IX_TT_TINDAKAN_3");

            entity.Property(e => e.IdTindakan)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_TINDAKAN");
            entity.Property(e => e.CApprove)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE");
            entity.Property(e => e.CApprove2)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE2");
            entity.Property(e => e.DApprove)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE");
            entity.Property(e => e.DApprove2)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE2");
            entity.Property(e => e.DTgltindakan)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLTINDAKAN");
            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VApprove)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKodetarif)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODETARIF");
            entity.Property(e => e.VNomortindakan)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("V_NOMORTINDAKAN");
            entity.Property(e => e.VNote)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_NOTE");
            entity.Property(e => e.VStatus)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("V_STATUS");

            entity.HasOne(d => d.IdRegistrasiNavigation).WithMany(p => p.TtTindakans)
                .HasForeignKey(d => d.IdRegistrasi)
                .HasConstraintName("FK_TT_TINDAKAN_TT_KUNJUNGAN");
        });

        modelBuilder.Entity<TtTindakanDetail>(entity =>
        {
            entity.HasKey(e => e.IdTindakandetail).HasName("PK_TT_TINDAKAN1");

            entity.ToTable("TT_TINDAKAN_DETAIL", tb =>
                {
                    tb.HasTrigger("INSERT_STATUS_TINDAKAN");
                    tb.HasTrigger("UPDATE_STATUS_TINDAKAN");
                });

            entity.HasIndex(e => e.VNomortindakan, "IX_TT_TINDAKAN_DETAIL");

            entity.HasIndex(e => e.DBeapasien, "IX_TT_TINDAKAN_DETAIL_1");

            entity.HasIndex(e => e.DBearekanan, "IX_TT_TINDAKAN_DETAIL_2");

            entity.HasIndex(e => e.DBiaya, "IX_TT_TINDAKAN_DETAIL_3");

            entity.HasIndex(e => e.IJml, "IX_TT_TINDAKAN_DETAIL_4");

            entity.Property(e => e.IdTindakandetail)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_TINDAKANDETAIL");
            entity.Property(e => e.CApprove)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE");
            entity.Property(e => e.CApprove2)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE2");
            entity.Property(e => e.D2tnd)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_2TND");
            entity.Property(e => e.DAdm)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_ADM");
            entity.Property(e => e.DApprove)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE");
            entity.Property(e => e.DApprove2)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE2");
            entity.Property(e => e.DBahanalkes)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BAHANALKES");
            entity.Property(e => e.DBeapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAPASIEN");
            entity.Property(e => e.DBearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BEAREKANAN");
            entity.Property(e => e.DBiaya)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BIAYA");
            entity.Property(e => e.DCito)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_CITO");
            entity.Property(e => e.DDiskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_DISKON");
            entity.Property(e => e.DJasamedis)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS");
            entity.Property(e => e.DJasamedis2)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS2");
            entity.Property(e => e.DJasamedis3)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASAMEDIS3");
            entity.Property(e => e.DJasars)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_JASARS");
            entity.Property(e => e.DPenyulit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_PENYULIT");
            entity.Property(e => e.DSubtotal)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_SUBTOTAL");
            entity.Property(e => e.DTgltindakan)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLTINDAKAN");
            entity.Property(e => e.IJml).HasColumnName("I_JML");
            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.VApprove)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE");
            entity.Property(e => e.VApprove2)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE2");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VGroup)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_GROUP");
            entity.Property(e => e.VKddokter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER");
            entity.Property(e => e.VKddokter2)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER2");
            entity.Property(e => e.VKddokter3)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("V_KDDOKTER3");
            entity.Property(e => e.VKdtindakan)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("V_KDTINDAKAN");
            entity.Property(e => e.VKodetarif)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("V_KODETARIF");
            entity.Property(e => e.VNmdokter)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMDOKTER");
            entity.Property(e => e.VNmdokter2)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMDOKTER2");
            entity.Property(e => e.VNmdokter3)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMDOKTER3");
            entity.Property(e => e.VNmtindakan)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMTINDAKAN");
            entity.Property(e => e.VNomortindakan)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("V_NOMORTINDAKAN");
            entity.Property(e => e.VNote)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_NOTE");
            entity.Property(e => e.VStatus)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("V_STATUS");
        });

        modelBuilder.Entity<TtTransaksi>(entity =>
        {
            entity.ToTable("TT_TRANSAKSI", tb =>
                {
                    tb.HasTrigger("INSERT_STATUS_TRANSAKSI");
                    tb.HasTrigger("UPDATE_STATUS_TRANSAKSI");
                });

            entity.HasIndex(e => e.Id, "IX_TT_TRANSAKSI");

            entity.HasIndex(e => e.IdRegistrasi, "IX_TT_TRANSAKSI_1");

            entity.HasIndex(e => e.Bearekanan, "IX_TT_TRANSAKSI_10");

            entity.HasIndex(e => e.Harga, "IX_TT_TRANSAKSI_11");

            entity.HasIndex(e => e.KodeItem, "IX_TT_TRANSAKSI_12");

            entity.HasIndex(e => e.CApprove, "IX_TT_TRANSAKSI_13");

            entity.HasIndex(e => e.CApprove2, "IX_TT_TRANSAKSI_14");

            entity.HasIndex(e => e.IdStatus, "IX_TT_TRANSAKSI_15");

            entity.HasIndex(e => e.IdTransaksi, "IX_TT_TRANSAKSI_2");

            entity.HasIndex(e => e.Unit, "IX_TT_TRANSAKSI_3");

            entity.HasIndex(e => e.Paket, "IX_TT_TRANSAKSI_4");

            entity.HasIndex(e => e.Item, "IX_TT_TRANSAKSI_5");

            entity.HasIndex(e => e.Jumlah, "IX_TT_TRANSAKSI_6");

            entity.HasIndex(e => e.Diskon, "IX_TT_TRANSAKSI_7");

            entity.HasIndex(e => e.Subtotal, "IX_TT_TRANSAKSI_8");

            entity.HasIndex(e => e.Beapasien, "IX_TT_TRANSAKSI_9");

            entity.HasIndex(e => e.DApprove, "IX_TT_TRANSAKSI_d_approve");

            entity.HasIndex(e => e.DApprove2, "IX_TT_TRANSAKSI_d_approve2");

            entity.HasIndex(e => e.Inputby, "IX_TT_TRANSAKSI_inputby");

            entity.HasIndex(e => e.IsBayar, "IX_TT_TRANSAKSI_isbayar");

            entity.HasIndex(e => e.VNomorbyrpasien, "IX_TT_TRANSAKSI_nobayar");

            entity.HasIndex(e => e.VApprove, "IX_TT_TRANSAKSI_v_approve");

            entity.HasIndex(e => e.VApprove2, "IX_TT_TRANSAKSI_v_approve2");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID");
            entity.Property(e => e.Beapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("BEAPASIEN");
            entity.Property(e => e.Bearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("BEAREKANAN");
            entity.Property(e => e.CApprove)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE");
            entity.Property(e => e.CApprove2)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("C_APPROVE2");
            entity.Property(e => e.DApprove)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE");
            entity.Property(e => e.DApprove2)
                .HasColumnType("datetime")
                .HasColumnName("D_APPROVE2");
            entity.Property(e => e.Diskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("DISKON");
            entity.Property(e => e.GroupTransaksi)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("GROUP_TRANSAKSI");
            entity.Property(e => e.Harga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("HARGA");
            entity.Property(e => e.IdRegistrasi)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("ID_REGISTRASI");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.IdTransaksi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ID_TRANSAKSI");
            entity.Property(e => e.Inputby)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("INPUTBY");
            entity.Property(e => e.IsBayar)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("IS_BAYAR");
            entity.Property(e => e.Item)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ITEM");
            entity.Property(e => e.Jumlah)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("JUMLAH");
            entity.Property(e => e.KodeDokter)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("KODE_DOKTER");
            entity.Property(e => e.KodeItem)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("KODE_ITEM");
            entity.Property(e => e.KodeUnit)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("KODE_UNIT");
            entity.Property(e => e.NamaDokter)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("NAMA_DOKTER");
            entity.Property(e => e.NamaItem)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("NAMA_ITEM");
            entity.Property(e => e.NoKuitansi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NO_KUITANSI");
            entity.Property(e => e.Paket)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PAKET");
            entity.Property(e => e.Subtotal)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("SUBTOTAL");
            entity.Property(e => e.Tanggal)
                .HasColumnType("datetime")
                .HasColumnName("TANGGAL");
            entity.Property(e => e.Unit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UNIT");
            entity.Property(e => e.VApprove)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE");
            entity.Property(e => e.VApprove2)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_APPROVE2");
            entity.Property(e => e.VKeterangan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KETERANGAN");
            entity.Property(e => e.VNomorbyrpasien)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("V_NOMORBYRPASIEN");
        });

        modelBuilder.Entity<TtTransaksinonmedi>(entity =>
        {
            entity.HasKey(e => e.IdTransaksinonmedis);

            entity.ToTable("TT_TRANSAKSINONMEDIS");

            entity.HasIndex(e => e.IdTransaksinonmedis, "IX_TT_TRANSAKSINONMEDIS");

            entity.HasIndex(e => e.DTgl, "IX_TT_TRANSAKSINONMEDIS_1");

            entity.HasIndex(e => e.DBayartransfer, "IX_TT_TRANSAKSINONMEDIS_10");

            entity.HasIndex(e => e.IdStatus, "IX_TT_TRANSAKSINONMEDIS_11");

            entity.HasIndex(e => e.VStatus, "IX_TT_TRANSAKSINONMEDIS_12");

            entity.HasIndex(e => e.VNokuitansi, "IX_TT_TRANSAKSINONMEDIS_2");

            entity.HasIndex(e => e.IdPasien, "IX_TT_TRANSAKSINONMEDIS_3");

            entity.HasIndex(e => e.VNmpembeli, "IX_TT_TRANSAKSINONMEDIS_4");

            entity.HasIndex(e => e.VKeterangan, "IX_TT_TRANSAKSINONMEDIS_5");

            entity.HasIndex(e => e.Rekananid, "IX_TT_TRANSAKSINONMEDIS_6");

            entity.HasIndex(e => e.DBayartunai, "IX_TT_TRANSAKSINONMEDIS_7");

            entity.HasIndex(e => e.DBayarkredit, "IX_TT_TRANSAKSINONMEDIS_8");

            entity.HasIndex(e => e.DCharge, "IX_TT_TRANSAKSINONMEDIS_9");

            entity.Property(e => e.IdTransaksinonmedis)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_TRANSAKSINONMEDIS");
            entity.Property(e => e.DAsuransi)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_ASURANSI");
            entity.Property(e => e.DBayarkredit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BAYARKREDIT");
            entity.Property(e => e.DBayartransfer)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BAYARTRANSFER");
            entity.Property(e => e.DBayartunai)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_BAYARTUNAI");
            entity.Property(e => e.DCharge)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_CHARGE");
            entity.Property(e => e.DCompliment)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_COMPLIMENT");
            entity.Property(e => e.DKembali)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_KEMBALI");
            entity.Property(e => e.DPerjanjian)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_PERJANJIAN");
            entity.Property(e => e.DTgl)
                .HasColumnType("datetime")
                .HasColumnName("D_TGL");
            entity.Property(e => e.DTotal)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("D_TOTAL");
            entity.Property(e => e.IdPasien)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("ID_PASIEN");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKeterangan)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("V_KETERANGAN");
            entity.Property(e => e.VKreditjeniscard)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_KREDITJENISCARD");
            entity.Property(e => e.VKreditnamabank)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_KREDITNAMABANK");
            entity.Property(e => e.VKreditnobatch)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_KREDITNOBATCH");
            entity.Property(e => e.VKreditnocard)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_KREDITNOCARD");
            entity.Property(e => e.VNmpembeli)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_NMPEMBELI");
            entity.Property(e => e.VNokuitansi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NOKUITANSI");
            entity.Property(e => e.VStatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_STATUS");
            entity.Property(e => e.VTransfernamabank)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TRANSFERNAMABANK");
            entity.Property(e => e.VTransfernomor)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TRANSFERNOMOR");
            entity.Property(e => e.VTransfernorekasal)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_TRANSFERNOREKASAL");
        });

        modelBuilder.Entity<TthDeposit>(entity =>
        {
            entity.HasKey(e => e.Iddeposit);

            entity.ToTable("TTH_DEPOSIT");

            entity.Property(e => e.Iddeposit)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDDEPOSIT");
            entity.Property(e => e.Chargekredit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("CHARGEKREDIT");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.Idkunjungan)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDKUNJUNGAN");
            entity.Property(e => e.Jeniskk)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("JENISKK");
            entity.Property(e => e.Kredit)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("KREDIT");
            entity.Property(e => e.Namabankkredit)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NAMABANKKREDIT");
            entity.Property(e => e.Namabanktransfer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NAMABANKTRANSFER");
            entity.Property(e => e.Namakk)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NAMAKK");
            entity.Property(e => e.Nobatch)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NOBATCH");
            entity.Property(e => e.Nomesin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NOMESIN");
            entity.Property(e => e.Nomortransfer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NOMORTRANSFER");
            entity.Property(e => e.Rekasal)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("REKASAL");
            entity.Property(e => e.Tgldeposit)
                .HasColumnType("datetime")
                .HasColumnName("TGLDEPOSIT");
            entity.Property(e => e.Transfer)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("TRANSFER");
            entity.Property(e => e.Tunai)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("TUNAI");
            entity.Property(e => e.VNote)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_NOTE");
            entity.Property(e => e.Vby)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("VBY");

            entity.HasOne(d => d.IdkunjunganNavigation).WithMany(p => p.TthDeposits)
                .HasForeignKey(d => d.Idkunjungan)
                .HasConstraintName("FK_TTH_DEPOSIT_TTH_KUNJUNGAN");
        });

        modelBuilder.Entity<TthKunjungan>(entity =>
        {
            entity.HasKey(e => e.Idkunjungan);

            entity.ToTable("TTH_KUNJUNGAN");

            entity.Property(e => e.Idkunjungan)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDKUNJUNGAN");
            entity.Property(e => e.Alasanbatal)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ALASANBATAL");
            entity.Property(e => e.IdNum)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_NUM");
            entity.Property(e => e.Idpengunjung)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("IDPENGUNJUNG");
            entity.Property(e => e.Kamar)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("KAMAR");
            entity.Property(e => e.Rekananid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.Tglkeluar)
                .HasColumnType("datetime")
                .HasColumnName("TGLKELUAR");
            entity.Property(e => e.Tglmasuk)
                .HasColumnType("datetime")
                .HasColumnName("TGLMASUK");
            entity.Property(e => e.Vby)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("VBY");

            entity.HasOne(d => d.IdpengunjungNavigation).WithMany(p => p.TthKunjungans)
                .HasForeignKey(d => d.Idpengunjung)
                .HasConstraintName("FK_TTH_KUNJUNGAN_TMH_PENGUNJUNG");

            entity.HasOne(d => d.KamarNavigation).WithMany(p => p.TthKunjungans)
                .HasForeignKey(d => d.Kamar)
                .HasConstraintName("FK_TTH_KUNJUNGAN_TMH_KAMAR");

            entity.HasOne(d => d.Rekanan).WithMany(p => p.TthKunjungans)
                .HasForeignKey(d => d.Rekananid)
                .HasConstraintName("FK_TTH_KUNJUNGAN_TM_REKANAN");
        });

        modelBuilder.Entity<TthPengunjunginap>(entity =>
        {
            entity.HasKey(e => e.Idpengunjunginap);

            entity.ToTable("TTH_PENGUNJUNGINAP");

            entity.Property(e => e.Idpengunjunginap)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDPENGUNJUNGINAP");
            entity.Property(e => e.Harga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("HARGA");
            entity.Property(e => e.Idkunjungan)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDKUNJUNGAN");
            entity.Property(e => e.Kamar)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("KAMAR");
            entity.Property(e => e.Kelas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("KELAS");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.Tglkeluar)
                .HasColumnType("datetime")
                .HasColumnName("TGLKELUAR");
            entity.Property(e => e.Tglmasuk)
                .HasColumnType("datetime")
                .HasColumnName("TGLMASUK");
            entity.Property(e => e.VKoderuangan)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("V_KODERUANGAN");
            entity.Property(e => e.Vby)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("VBY");

            entity.HasOne(d => d.IdkunjunganNavigation).WithMany(p => p.TthPengunjunginaps)
                .HasForeignKey(d => d.Idkunjungan)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TTH_PENGUNJUNGINAP_TTH_KUNJUNGAN");

            entity.HasOne(d => d.KamarNavigation).WithMany(p => p.TthPengunjunginaps)
                .HasForeignKey(d => d.Kamar)
                .HasConstraintName("FK_TTH_PENGUNJUNGINAP_TMH_KAMAR");
        });

        modelBuilder.Entity<TthRubahrekananHotel>(entity =>
        {
            entity.HasKey(e => e.IdRubahrekananhtl).HasName("PK_TT_RUBAHREKANAN_HOTEL");

            entity.ToTable("TTH_RUBAHREKANAN_HOTEL");

            entity.Property(e => e.IdRubahrekananhtl)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("ID_RUBAHREKANANHTL");
            entity.Property(e => e.DTglrubah)
                .HasColumnType("datetime")
                .HasColumnName("D_TGLRUBAH");
            entity.Property(e => e.Idkunjungan)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("IDKUNJUNGAN");
            entity.Property(e => e.RekananidAsal)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID_ASAL");
            entity.Property(e => e.RekananidTujuan)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("REKANANID_TUJUAN");
            entity.Property(e => e.VBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_BY");
            entity.Property(e => e.VKeterangan)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("V_KETERANGAN");
        });

        modelBuilder.Entity<TthTransaksi>(entity =>
        {
            entity.HasKey(e => e.Idtransaksi);

            entity.ToTable("TTH_TRANSAKSI");

            entity.Property(e => e.Idtransaksi)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDTRANSAKSI");
            entity.Property(e => e.Beapasien)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("BEAPASIEN");
            entity.Property(e => e.Bearekanan)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("BEAREKANAN");
            entity.Property(e => e.Diskon)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("DISKON");
            entity.Property(e => e.Harga)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("HARGA");
            entity.Property(e => e.IdStatus).HasColumnName("ID_STATUS");
            entity.Property(e => e.Idkunjungan)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("IDKUNJUNGAN");
            entity.Property(e => e.Jumlah)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("JUMLAH");
            entity.Property(e => e.Namatransaksi)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("NAMATRANSAKSI");
            entity.Property(e => e.Subtotal)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("SUBTOTAL");
            entity.Property(e => e.Tgltransaksi)
                .HasColumnType("datetime")
                .HasColumnName("TGLTRANSAKSI");
            entity.Property(e => e.VGroup)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("V_GROUP");
            entity.Property(e => e.Vby)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("VBY");

            entity.HasOne(d => d.IdkunjunganNavigation).WithMany(p => p.TthTransaksis)
                .HasForeignKey(d => d.Idkunjungan)
                .HasConstraintName("FK_TTH_TRANSAKSI_TTH_KUNJUNGAN");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}