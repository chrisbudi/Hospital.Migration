// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Wincare.Pelayanan.Migration.NewModels;;

public partial class WinCare2Context : DbContext
{
    public WinCare2Context(DbContextOptions<WinCare2Context> options)
        : base(options)
    {
    }

    public virtual DbSet<LisHasil> LisHasils { get; set; }

    public virtual DbSet<LisMsgqueue> LisMsgqueues { get; set; }

    public virtual DbSet<TmAsal> TmAsals { get; set; }

    public virtual DbSet<TmAturanpakai> TmAturanpakais { get; set; }

    public virtual DbSet<TmDiagnosa> TmDiagnosas { get; set; }

    public virtual DbSet<TmDiagnosaMatrix> TmDiagnosaMatrices { get; set; }

    public virtual DbSet<TmDokter> TmDokters { get; set; }

    public virtual DbSet<TmDokterHonor> TmDokterHonors { get; set; }

    public virtual DbSet<TmDokterNote> TmDokterNotes { get; set; }

    public virtual DbSet<TmDtd> TmDtds { get; set; }

    public virtual DbSet<TmFarmakoterapi> TmFarmakoterapis { get; set; }

    public virtual DbSet<TmFarmakoterapiSub> TmFarmakoterapiSubs { get; set; }

    public virtual DbSet<TmGudang> TmGudangs { get; set; }

    public virtual DbSet<TmHargabarang> TmHargabarangs { get; set; }

    public virtual DbSet<TmJadwaldokter> TmJadwaldokters { get; set; }

    public virtual DbSet<TmMorfologi> TmMorfologis { get; set; }

    public virtual DbSet<TmObatunit> TmObatunits { get; set; }

    public virtual DbSet<TmPaketHarga> TmPaketHargas { get; set; }

    public virtual DbSet<TmPaketMatrix> TmPaketMatrices { get; set; }

    public virtual DbSet<TmPaketRekanan> TmPaketRekanans { get; set; }

    public virtual DbSet<TmPaketdetail> TmPaketdetails { get; set; }

    public virtual DbSet<TmPasien> TmPasiens { get; set; }

    public virtual DbSet<TmPemeriksaanpenunjang> TmPemeriksaanpenunjangs { get; set; }

    public virtual DbSet<TmPemeriksaanpenunjangdetail> TmPemeriksaanpenunjangdetails { get; set; }

    public virtual DbSet<TmRekanan> TmRekanans { get; set; }

    public virtual DbSet<TmRuang> TmRuangs { get; set; }

    public virtual DbSet<TmStandartfield> TmStandartfields { get; set; }

    public virtual DbSet<TmStandartfieldGroup> TmStandartfieldGroups { get; set; }

    public virtual DbSet<TmStatus> TmStatuses { get; set; }

    public virtual DbSet<TmTarifGroup> TmTarifGroups { get; set; }

    public virtual DbSet<TmTarifHarga> TmTarifHargas { get; set; }

    public virtual DbSet<TmTarifMatrix> TmTarifMatrices { get; set; }

    public virtual DbSet<TmTarifPelayanan> TmTarifPelayanans { get; set; }

    public virtual DbSet<TmTarifRekanan> TmTarifRekanans { get; set; }

    public virtual DbSet<TmTarifRekananSub> TmTarifRekananSubs { get; set; }

    public virtual DbSet<TmTarifdetail> TmTarifdetails { get; set; }

    public virtual DbSet<TmTindakan> TmTindakans { get; set; }

    public virtual DbSet<TrItemobatlangsung> TrItemobatlangsungs { get; set; }

    public virtual DbSet<TrItempaket> TrItempakets { get; set; }

    public virtual DbSet<TrJadwaldokter> TrJadwaldokters { get; set; }

    public virtual DbSet<TrPelunasandetail> TrPelunasandetails { get; set; }

    public virtual DbSet<TrPembayarandetail> TrPembayarandetails { get; set; }

    public virtual DbSet<TrPembeliandetail> TrPembeliandetails { get; set; }

    public virtual DbSet<TrPemeriksaanpenunjang> TrPemeriksaanpenunjangs { get; set; }

    public virtual DbSet<TrPemesanandetail> TrPemesanandetails { get; set; }

    public virtual DbSet<TrPenerimaandetail> TrPenerimaandetails { get; set; }

    public virtual DbSet<TrPermintaandetail> TrPermintaandetails { get; set; }

    public virtual DbSet<TrReturdetail> TrReturdetails { get; set; }

    public virtual DbSet<TtAcountpasien> TtAcountpasiens { get; set; }

    public virtual DbSet<TtDiagnosa> TtDiagnosas { get; set; }

    public virtual DbSet<TtDiagnosaDetail> TtDiagnosaDetails { get; set; }

    public virtual DbSet<TtDiagnosarekap> TtDiagnosarekaps { get; set; }

    public virtual DbSet<TtHasilpemeriksaanpd> TtHasilpemeriksaanpds { get; set; }

    public virtual DbSet<TtHistoryStok> TtHistoryStoks { get; set; }

    public virtual DbSet<TtKuitansi> TtKuitansis { get; set; }

    public virtual DbSet<TtKuitansialke> TtKuitansialkes { get; set; }

    public virtual DbSet<TtKuitansiresep> TtKuitansireseps { get; set; }

    public virtual DbSet<TtKuitansiretur> TtKuitansireturs { get; set; }

    public virtual DbSet<TtKuitansiudd> TtKuitansiudds { get; set; }

    public virtual DbSet<TtKunjungan> TtKunjungans { get; set; }

    public virtual DbSet<TtObatalke> TtObatalkes { get; set; }

    public virtual DbSet<TtObatlangsung> TtObatlangsungs { get; set; }

    public virtual DbSet<TtPaket> TtPakets { get; set; }

    public virtual DbSet<TtPaketPb> TtPaketPbs { get; set; }

    public virtual DbSet<TtPaketPbApp> TtPaketPbApps { get; set; }

    public virtual DbSet<TtPaketPbAppDetail> TtPaketPbAppDetails { get; set; }

    public virtual DbSet<TtPaketPbPakai> TtPaketPbPakais { get; set; }

    public virtual DbSet<TtPaketPbPakaiDetail> TtPaketPbPakaiDetails { get; set; }

    public virtual DbSet<TtPaketPbRetur> TtPaketPbReturs { get; set; }

    public virtual DbSet<TtPaketPbReturDetail> TtPaketPbReturDetails { get; set; }

    public virtual DbSet<TtPasienpd> TtPasienpds { get; set; }

    public virtual DbSet<TtPasienpenunjang> TtPasienpenunjangs { get; set; }

    public virtual DbSet<TtPasienugd> TtPasienugds { get; set; }

    public virtual DbSet<TtPembayaran> TtPembayarans { get; set; }

    public virtual DbSet<TtPembayaranDetail> TtPembayaranDetails { get; set; }

    public virtual DbSet<TtPemeriksaanpa> TtPemeriksaanpas { get; set; }

    public virtual DbSet<TtPenjadwalan> TtPenjadwalans { get; set; }

    public virtual DbSet<TtResep> TtReseps { get; set; }

    public virtual DbSet<TtResepTulisracikan> TtResepTulisracikans { get; set; }

    public virtual DbSet<TtResepudd> TtResepudds { get; set; }

    public virtual DbSet<TtRetur> TtReturs { get; set; }

    public virtual DbSet<TtReturApp> TtReturApps { get; set; }

    public virtual DbSet<TtReturAppDetail> TtReturAppDetails { get; set; }

    public virtual DbSet<TtReturDist> TtReturDists { get; set; }

    public virtual DbSet<TtReturDistDetail> TtReturDistDetails { get; set; }

    public virtual DbSet<TtReturalke> TtReturalkes { get; set; }

    public virtual DbSet<TtRetursupplier> TtRetursuppliers { get; set; }

    public virtual DbSet<TtTindakan> TtTindakans { get; set; }

    public virtual DbSet<TtTindakanDetail> TtTindakanDetails { get; set; }

    public virtual DbSet<TtTransaksi> TtTransaksis { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<LisHasil>(entity =>
        {
            entity.Property(e => e.Idn).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmAsal>(entity =>
        {
            entity.Property(e => e.IdAsal).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmAturanpakai>(entity =>
        {
            entity.Property(e => e.IdAturanpakai).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmDiagnosa>(entity =>
        {
            entity.Property(e => e.IdDiagnosa).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmDiagnosaMatrix>(entity =>
        {
            entity.Property(e => e.IdMatrixdiagnosa).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmDokter>(entity =>
        {
            entity.ToTable("TM_DOKTER", tb =>
                {
                    tb.HasTrigger("INSERT_TM_ASAL");
                    tb.HasTrigger("UPDATE_TM_ASAL");
                });

            entity.Property(e => e.IdDokter).ValueGeneratedOnAdd();
            entity.Property(e => e.VKodetarif).IsFixedLength();
        });

        modelBuilder.Entity<TmDokterHonor>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmDokterNote>(entity =>
        {
            entity.Property(e => e.IdDokter).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmDtd>(entity =>
        {
            entity.HasKey(e => e.VKddtd).HasName("PK_TM_DTD1");

            entity.Property(e => e.IdDtd).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmFarmakoterapi>(entity =>
        {
            entity.Property(e => e.IdFarmakoterapi).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmFarmakoterapiSub>(entity =>
        {
            entity.Property(e => e.IdSubfarmakoterapi).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdFarmakoterapiNavigation).WithMany(p => p.TmFarmakoterapiSubs).HasConstraintName("FK_TM_FARMAKOTERAPI_SUB_TM_FARMAKOTERAPI");
        });

        modelBuilder.Entity<TmGudang>(entity =>
        {
            entity.Property(e => e.IdGudangobat).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmHargabarang>(entity =>
        {
            entity.Property(e => e.Idhargabeli).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmJadwaldokter>(entity =>
        {
            entity.HasKey(e => e.IdJadwal).HasName("PK_TR_JADWALDOKTER");

            entity.Property(e => e.IdJadwal).ValueGeneratedOnAdd();

            entity.HasOne(d => d.VKddokterNavigation).WithMany(p => p.TmJadwaldokters).HasConstraintName("FK_TM_JADWALDOKTER_TM_DOKTER_(kddokter)");

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TmJadwaldokters)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TM_JADWALDOKTER_TM_RUANG_(kdruangan)");
        });

        modelBuilder.Entity<TmMorfologi>(entity =>
        {
            entity.Property(e => e.IdMorfologi).ValueGeneratedOnAdd();

            entity.HasOne(d => d.VKddiagnosaNavigation).WithMany(p => p.TmMorfologis).HasConstraintName("FK_TM_MORFOLOGI_TM_DIAGNOSA");
        });

        modelBuilder.Entity<TmObatunit>(entity =>
        {
            entity.ToTable("TM_OBATUNIT", tb =>
                {
                    tb.HasTrigger("INSERT_EXPIRED");
                    tb.HasTrigger("UPDATE_EXPIRED");
                });

            entity.Property(e => e.IdObatunit).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmPaketHarga>(entity =>
        {
            entity.Property(e => e.IdPaketkelas).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmPaketMatrix>(entity =>
        {
            entity.Property(e => e.IdPaketmatrix).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmPaketRekanan>(entity =>
        {
            entity.Property(e => e.IdPaketrekanan).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmPasien>(entity =>
        {
            entity.Property(e => e.CIscetakkartu).IsFixedLength();
            entity.Property(e => e.IdNumpasien).ValueGeneratedOnAdd();

            entity.HasOne(d => d.Rekanan).WithMany(p => p.TmPasiens).HasConstraintName("FK_TM_PASIEN_TM_REKANAN_(rekananid)");
        });

        modelBuilder.Entity<TmPemeriksaanpenunjang>(entity =>
        {
            entity.ToTable("TM_PEMERIKSAANPENUNJANG", tb => tb.HasTrigger("UPDATE_V_KDPEMERIKSAAN"));

            entity.Property(e => e.IdMasterpemeriksaanpenunjang).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmPemeriksaanpenunjangdetail>(entity =>
        {
            entity.Property(e => e.IdPenunjangdetail).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdMasterpemeriksaanpenunjangNavigation).WithMany(p => p.TmPemeriksaanpenunjangdetails).HasConstraintName("FK_TM_PEMERIKSAANPENUNJANGDETAIL_TM_PEMERIKSAANPENUNJANG");
        });

        modelBuilder.Entity<TmRekanan>(entity =>
        {
            entity.Property(e => e.IdNumrekanan).ValueGeneratedOnAdd();
            entity.Property(e => e.IsCob).HasDefaultValue(false);
        });

        modelBuilder.Entity<TmRuang>(entity =>
        {
            entity.Property(e => e.IdNumruang).ValueGeneratedOnAdd();
            entity.Property(e => e.Kelompok).IsFixedLength();

            entity.HasOne(d => d.KodeRequestobatNavigation).WithMany(p => p.TmRuangKodeRequestobatNavigations).HasConstraintName("FK_TM_RUANG_TM_GUDANG2_(requestobat)");

            entity.HasOne(d => d.VKodeinventoryNavigation).WithMany(p => p.TmRuangVKodeinventoryNavigations).HasConstraintName("FK_TM_RUANG_TM_GUDANG_(kdinventory)");
        });

        modelBuilder.Entity<TmStandartfield>(entity =>
        {
            entity.Property(e => e.IdField).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdFieldgroupNavigation).WithMany(p => p.TmStandartfields).HasConstraintName("FK_TM_STANDARTFIELD_TM_STANDARTFIELD_GROUP");
        });

        modelBuilder.Entity<TmStandartfieldGroup>(entity =>
        {
            entity.Property(e => e.IdFieldgroup).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmTarifGroup>(entity =>
        {
            entity.Property(e => e.IdGrouptarif).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmTarifHarga>(entity =>
        {
            entity.HasKey(e => e.IdTarifkelas).HasName("PK_TM_TARIF_KELAS2");

            entity.ToTable("TM_TARIF_HARGA", tb => tb.HasTrigger("UPDATE_STATUS_TM_TARIF_HARGA"));

            entity.Property(e => e.IdTarifkelas).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmTarifMatrix>(entity =>
        {
            entity.Property(e => e.IdTarifmatrix).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmTarifPelayanan>(entity =>
        {
            entity.HasKey(e => e.VKodetariflayan).HasName("PK_TM_TARIF_LAYANAN");

            entity.Property(e => e.IdTariflayan).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmTarifRekanan>(entity =>
        {
            entity.HasKey(e => e.IdTarifrekanan).HasName("PK_TM_TARIF_REKANAN2");

            entity.Property(e => e.IdTarifrekanan).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmTarifRekananSub>(entity =>
        {
            entity.Property(e => e.IdTarifrekanansub).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TmTarifdetail>(entity =>
        {
            entity.Property(e => e.IdTarifdetail).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdGrouptarifNavigation).WithMany(p => p.TmTarifdetails).HasConstraintName("FK_TM_TARIFDETAIL_TM_TARIF_GROUP");

            entity.HasOne(d => d.VKodetariflayanNavigation).WithMany(p => p.TmTarifdetails).HasConstraintName("FK_TM_TARIFDETAIL_TM_TARIF_PELAYANAN");
        });

        modelBuilder.Entity<TmTindakan>(entity =>
        {
            entity.Property(e => e.IdTindakan).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TrItemobatlangsung>(entity =>
        {
            entity.Property(e => e.IdItemobatlangsung).ValueGeneratedOnAdd();
            entity.Property(e => e.CApprove).IsFixedLength();
            entity.Property(e => e.CApproveVer).IsFixedLength();

            entity.HasOne(d => d.IdStatusNavigation).WithMany(p => p.TrItemobatlangsungs).HasConstraintName("FK_TR_ITEMOBATLANGSUNG_TM_STATUS");

            entity.HasOne(d => d.VNokuitansiNavigation).WithMany(p => p.TrItemobatlangsungs).HasConstraintName("FK_TR_ITEMOBATLANGSUNG_TT_OBATLANGSUNG");
        });

        modelBuilder.Entity<TrItempaket>(entity =>
        {
            entity.Property(e => e.IdDetailpaket).ValueGeneratedOnAdd();
            entity.Property(e => e.CApprove).IsFixedLength();
            entity.Property(e => e.CApproveVer).IsFixedLength();

            entity.HasOne(d => d.IdPaketNavigation).WithMany(p => p.TrItempakets).HasConstraintName("FK_TR_ITEMPAKET_TT_PAKET");

            entity.HasOne(d => d.IdStatusNavigation).WithMany(p => p.TrItempakets).HasConstraintName("FK_TR_ITEMPAKET_TM_STATUS");
        });

        modelBuilder.Entity<TrJadwaldokter>(entity =>
        {
            entity.HasKey(e => e.IdJadwal).HasName("PK__TR_JADWA__B4819F47A45DBF36");
        });

        modelBuilder.Entity<TrPelunasandetail>(entity =>
        {
            entity.Property(e => e.Pelunasandetailid).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TrPembayarandetail>(entity =>
        {
            entity.Property(e => e.Pembayarandetailid).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TrPembeliandetail>(entity =>
        {
            entity.Property(e => e.Pembeliandetailid).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TrPemeriksaanpenunjang>(entity =>
        {
            entity.Property(e => e.Idnum).ValueGeneratedOnAdd();
            entity.Property(e => e.CApprove).IsFixedLength();
        });

        modelBuilder.Entity<TrPemesanandetail>(entity =>
        {
            entity.HasKey(e => e.Pemesanandetailid).HasName("PK_TR_PEMESANANDETAIL_1");

            entity.Property(e => e.Pemesanandetailid).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TrPenerimaandetail>(entity =>
        {
            entity.Property(e => e.Penerimaandetailid).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TrPermintaandetail>(entity =>
        {
            entity.Property(e => e.Permintaandetailid).ValueGeneratedOnAdd();
            entity.Property(e => e.Status).IsFixedLength();
        });

        modelBuilder.Entity<TrReturdetail>(entity =>
        {
            entity.Property(e => e.Returdetailid).ValueGeneratedOnAdd();

            entity.HasOne(d => d.Retur).WithMany(p => p.TrReturdetails).HasConstraintName("FK_TR_RETURDETAIL_TT_RETURBELI");
        });

        modelBuilder.Entity<TtAcountpasien>(entity =>
        {
            entity.Property(e => e.IdAcountpasien).ValueGeneratedOnAdd();
            entity.Property(e => e.CApproveVer).IsFixedLength();
            entity.Property(e => e.Unit).HasDefaultValueSql("((0))");
        });

        modelBuilder.Entity<TtDiagnosa>(entity =>
        {
            entity.HasKey(e => e.VNomordiagnosa).HasName("PK_TT_DIAGNOSA_1");

            entity.Property(e => e.IdDiagnosa).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TtDiagnosaDetail>(entity =>
        {
            entity.HasKey(e => e.IdDiagnosadetail).HasName("PK_TT_DIAGNOSA");

            entity.Property(e => e.IdDiagnosadetail).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdStatusNavigation).WithMany(p => p.TtDiagnosaDetails).HasConstraintName("FK_TT_DIAGNOSA_TM_STATUS");

            entity.HasOne(d => d.VKddokterNavigation).WithMany(p => p.TtDiagnosaDetails).HasConstraintName("FK_TT_DIAGNOSA_TM_DOKTER");

            entity.HasOne(d => d.VNomordiagnosaNavigation).WithMany(p => p.TtDiagnosaDetails).HasConstraintName("FK_TT_DIAGNOSA_DETAIL_TT_DIAGNOSA");
        });

        modelBuilder.Entity<TtDiagnosarekap>(entity =>
        {
            entity.Property(e => e.IdDiagnosarekap).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdRegistrasiNavigation).WithMany(p => p.TtDiagnosarekaps).HasConstraintName("FK_TT_DIAGNOSAREKAP_TT_KUNJUNGAN");
        });

        modelBuilder.Entity<TtHasilpemeriksaanpd>(entity =>
        {
            entity.Property(e => e.IdAnamnesis).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TtHistoryStok>(entity =>
        {
            entity.Property(e => e.IdHistory).ValueGeneratedOnAdd();

            entity.HasOne(d => d.VKodetarifNavigation).WithMany(p => p.TtHistoryStoks).HasConstraintName("FK_TT_HISTORY_STOK_TM_GUDANG");
        });

        modelBuilder.Entity<TtKuitansi>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_TT_EDITKUITANSI");

            entity.Property(e => e.Id).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TtKuitansialke>(entity =>
        {
            entity.Property(e => e.CApprove).IsFixedLength();
            entity.Property(e => e.CApproveVer).IsFixedLength();
            entity.Property(e => e.IdNumalkes).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdStatusNavigation).WithMany(p => p.TtKuitansialkes).HasConstraintName("FK_TT_KUITANSIALKES_TM_STATUS");

            entity.HasOne(d => d.VKodeinventoryNavigation).WithMany(p => p.TtKuitansialkes).HasConstraintName("FK_TT_KUITANSIALKES_TM_GUDANG");

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TtKuitansialkes).HasConstraintName("FK_TT_KUITANSIALKES_TM_RUANG");
        });

        modelBuilder.Entity<TtKuitansiresep>(entity =>
        {
            entity.Property(e => e.CApprove).IsFixedLength();
            entity.Property(e => e.CApproveAa).IsFixedLength();
            entity.Property(e => e.CApproveVer).IsFixedLength();
            entity.Property(e => e.Idn).ValueGeneratedOnAdd();
            entity.Property(e => e.TtdDokter).HasDefaultValue("");

            entity.HasOne(d => d.IdStatusNavigation).WithMany(p => p.TtKuitansireseps).HasConstraintName("FK_TT_KUITANSIRESEP_TM_STATUS");

            entity.HasOne(d => d.VKddokterNavigation).WithMany(p => p.TtKuitansireseps).HasConstraintName("FK_TT_KUITANSIRESEP_TM_DOKTER");

            entity.HasOne(d => d.VKoderequestobatNavigation).WithMany(p => p.TtKuitansireseps).HasConstraintName("FK_TT_KUITANSIRESEP_TM_GUDANG");

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TtKuitansireseps).HasConstraintName("FK_TT_KUITANSIRESEP_TM_RUANG");
        });

        modelBuilder.Entity<TtKuitansiretur>(entity =>
        {
            entity.Property(e => e.IdRetur).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TtKuitansiudd>(entity =>
        {
            entity.Property(e => e.IdKuitansiudd).ValueGeneratedOnAdd();

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TtKuitansiudds).HasConstraintName("FK_TT_KUITANSIUDD_TM_RUANG");
        });

        modelBuilder.Entity<TtKunjungan>(entity =>
        {
            entity.Property(e => e.CIsbatal).IsFixedLength();
            entity.Property(e => e.IdNumkunjungan).ValueGeneratedOnAdd();
            entity.Property(e => e.VNomorsep).HasDefaultValue("");

            entity.HasOne(d => d.IdPasienNavigation).WithMany(p => p.TtKunjungans)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TT_KUNJUNGAN_TM_PASIEN_(idpasien)");

            entity.HasOne(d => d.IdStatusNavigation).WithMany(p => p.TtKunjungans).HasConstraintName("FK_TT_KUNJUNGAN_TM_STATUS");

            entity.HasOne(d => d.Rekanan).WithMany(p => p.TtKunjungans)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TT_KUNJUNGAN_TM_REKANAN_(rekananid)");
        });

        modelBuilder.Entity<TtObatalke>(entity =>
        {
            entity.Property(e => e.IdAlkes).ValueGeneratedOnAdd();
            entity.Property(e => e.CApprove).IsFixedLength();
            entity.Property(e => e.CApproveVer).IsFixedLength();

            entity.HasOne(d => d.IdStatusNavigation).WithMany(p => p.TtObatalkes).HasConstraintName("FK_TT_OBATALKES_TM_STATUS");
        });

        modelBuilder.Entity<TtObatlangsung>(entity =>
        {
            entity.Property(e => e.BBayar).IsFixedLength();
            entity.Property(e => e.CApproveVer).IsFixedLength();
            entity.Property(e => e.IdObatlangsung).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdStatusNavigation).WithMany(p => p.TtObatlangsungs).HasConstraintName("FK_TT_OBATLANGSUNG_TM_STATUS");
        });

        modelBuilder.Entity<TtPaket>(entity =>
        {
            entity.ToTable("TT_PAKET", tb => tb.HasTrigger("UPDATE_TT_TRANSAKSI"));

            entity.Property(e => e.IdPaket).ValueGeneratedOnAdd();
            entity.Property(e => e.CApprove).IsFixedLength();
            entity.Property(e => e.CApproveVer).IsFixedLength();
            entity.Property(e => e.VKddokter).IsFixedLength();
            entity.Property(e => e.VKdpemeriksaan).IsFixedLength();
            entity.Property(e => e.VKodetarif).IsFixedLength();
            entity.Property(e => e.VNmdokter).IsFixedLength();
            entity.Property(e => e.VNmpemeriksaan).IsFixedLength();
            entity.Property(e => e.VNmunit).IsFixedLength();

            entity.HasOne(d => d.IdMasterpemeriksaanpenunjangNavigation).WithMany(p => p.TtPakets).HasConstraintName("FK_TT_PAKET_TM_PEMERIKSAANPENUNJANG");

            entity.HasOne(d => d.IdRegistrasiNavigation).WithMany(p => p.TtPakets).HasConstraintName("FK_TT_PAKET_TT_KUNJUNGAN");

            entity.HasOne(d => d.IdStatusNavigation).WithMany(p => p.TtPakets).HasConstraintName("FK_TT_PAKET_TM_STATUS");
        });

        modelBuilder.Entity<TtPaketPb>(entity =>
        {
            entity.Property(e => e.IdPaketpb).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TtPaketPbApp>(entity =>
        {
            entity.Property(e => e.IdPaketpbApp).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdPaketpbNavigation).WithMany(p => p.TtPaketPbApps).HasConstraintName("FK_TT_PAKET_PB_APP_TT_PAKET_PB");

            entity.HasOne(d => d.VKodetarifNavigation).WithMany(p => p.TtPaketPbAppVKodetarifNavigations).HasConstraintName("FK_TT_PAKET_PB_APP_TM_GUDANG");

            entity.HasOne(d => d.VKodetarifgdgNavigation).WithMany(p => p.TtPaketPbAppVKodetarifgdgNavigations).HasConstraintName("FK_TT_PAKET_PB_APP_TM_GUDANG1");
        });

        modelBuilder.Entity<TtPaketPbAppDetail>(entity =>
        {
            entity.Property(e => e.IdPaketpbAppdetail).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdPaketpbAppNavigation).WithMany(p => p.TtPaketPbAppDetails).HasConstraintName("FK_TT_PAKET_PB_APP_DETAIL_TT_PAKET_PB_APP");
        });

        modelBuilder.Entity<TtPaketPbPakai>(entity =>
        {
            entity.Property(e => e.IdPaketpbPakai).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdPaketpbNavigation).WithMany(p => p.TtPaketPbPakais).HasConstraintName("FK_TT_PAKET_PB_PAKAI_TT_PAKET_PB");

            entity.HasOne(d => d.IdRekananNavigation).WithMany(p => p.TtPaketPbPakais).HasConstraintName("FK_TT_PAKET_PB_PAKAI_TM_REKANAN");

            entity.HasOne(d => d.VKodetarifNavigation).WithMany(p => p.TtPaketPbPakais).HasConstraintName("FK_TT_PAKET_PB_PAKAI_TM_GUDANG");
        });

        modelBuilder.Entity<TtPaketPbPakaiDetail>(entity =>
        {
            entity.Property(e => e.IdPaketpbPakaidetail).ValueGeneratedOnAdd();
            entity.Property(e => e.CApproveVer).IsFixedLength();

            entity.HasOne(d => d.IdPaketpbPakaiNavigation).WithMany(p => p.TtPaketPbPakaiDetails).HasConstraintName("FK_TT_PAKET_PB_PAKAI_DETAIL_TT_PAKET_PB_PAKAI");
        });

        modelBuilder.Entity<TtPaketPbRetur>(entity =>
        {
            entity.Property(e => e.IdPaketpbRetur).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdPaketpbNavigation).WithMany(p => p.TtPaketPbReturs).HasConstraintName("FK_TT_PAKET_PB_RETUR_TT_PAKET_PB");

            entity.HasOne(d => d.IdPaketpbPakaiNavigation).WithMany(p => p.TtPaketPbReturs)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TT_PAKET_PB_RETUR_TT_PAKET_PB_PAKAI");

            entity.HasOne(d => d.IdRekananNavigation).WithMany(p => p.TtPaketPbReturs).HasConstraintName("FK_TT_PAKET_PB_RETUR_TM_REKANAN");

            entity.HasOne(d => d.VKodetarifNavigation).WithMany(p => p.TtPaketPbReturVKodetarifNavigations).HasConstraintName("FK_TT_PAKET_PB_RETUR_TM_GUDANG");

            entity.HasOne(d => d.VKodetarifgdgNavigation).WithMany(p => p.TtPaketPbReturVKodetarifgdgNavigations).HasConstraintName("FK_TT_PAKET_PB_RETUR_TM_GUDANG1");
        });

        modelBuilder.Entity<TtPaketPbReturDetail>(entity =>
        {
            entity.Property(e => e.IdPaketpbReturdetail).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdPaketpbReturNavigation).WithMany(p => p.TtPaketPbReturDetails).HasConstraintName("FK_TT_PAKET_PB_RETUR_DETAIL_TT_PAKET_PB_RETUR");
        });

        modelBuilder.Entity<TtPasienpd>(entity =>
        {
            entity.HasKey(e => e.IdPasienpds).HasName("PK_TT_PASIENPDS2");

            entity.Property(e => e.CIsdone).IsFixedLength();
            entity.Property(e => e.IdNumpasienpds).ValueGeneratedOnAdd();
            entity.Property(e => e.VJam).IsFixedLength();

            entity.HasOne(d => d.IdJadwalNavigation).WithMany(p => p.TtPasienpds).HasConstraintName("FK_TT_PASIENPDS_TM_JADWALDOKTER");

            entity.HasOne(d => d.IdRegistrasiNavigation).WithMany(p => p.TtPasienpds)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TT_PASIENPDS_TT_KUNJUNGAN");

            entity.HasOne(d => d.IdStatusNavigation).WithMany(p => p.TtPasienpds).HasConstraintName("FK_TT_PASIENPDS_TM_STATUS");

            entity.HasOne(d => d.VKddokterNavigation).WithMany(p => p.TtPasienpds)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TT_PASIENPDS_TM_DOKTER_(dokter)");

            entity.HasOne(d => d.VKdpengirimNavigation).WithMany(p => p.TtPasienpds).HasConstraintName("FK_TT_PASIENPDS_TM_ASAL_(pengirim)");

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TtPasienpds).HasConstraintName("FK_TT_PASIENPDS_TM_RUANG_(koderuangan)");
        });

        modelBuilder.Entity<TtPasienpenunjang>(entity =>
        {
            entity.HasKey(e => e.IdPasienpenunjang).HasName("PK_TT_PASIENHEMO");

            entity.Property(e => e.CIsdone).IsFixedLength();
            entity.Property(e => e.IdNumpasienpenj).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdStatusNavigation).WithMany(p => p.TtPasienpenunjangs).HasConstraintName("FK_TT_PASIENPENUNJANG_TM_STATUS");

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TtPasienpenunjangs).HasConstraintName("FK_TT_PASIENPENUNJANG_TM_RUANG");
        });

        modelBuilder.Entity<TtPasienugd>(entity =>
        {
            entity.Property(e => e.IdNumpasienugd).ValueGeneratedOnAdd();
            entity.Property(e => e.CIsdone).IsFixedLength();
            entity.Property(e => e.CNadi).IsFixedLength();
            entity.Property(e => e.CSuhutubuh).IsFixedLength();
            entity.Property(e => e.CTekanandarah).IsFixedLength();

            entity.HasOne(d => d.IdRegistrasiNavigation).WithMany(p => p.TtPasienugds)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TT_PASIENUGD_TT_KUNJUNGAN");

            entity.HasOne(d => d.IdStatusNavigation).WithMany(p => p.TtPasienugds).HasConstraintName("FK_TT_PASIENUGD_TM_STATUS");

            entity.HasOne(d => d.VKddokterNavigation).WithMany(p => p.TtPasienugds).HasConstraintName("FK_TT_PASIENUGD_TM_DOKTER");

            entity.HasOne(d => d.VKdpengirimNavigation).WithMany(p => p.TtPasienugds).HasConstraintName("FK_TT_PASIENUGD_TM_ASAL");

            entity.HasOne(d => d.VKoderuanganNavigation).WithMany(p => p.TtPasienugds).HasConstraintName("FK_TT_PASIENUGD_TM_RUANG");
        });

        modelBuilder.Entity<TtPembayaran>(entity =>
        {
            entity.HasKey(e => e.VNomorbyrpasien).HasName("PK_TT_PEMBAYARAN_1");

            entity.Property(e => e.Idpembayaran).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<TtPembayaranDetail>(entity =>
        {
            entity.HasKey(e => e.Idn).HasName("PK_TT_PEMBAYARAN");

            entity.Property(e => e.Idn).ValueGeneratedOnAdd();
            entity.Property(e => e.CStatus).IsFixedLength();

            entity.HasOne(d => d.IdStatusNavigation).WithMany(p => p.TtPembayaranDetails).HasConstraintName("FK_TT_PEMBAYARAN_TM_STATUS");
        });

        modelBuilder.Entity<TtPemeriksaanpa>(entity =>
        {
            entity.Property(e => e.VNmdokter).IsFixedLength();

            entity.HasOne(d => d.VKddokterNavigation).WithMany(p => p.TtPemeriksaanpas).HasConstraintName("FK_TT_PEMERIKSAANPA_TM_DOKTER");
        });

        modelBuilder.Entity<TtPenjadwalan>(entity =>
        {
            entity.Property(e => e.IdPenjadwalan).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdPasienNavigation).WithMany(p => p.TtPenjadwalans).HasConstraintName("FK_TT_PENJADWALAN_TM_PASIEN");
        });

        modelBuilder.Entity<TtResep>(entity =>
        {
            entity.HasKey(e => e.IdObatresep).HasName("PK_TT_RESEPX");

            entity.Property(e => e.IdObatresep).ValueGeneratedOnAdd();
            entity.Property(e => e.CApprove).IsFixedLength();
            entity.Property(e => e.CApproveAa).IsFixedLength();
            entity.Property(e => e.CApproveVer).IsFixedLength();
            entity.Property(e => e.DDosisracikan).IsFixedLength();
        });

        modelBuilder.Entity<TtResepTulisracikan>(entity =>
        {
            entity.Property(e => e.CApprove).IsFixedLength();
        });

        modelBuilder.Entity<TtResepudd>(entity =>
        {
            entity.Property(e => e.IdResepudd).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdKuitansiuddNavigation).WithMany(p => p.TtResepudds).HasConstraintName("FK_TT_RESEPUDD_TT_KUITANSIUDD");
        });

        modelBuilder.Entity<TtRetur>(entity =>
        {
            entity.Property(e => e.IdReturdetail).ValueGeneratedOnAdd();
            entity.Property(e => e.CApprove).IsFixedLength();
            entity.Property(e => e.CApproveVer).IsFixedLength();

            entity.HasOne(d => d.IdStatusNavigation).WithMany(p => p.TtReturs).HasConstraintName("FK_TT_RETUR_TM_STATUS");

            entity.HasOne(d => d.VNomorreturNavigation).WithMany(p => p.TtReturs).HasConstraintName("FK_TT_RETUR_TT_KUITANSIRETUR");
        });

        modelBuilder.Entity<TtReturApp>(entity =>
        {
            entity.Property(e => e.IdReturapp).ValueGeneratedOnAdd();

            entity.HasOne(d => d.VKodetarifNavigation).WithMany(p => p.TtReturApps).HasConstraintName("FK_TT_RETUR_APP_TM_GUDANG");
        });

        modelBuilder.Entity<TtReturAppDetail>(entity =>
        {
            entity.Property(e => e.IdReturappdetail).ValueGeneratedOnAdd();
            entity.Property(e => e.IdStatus).IsFixedLength();

            entity.HasOne(d => d.IdReturappNavigation).WithMany(p => p.TtReturAppDetails).HasConstraintName("FK_TT_RETUR_APP_DETAIL_TT_RETUR_APP");
        });

        modelBuilder.Entity<TtReturDist>(entity =>
        {
            entity.Property(e => e.IdReturdist).ValueGeneratedOnAdd();

            entity.HasOne(d => d.VKodetarifNavigation).WithMany(p => p.TtReturDists).HasConstraintName("FK_TT_RETUR_DIST_TM_GUDANG");
        });

        modelBuilder.Entity<TtReturDistDetail>(entity =>
        {
            entity.Property(e => e.IdReturdistdetail).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdReturdistNavigation).WithMany(p => p.TtReturDistDetails).HasConstraintName("FK_TT_RETUR_DIST_DETAIL_TT_RETUR_DIST");
        });

        modelBuilder.Entity<TtReturalke>(entity =>
        {
            entity.Property(e => e.CApprove).IsFixedLength();
            entity.Property(e => e.CApproveVer).IsFixedLength();
        });

        modelBuilder.Entity<TtRetursupplier>(entity =>
        {
            entity.HasKey(e => e.Returid).HasName("PK_TT_RETURBELI");

            entity.Property(e => e.Returid).ValueGeneratedOnAdd();
            entity.Property(e => e.Status).IsFixedLength();
        });

        modelBuilder.Entity<TtTindakan>(entity =>
        {
            entity.Property(e => e.IdTindakan).ValueGeneratedOnAdd();
            entity.Property(e => e.CApprove).IsFixedLength();
            entity.Property(e => e.CApprove2).IsFixedLength();

            entity.HasOne(d => d.IdRegistrasiNavigation).WithMany(p => p.TtTindakans).HasConstraintName("FK_TT_TINDAKAN_TT_KUNJUNGAN");

            entity.HasOne(d => d.IdStatusNavigation).WithMany(p => p.TtTindakans).HasConstraintName("FK_TT_TINDAKAN_TM_STATUS");
        });

        modelBuilder.Entity<TtTindakanDetail>(entity =>
        {
            entity.HasKey(e => e.IdTindakandetail).HasName("PK_TT_TINDAKAN1");

            entity.ToTable("TT_TINDAKAN_DETAIL", tb =>
                {
                    tb.HasTrigger("INSERT_STATUS_TINDAKAN");
                    tb.HasTrigger("UPDATE_STATUS_TINDAKAN");
                });

            entity.Property(e => e.IdTindakandetail).ValueGeneratedOnAdd();
            entity.Property(e => e.CApprove).IsFixedLength();
            entity.Property(e => e.CApprove2).IsFixedLength();
        });

        modelBuilder.Entity<TtTransaksi>(entity =>
        {
            entity.ToTable("TT_TRANSAKSI", tb =>
                {
                    tb.HasTrigger("INSERT_STATUS_TRANSAKSI");
                    tb.HasTrigger("UPDATE_STATUS_TRANSAKSI");
                });

            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.CApprove).IsFixedLength();
            entity.Property(e => e.CApprove2).IsFixedLength();
            entity.Property(e => e.IsBayar).IsFixedLength();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}